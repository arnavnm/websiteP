{"ast":null,"code":"import { CLOCK_SKEW_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES } from \"./constants\";\nexport var isRetryableByTrait = function (error) {\n  return error.$retryable !== undefined;\n};\nexport var isClockSkewError = function (error) {\n  return CLOCK_SKEW_ERROR_CODES.includes(error.name);\n};\nexport var isThrottlingError = function (error) {\n  var _a, _b;\n\n  return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 || THROTTLING_ERROR_CODES.includes(error.name) || ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexport var isTransientError = function (error) {\n  var _a;\n\n  return TRANSIENT_ERROR_CODES.includes(error.name) || TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};","map":{"version":3,"mappings":"AAAA,SAASA,sBAAT,EAAiCC,sBAAjC,EAAyDC,qBAAzD,EAAgFC,4BAAhF,QAAqH,aAArH;AACA,OAAO,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiB;EAAE,OAAOA,KAAK,CAACC,UAAN,KAAqBC,SAA5B;AAAwC,CAApF;AACP,OAAO,IAAIC,gBAAgB,GAAG,UAAUH,KAAV,EAAiB;EAAE,OAAOL,sBAAsB,CAACS,QAAvB,CAAgCJ,KAAK,CAACK,IAAtC,CAAP;AAAqD,CAA/F;AACP,OAAO,IAAIC,iBAAiB,GAAG,UAAUN,KAAV,EAAiB;EAC5C,IAAIO,EAAJ,EAAQC,EAAR;;EACA,OAAO,CAAC,CAACD,EAAE,GAAGP,KAAK,CAACS,SAAZ,MAA2B,IAA3B,IAAmCF,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACG,cAAhE,MAAoF,GAApF,IACHd,sBAAsB,CAACQ,QAAvB,CAAgCJ,KAAK,CAACK,IAAtC,CADG,IAEH,CAAC,CAACG,EAAE,GAAGR,KAAK,CAACC,UAAZ,MAA4B,IAA5B,IAAoCO,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACG,UAAjE,KAAgF,IAFpF;AAGH,CALM;AAMP,OAAO,IAAIC,gBAAgB,GAAG,UAAUZ,KAAV,EAAiB;EAC3C,IAAIO,EAAJ;;EACA,OAAOV,qBAAqB,CAACO,QAAtB,CAA+BJ,KAAK,CAACK,IAArC,KACHP,4BAA4B,CAACM,QAA7B,CAAsC,CAAC,CAACG,EAAE,GAAGP,KAAK,CAACS,SAAZ,MAA2B,IAA3B,IAAmCF,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACG,cAAhE,KAAmF,CAAzH,CADJ;AAEH,CAJM","names":["CLOCK_SKEW_ERROR_CODES","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","isRetryableByTrait","error","$retryable","undefined","isClockSkewError","includes","name","isThrottlingError","$metadata","_a","httpStatusCode","_b","throttling","isTransientError"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/service-error-classification/src/index.ts"],"sourcesContent":["import { SdkError } from \"@aws-sdk/smithy-client\";\n\nimport {\n  CLOCK_SKEW_ERROR_CODES,\n  THROTTLING_ERROR_CODES,\n  TRANSIENT_ERROR_CODES,\n  TRANSIENT_ERROR_STATUS_CODES,\n} from \"./constants\";\n\nexport const isRetryableByTrait = (error: SdkError) => error.$retryable !== undefined;\n\nexport const isClockSkewError = (error: SdkError) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\n\nexport const isThrottlingError = (error: SdkError) =>\n  error.$metadata?.httpStatusCode === 429 ||\n  THROTTLING_ERROR_CODES.includes(error.name) ||\n  error.$retryable?.throttling == true;\n\nexport const isTransientError = (error: SdkError) =>\n  TRANSIENT_ERROR_CODES.includes(error.name) ||\n  TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\n"]},"metadata":{},"sourceType":"module"}