{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteBucketWebsiteRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlDeleteBucketWebsiteCommand, serializeAws_restXmlDeleteBucketWebsiteCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This operation removes the website configuration for a bucket. Amazon S3 returns a <code>200\n *             OK</code> response upon successfully deleting a website configuration on the specified\n *          bucket. You will get a <code>200 OK</code> response if the website configuration you are\n *          trying to delete does not exist on the bucket. Amazon S3 returns a <code>404</code> response if\n *          the bucket specified in the request does not exist.</p>\n *\n *          <p>This DELETE operation requires the <code>S3:DeleteBucketWebsite</code> permission. By\n *          default, only the bucket owner can delete the website configuration attached to a bucket.\n *          However, bucket owners can grant other users permission to delete the website configuration\n *          by writing a bucket policy granting them the <code>S3:DeleteBucketWebsite</code>\n *          permission. </p>\n *\n *          <p>For more information about hosting websites, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting Websites on Amazon S3</a>. </p>\n *\n *          <p>The following operations are related to <code>DeleteBucketWebsite</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html\">GetBucketWebsite</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html\">PutBucketWebsite</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar DeleteBucketWebsiteCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteBucketWebsiteCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteBucketWebsiteCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteBucketWebsiteCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"DeleteBucketWebsiteCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteBucketWebsiteRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteBucketWebsiteCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlDeleteBucketWebsiteCommand(input, context);\n  };\n\n  DeleteBucketWebsiteCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context);\n  };\n\n  return DeleteBucketWebsiteCommand;\n}($Command);\n\nexport { DeleteBucketWebsiteCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,0BAAT,QAA2C,oBAA3C;AACA,SAASC,gDAAT,EAA2DC,8CAA3D,QAAkH,0BAAlH;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,0BAA0B;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC9DT,SAAS,CAACQ,0BAAD,EAA6BC,MAA7B,CAAT,CAD8D,CAE9D;EACA;;;EACA,SAASD,0BAAT,CAAoCE,KAApC,EAA2C;IACvC,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALuC,CAMvC;EACH;EACD;AACJ;AACA;;;EACIH,0BAA0B,CAACK,SAA3B,CAAqCC,iBAArC,GAAyD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IACpG,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBf,uBAAuB,CAACY,aAAD,CAAhD;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,4BAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,0BAA0B,CAAC4B,kBAJ1B;MAK1BC,wBAAwB,EAAE,UAAUC,MAAV,EAAkB;QAAE,OAAOA,MAAP;MAAgB;IALpC,CAA9B;IAOA,IAAIC,cAAc,GAAGhB,aAAa,CAACgB,cAAnC;IACA,OAAOV,KAAK,CAACW,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCjB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAlBD;;EAmBAnB,0BAA0B,CAACK,SAA3B,CAAqCO,SAArC,GAAiD,UAAUV,KAAV,EAAiB0B,OAAjB,EAA0B;IACvE,OAAOjC,8CAA8C,CAACO,KAAD,EAAQ0B,OAAR,CAArD;EACH,CAFD;;EAGA5B,0BAA0B,CAACK,SAA3B,CAAqCQ,WAArC,GAAmD,UAAUU,MAAV,EAAkBK,OAAlB,EAA2B;IAC1E,OAAOlC,gDAAgD,CAAC6B,MAAD,EAASK,OAAT,CAAvD;EACH,CAFD;;EAGA,OAAO5B,0BAAP;AACH,CAzC+C,CAyC9CD,QAzC8C,CAAhD;;AA0CA,SAASC,0BAAT","names":["DeleteBucketWebsiteRequest","deserializeAws_restXmlDeleteBucketWebsiteCommand","serializeAws_restXmlDeleteBucketWebsiteCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteBucketWebsiteCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/client-s3/commands/DeleteBucketWebsiteCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { DeleteBucketWebsiteRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlDeleteBucketWebsiteCommand,\n  serializeAws_restXmlDeleteBucketWebsiteCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteBucketWebsiteCommandInput = DeleteBucketWebsiteRequest;\nexport type DeleteBucketWebsiteCommandOutput = __MetadataBearer;\n\n/**\n * <p>This operation removes the website configuration for a bucket. Amazon S3 returns a <code>200\n *             OK</code> response upon successfully deleting a website configuration on the specified\n *          bucket. You will get a <code>200 OK</code> response if the website configuration you are\n *          trying to delete does not exist on the bucket. Amazon S3 returns a <code>404</code> response if\n *          the bucket specified in the request does not exist.</p>\n *\n *          <p>This DELETE operation requires the <code>S3:DeleteBucketWebsite</code> permission. By\n *          default, only the bucket owner can delete the website configuration attached to a bucket.\n *          However, bucket owners can grant other users permission to delete the website configuration\n *          by writing a bucket policy granting them the <code>S3:DeleteBucketWebsite</code>\n *          permission. </p>\n *\n *          <p>For more information about hosting websites, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting Websites on Amazon S3</a>. </p>\n *\n *          <p>The following operations are related to <code>DeleteBucketWebsite</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html\">GetBucketWebsite</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html\">PutBucketWebsite</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class DeleteBucketWebsiteCommand extends $Command<\n  DeleteBucketWebsiteCommandInput,\n  DeleteBucketWebsiteCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteBucketWebsiteCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteBucketWebsiteCommandInput, DeleteBucketWebsiteCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"DeleteBucketWebsiteCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteBucketWebsiteRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteBucketWebsiteCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlDeleteBucketWebsiteCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteBucketWebsiteCommandOutput> {\n    return deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}