{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { isIdentifyLabelsInput, isIdentifyEntitiesInput, isIdentifyTextInput } from '../Predictions';\nimport { Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractIdentifyPredictionsProvider');\n\nvar AbstractIdentifyPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AbstractIdentifyPredictionsProvider, _super);\n\n  function AbstractIdentifyPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractIdentifyPredictionsProvider.prototype.getCategory = function () {\n    return 'Identify';\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identify = function (input) {\n    if (isIdentifyTextInput(input)) {\n      logger.debug('identifyText');\n      return this.identifyText(input);\n    } else if (isIdentifyLabelsInput(input)) {\n      logger.debug('identifyLabels');\n      return this.identifyLabels(input);\n    } else if (isIdentifyEntitiesInput(input)) {\n      logger.debug('identifyEntities');\n      return this.identifyEntities(input);\n    }\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identifyText = function (input) {\n    throw new Error('identifyText is not implemented by this provider.');\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identifyLabels = function (input) {\n    throw new Error('identifyLabels is not implemented by this provider');\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identifyEntities = function (input) {\n    throw new Error('identifyEntities is not implemented by this provider');\n  };\n\n  return AbstractIdentifyPredictionsProvider;\n}(AbstractPredictionsProvider);\n\nexport { AbstractIdentifyPredictionsProvider };","map":{"version":3,"mappings":"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","names":["AbstractPredictionsProvider","isIdentifyLabelsInput","isIdentifyEntitiesInput","isIdentifyTextInput","Logger","logger","__extends","AbstractIdentifyPredictionsProvider","input","debug","identifyText","identifyLabels","identifyEntities","Error"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/predictions/src/types/Providers/AbstractIdentifyPredictionsProvider.ts"],"sourcesContent":["import { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport {\n\tIdentifyLabelsInput,\n\tIdentifyEntitiesInput,\n\tisIdentifyLabelsInput,\n\tisIdentifyEntitiesInput,\n\tIdentifyTextInput,\n\tisIdentifyTextInput,\n\tIdentifyTextOutput,\n\tIdentifyLabelsOutput,\n\tIdentifyEntitiesOutput,\n} from '../Predictions';\nimport { Logger } from '@aws-amplify/core';\nconst logger = new Logger('AbstractIdentifyPredictionsProvider');\n\nexport abstract class AbstractIdentifyPredictionsProvider extends AbstractPredictionsProvider {\n\tgetCategory(): string {\n\t\treturn 'Identify';\n\t}\n\n\tidentify(\n\t\tinput: IdentifyTextInput | IdentifyLabelsInput | IdentifyEntitiesInput\n\t): Promise<\n\t\tIdentifyTextOutput | IdentifyLabelsOutput | IdentifyEntitiesOutput\n\t> {\n\t\tif (isIdentifyTextInput(input)) {\n\t\t\tlogger.debug('identifyText');\n\t\t\treturn this.identifyText(input);\n\t\t} else if (isIdentifyLabelsInput(input)) {\n\t\t\tlogger.debug('identifyLabels');\n\t\t\treturn this.identifyLabels(input);\n\t\t} else if (isIdentifyEntitiesInput(input)) {\n\t\t\tlogger.debug('identifyEntities');\n\t\t\treturn this.identifyEntities(input);\n\t\t}\n\t}\n\n\tprotected identifyText(\n\t\tinput: IdentifyTextInput\n\t): Promise<IdentifyTextOutput> {\n\t\tthrow new Error('identifyText is not implemented by this provider.');\n\t}\n\n\tprotected identifyLabels(\n\t\tinput: IdentifyLabelsInput\n\t): Promise<IdentifyLabelsOutput> {\n\t\tthrow new Error('identifyLabels is not implemented by this provider');\n\t}\n\n\tprotected identifyEntities(\n\t\tinput: IdentifyEntitiesInput\n\t): Promise<IdentifyEntitiesOutput> {\n\t\tthrow new Error('identifyEntities is not implemented by this provider');\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}