{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nimport { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { ModelPredicateCreator } from '../predicates';\nimport { OpType } from '../types';\nimport { exhaustiveCheck, getNow, SYNC, USER } from '../util';\nimport DataStoreConnectivity from './datastoreConnectivity';\nimport { ModelMerger } from './merger';\nimport { MutationEventOutbox } from './outbox';\nimport { MutationProcessor } from './processors/mutation';\nimport { CONTROL_MSG, SubscriptionProcessor } from './processors/subscription';\nimport { SyncProcessor } from './processors/sync';\nimport { createMutationInstanceFromModelOperation, predicateToGraphQLCondition } from './utils';\nvar isNode = browserOrNode().isNode;\nvar logger = new Logger('DataStore');\nvar ownSymbol = Symbol('sync');\nexport var ControlMessage;\n\n(function (ControlMessage) {\n  ControlMessage[\"SYNC_ENGINE_STORAGE_SUBSCRIBED\"] = \"storageSubscribed\";\n  ControlMessage[\"SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED\"] = \"subscriptionsEstablished\";\n  ControlMessage[\"SYNC_ENGINE_SYNC_QUERIES_STARTED\"] = \"syncQueriesStarted\";\n  ControlMessage[\"SYNC_ENGINE_SYNC_QUERIES_READY\"] = \"syncQueriesReady\";\n  ControlMessage[\"SYNC_ENGINE_MODEL_SYNCED\"] = \"modelSynced\";\n  ControlMessage[\"SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED\"] = \"outboxMutationEnqueued\";\n  ControlMessage[\"SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED\"] = \"outboxMutationProcessed\";\n  ControlMessage[\"SYNC_ENGINE_OUTBOX_STATUS\"] = \"outboxStatus\";\n  ControlMessage[\"SYNC_ENGINE_NETWORK_STATUS\"] = \"networkStatus\";\n  ControlMessage[\"SYNC_ENGINE_READY\"] = \"ready\";\n})(ControlMessage || (ControlMessage = {}));\n\nvar SyncEngine =\n/** @class */\nfunction () {\n  function SyncEngine(schema, namespaceResolver, modelClasses, userModelClasses, storage, modelInstanceCreator, conflictHandler, errorHandler, syncPredicates, amplifyConfig, authModeStrategy, amplifyContext) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n\n    this.schema = schema;\n    this.namespaceResolver = namespaceResolver;\n    this.modelClasses = modelClasses;\n    this.userModelClasses = userModelClasses;\n    this.storage = storage;\n    this.modelInstanceCreator = modelInstanceCreator;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.amplifyContext = amplifyContext;\n    this.online = false;\n    this.modelSyncedStatus = new WeakMap();\n    var MutationEvent = this.modelClasses['MutationEvent'];\n    this.outbox = new MutationEventOutbox(this.schema, MutationEvent, modelInstanceCreator, ownSymbol);\n    this.modelMerger = new ModelMerger(this.outbox, ownSymbol);\n    this.syncQueriesProcessor = new SyncProcessor(this.schema, this.syncPredicates, this.amplifyConfig, this.authModeStrategy, errorHandler, this.amplifyContext);\n    this.subscriptionsProcessor = new SubscriptionProcessor(this.schema, this.syncPredicates, this.amplifyConfig, this.authModeStrategy, errorHandler, this.amplifyContext);\n    this.mutationsProcessor = new MutationProcessor(this.schema, this.storage, this.userModelClasses, this.outbox, this.modelInstanceCreator, MutationEvent, this.amplifyConfig, this.authModeStrategy, errorHandler, conflictHandler, this.amplifyContext);\n    this.datastoreConnectivity = new DataStoreConnectivity();\n  }\n\n  SyncEngine.prototype.getModelSyncedStatus = function (modelConstructor) {\n    return this.modelSyncedStatus.get(modelConstructor);\n  };\n\n  SyncEngine.prototype.start = function (params) {\n    var _this = this;\n\n    return new Observable(function (observer) {\n      logger.log('starting sync engine...');\n      var subscriptions = [];\n\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var err_1, startPromise, hasMutationsInOutbox;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n\n                return [4\n                /*yield*/\n                , this.setupModels(params)];\n\n              case 1:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 3];\n\n              case 2:\n                err_1 = _a.sent();\n                observer.error(err_1);\n                return [2\n                /*return*/\n                ];\n\n              case 3:\n                startPromise = new Promise(function (resolve) {\n                  _this.datastoreConnectivity.status().subscribe(function (_a) {\n                    var online = _a.online;\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var ctlSubsObservable_1, dataSubsObservable, err_2, error_1;\n\n                      var _b;\n\n                      var _this = this;\n\n                      return __generator(this, function (_c) {\n                        switch (_c.label) {\n                          case 0:\n                            if (!(online && !this.online)) return [3\n                            /*break*/\n                            , 10];\n                            this.online = online;\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_NETWORK_STATUS,\n                              data: {\n                                active: this.online\n                              }\n                            });\n                            dataSubsObservable = void 0;\n                            if (!isNode) return [3\n                            /*break*/\n                            , 1];\n                            logger.warn('Realtime disabled when in a server-side environment');\n                            return [3\n                            /*break*/\n                            , 6];\n\n                          case 1:\n                            //#region GraphQL Subscriptions\n                            _b = __read(this.subscriptionsProcessor.start(), 2), // const ctlObservable: Observable<CONTROL_MSG>\n                            ctlSubsObservable_1 = _b[0], // const dataObservable: Observable<[TransformerMutationType, SchemaModel, Readonly<{\n                            // id: string;\n                            // } & Record<string, any>>]>\n                            dataSubsObservable = _b[1];\n                            _c.label = 2;\n\n                          case 2:\n                            _c.trys.push([2, 4,, 5]);\n\n                            return [4\n                            /*yield*/\n                            , new Promise(function (resolve, reject) {\n                              var ctlSubsSubscription = ctlSubsObservable_1.subscribe({\n                                next: function next(msg) {\n                                  if (msg === CONTROL_MSG.CONNECTED) {\n                                    resolve();\n                                  }\n                                },\n                                error: function error(err) {\n                                  reject(err);\n\n                                  var handleDisconnect = _this.disconnectionHandler();\n\n                                  handleDisconnect(err);\n                                }\n                              });\n                              subscriptions.push(ctlSubsSubscription);\n                            })];\n\n                          case 3:\n                            _c.sent();\n\n                            return [3\n                            /*break*/\n                            , 5];\n\n                          case 4:\n                            err_2 = _c.sent();\n                            observer.error(err_2);\n                            return [2\n                            /*return*/\n                            ];\n\n                          case 5:\n                            logger.log('Realtime ready');\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED\n                            });\n                            _c.label = 6;\n\n                          case 6:\n                            _c.trys.push([6, 8,, 9]);\n\n                            return [4\n                            /*yield*/\n                            , new Promise(function (resolve, reject) {\n                              var syncQuerySubscription = _this.syncQueriesObservable().subscribe({\n                                next: function next(message) {\n                                  var type = message.type;\n\n                                  if (type === ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY) {\n                                    resolve();\n                                  }\n\n                                  observer.next(message);\n                                },\n                                complete: function complete() {\n                                  resolve();\n                                },\n                                error: function error(_error) {\n                                  reject(_error);\n                                }\n                              });\n\n                              if (syncQuerySubscription) {\n                                subscriptions.push(syncQuerySubscription);\n                              }\n                            })];\n\n                          case 7:\n                            _c.sent();\n\n                            return [3\n                            /*break*/\n                            , 9];\n\n                          case 8:\n                            error_1 = _c.sent();\n                            observer.error(error_1);\n                            return [2\n                            /*return*/\n                            ];\n\n                          case 9:\n                            //#endregion\n                            //#region process mutations\n                            subscriptions.push(this.mutationsProcessor.start().subscribe(function (_a) {\n                              var modelDefinition = _a.modelDefinition,\n                                  item = _a.model,\n                                  hasMore = _a.hasMore;\n                              var modelConstructor = _this.userModelClasses[modelDefinition.name];\n\n                              var model = _this.modelInstanceCreator(modelConstructor, item);\n\n                              _this.storage.runExclusive(function (storage) {\n                                return _this.modelMerger.merge(storage, model);\n                              });\n\n                              observer.next({\n                                type: ControlMessage.SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED,\n                                data: {\n                                  model: modelConstructor,\n                                  element: model\n                                }\n                              });\n                              observer.next({\n                                type: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n                                data: {\n                                  isEmpty: !hasMore\n                                }\n                              });\n                            })); //#endregion\n                            //#region Merge subscriptions buffer\n                            // TODO: extract to function\n\n                            if (!isNode) {\n                              subscriptions.push(dataSubsObservable.subscribe(function (_a) {\n                                var _b = __read(_a, 3),\n                                    _transformerMutationType = _b[0],\n                                    modelDefinition = _b[1],\n                                    item = _b[2];\n\n                                var modelConstructor = _this.userModelClasses[modelDefinition.name];\n\n                                var model = _this.modelInstanceCreator(modelConstructor, item);\n\n                                _this.storage.runExclusive(function (storage) {\n                                  return _this.modelMerger.merge(storage, model);\n                                });\n                              }));\n                            }\n\n                            return [3\n                            /*break*/\n                            , 11];\n\n                          case 10:\n                            if (!online) {\n                              this.online = online;\n                              observer.next({\n                                type: ControlMessage.SYNC_ENGINE_NETWORK_STATUS,\n                                data: {\n                                  active: this.online\n                                }\n                              });\n                              subscriptions.forEach(function (sub) {\n                                return sub.unsubscribe();\n                              });\n                              subscriptions = [];\n                            }\n\n                            _c.label = 11;\n\n                          case 11:\n                            resolve();\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  });\n                });\n                this.storage.observe(null, null, ownSymbol).filter(function (_a) {\n                  var model = _a.model;\n\n                  var modelDefinition = _this.getModelDefinition(model);\n\n                  return modelDefinition.syncable === true;\n                }).subscribe({\n                  next: function next(_a) {\n                    var opType = _a.opType,\n                        model = _a.model,\n                        element = _a.element,\n                        condition = _a.condition;\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var namespace, MutationEventConstructor, graphQLCondition, mutationEvent;\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            namespace = this.schema.namespaces[this.namespaceResolver(model)];\n                            MutationEventConstructor = this.modelClasses['MutationEvent'];\n                            graphQLCondition = predicateToGraphQLCondition(condition);\n                            mutationEvent = createMutationInstanceFromModelOperation(namespace.relationships, this.getModelDefinition(model), opType, model, element, graphQLCondition, MutationEventConstructor, this.modelInstanceCreator);\n                            return [4\n                            /*yield*/\n                            , this.outbox.enqueue(this.storage, mutationEvent)];\n\n                          case 1:\n                            _b.sent();\n\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED,\n                              data: {\n                                model: model,\n                                element: element\n                              }\n                            });\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n                              data: {\n                                isEmpty: false\n                              }\n                            });\n                            return [4\n                            /*yield*/\n                            , startPromise];\n\n                          case 2:\n                            _b.sent();\n\n                            if (this.online) {\n                              this.mutationsProcessor.resume();\n                            }\n\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  }\n                });\n                observer.next({\n                  type: ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED\n                });\n                return [4\n                /*yield*/\n                , this.outbox.peek(this.storage)];\n\n              case 4:\n                hasMutationsInOutbox = _a.sent() === undefined;\n                observer.next({\n                  type: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n                  data: {\n                    isEmpty: hasMutationsInOutbox\n                  }\n                });\n                return [4\n                /*yield*/\n                , startPromise];\n\n              case 5:\n                _a.sent();\n\n                observer.next({\n                  type: ControlMessage.SYNC_ENGINE_READY\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n      };\n    });\n  };\n\n  SyncEngine.prototype.getModelsMetadataWithNextFullSync = function (currentTimeStamp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var modelLastSync, _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = Map.bind;\n            return [4\n            /*yield*/\n            , this.getModelsMetadata()];\n\n          case 1:\n            modelLastSync = new (_a.apply(Map, [void 0, _b.sent().map(function (_a) {\n              var namespace = _a.namespace,\n                  model = _a.model,\n                  lastSync = _a.lastSync,\n                  lastFullSync = _a.lastFullSync,\n                  fullSyncInterval = _a.fullSyncInterval,\n                  lastSyncPredicate = _a.lastSyncPredicate;\n              var nextFullSync = lastFullSync + fullSyncInterval;\n              var syncFrom = !lastFullSync || nextFullSync < currentTimeStamp ? 0 // perform full sync if expired\n              : lastSync; // perform delta sync\n\n              return [_this.schema.namespaces[namespace].models[model], [namespace, syncFrom]];\n            })]))();\n            return [2\n            /*return*/\n            , modelLastSync];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.syncQueriesObservable = function () {\n    var _this = this;\n\n    if (!this.online) {\n      return Observable.of();\n    }\n\n    return new Observable(function (observer) {\n      var syncQueriesSubscription;\n      var waitTimeoutId;\n\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _loop_1, this_1;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _loop_1 = function _loop_1() {\n                  var count, modelLastSync, paginatingModels, newestFullSyncStartedAt, theInterval, start, duration, newestStartedAt, msNextFullSync;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        count = new WeakMap();\n                        return [4\n                        /*yield*/\n                        , this_1.getModelsMetadataWithNextFullSync(Date.now())];\n\n                      case 1:\n                        modelLastSync = _a.sent();\n                        paginatingModels = new Set(modelLastSync.keys());\n                        return [4\n                        /*yield*/\n                        , new Promise(function (resolve) {\n                          syncQueriesSubscription = _this.syncQueriesProcessor.start(modelLastSync).subscribe({\n                            next: function next(_a) {\n                              var namespace = _a.namespace,\n                                  modelDefinition = _a.modelDefinition,\n                                  items = _a.items,\n                                  done = _a.done,\n                                  startedAt = _a.startedAt,\n                                  isFullSync = _a.isFullSync;\n                              return __awaiter(_this, void 0, void 0, function () {\n                                var modelConstructor, modelName, modelMetadata_1, lastFullSync, fullSyncInterval, counts;\n\n                                var _this = this;\n\n                                return __generator(this, function (_b) {\n                                  switch (_b.label) {\n                                    case 0:\n                                      modelConstructor = this.userModelClasses[modelDefinition.name];\n\n                                      if (!count.has(modelConstructor)) {\n                                        count.set(modelConstructor, {\n                                          new: 0,\n                                          updated: 0,\n                                          deleted: 0\n                                        });\n                                        start = getNow();\n                                        newestStartedAt = newestStartedAt === undefined ? startedAt : Math.max(newestStartedAt, startedAt);\n                                      }\n                                      /**\n                                       * If there are mutations in the outbox for a given id, those need to be\n                                       * merged individually. Otherwise, we can merge them in batches.\n                                       */\n\n\n                                      return [4\n                                      /*yield*/\n                                      , this.storage.runExclusive(function (storage) {\n                                        return __awaiter(_this, void 0, void 0, function () {\n                                          var idsInOutbox, oneByOne, page, opTypeCount, oneByOne_1, oneByOne_1_1, item, opType, e_1_1, _a, _b, _c, counts;\n\n                                          var e_1, _d;\n\n                                          return __generator(this, function (_e) {\n                                            switch (_e.label) {\n                                              case 0:\n                                                return [4\n                                                /*yield*/\n                                                , this.outbox.getModelIds(storage)];\n\n                                              case 1:\n                                                idsInOutbox = _e.sent();\n                                                oneByOne = [];\n                                                page = items.filter(function (item) {\n                                                  if (!idsInOutbox.has(item.id)) {\n                                                    return true;\n                                                  }\n\n                                                  oneByOne.push(item);\n                                                  return false;\n                                                });\n                                                opTypeCount = [];\n                                                _e.label = 2;\n\n                                              case 2:\n                                                _e.trys.push([2, 7, 8, 9]);\n\n                                                oneByOne_1 = __values(oneByOne), oneByOne_1_1 = oneByOne_1.next();\n                                                _e.label = 3;\n\n                                              case 3:\n                                                if (!!oneByOne_1_1.done) return [3\n                                                /*break*/\n                                                , 6];\n                                                item = oneByOne_1_1.value;\n                                                return [4\n                                                /*yield*/\n                                                , this.modelMerger.merge(storage, item)];\n\n                                              case 4:\n                                                opType = _e.sent();\n\n                                                if (opType !== undefined) {\n                                                  opTypeCount.push([item, opType]);\n                                                }\n\n                                                _e.label = 5;\n\n                                              case 5:\n                                                oneByOne_1_1 = oneByOne_1.next();\n                                                return [3\n                                                /*break*/\n                                                , 3];\n\n                                              case 6:\n                                                return [3\n                                                /*break*/\n                                                , 9];\n\n                                              case 7:\n                                                e_1_1 = _e.sent();\n                                                e_1 = {\n                                                  error: e_1_1\n                                                };\n                                                return [3\n                                                /*break*/\n                                                , 9];\n\n                                              case 8:\n                                                try {\n                                                  if (oneByOne_1_1 && !oneByOne_1_1.done && (_d = oneByOne_1.return)) _d.call(oneByOne_1);\n                                                } finally {\n                                                  if (e_1) throw e_1.error;\n                                                }\n\n                                                return [7\n                                                /*endfinally*/\n                                                ];\n\n                                              case 9:\n                                                _b = (_a = opTypeCount.push).apply;\n                                                _c = [opTypeCount];\n                                                return [4\n                                                /*yield*/\n                                                , this.modelMerger.mergePage(storage, modelConstructor, page)];\n\n                                              case 10:\n                                                _b.apply(_a, _c.concat([__spread.apply(void 0, [_e.sent()])]));\n\n                                                counts = count.get(modelConstructor);\n                                                opTypeCount.forEach(function (_a) {\n                                                  var _b = __read(_a, 2),\n                                                      opType = _b[1];\n\n                                                  switch (opType) {\n                                                    case OpType.INSERT:\n                                                      counts.new++;\n                                                      break;\n\n                                                    case OpType.UPDATE:\n                                                      counts.updated++;\n                                                      break;\n\n                                                    case OpType.DELETE:\n                                                      counts.deleted++;\n                                                      break;\n\n                                                    default:\n                                                      exhaustiveCheck(opType);\n                                                  }\n                                                });\n                                                return [2\n                                                /*return*/\n                                                ];\n                                            }\n                                          });\n                                        });\n                                      })];\n\n                                    case 1:\n                                      /**\n                                       * If there are mutations in the outbox for a given id, those need to be\n                                       * merged individually. Otherwise, we can merge them in batches.\n                                       */\n                                      _b.sent();\n\n                                      if (!done) return [3\n                                      /*break*/\n                                      , 4];\n                                      modelName = modelDefinition.name;\n                                      return [4\n                                      /*yield*/\n                                      , this.getModelMetadata(namespace, modelName)];\n\n                                    case 2:\n                                      modelMetadata_1 = _b.sent();\n                                      lastFullSync = modelMetadata_1.lastFullSync, fullSyncInterval = modelMetadata_1.fullSyncInterval;\n                                      theInterval = fullSyncInterval;\n                                      newestFullSyncStartedAt = newestFullSyncStartedAt === undefined ? lastFullSync : Math.max(newestFullSyncStartedAt, isFullSync ? startedAt : lastFullSync);\n                                      modelMetadata_1 = this.modelClasses.ModelMetadata.copyOf(modelMetadata_1, function (draft) {\n                                        draft.lastSync = startedAt;\n                                        draft.lastFullSync = isFullSync ? startedAt : modelMetadata_1.lastFullSync;\n                                      });\n                                      return [4\n                                      /*yield*/\n                                      , this.storage.save(modelMetadata_1, undefined, ownSymbol)];\n\n                                    case 3:\n                                      _b.sent();\n\n                                      counts = count.get(modelConstructor);\n                                      this.modelSyncedStatus.set(modelConstructor, true);\n                                      observer.next({\n                                        type: ControlMessage.SYNC_ENGINE_MODEL_SYNCED,\n                                        data: {\n                                          model: modelConstructor,\n                                          isFullSync: isFullSync,\n                                          isDeltaSync: !isFullSync,\n                                          counts: counts\n                                        }\n                                      });\n                                      paginatingModels.delete(modelDefinition);\n\n                                      if (paginatingModels.size === 0) {\n                                        duration = getNow() - start;\n                                        resolve();\n                                        observer.next({\n                                          type: ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY\n                                        });\n                                        syncQueriesSubscription.unsubscribe();\n                                      }\n\n                                      _b.label = 4;\n\n                                    case 4:\n                                      return [2\n                                      /*return*/\n                                      ];\n                                  }\n                                });\n                              });\n                            },\n                            error: function error(_error2) {\n                              observer.error(_error2);\n                            }\n                          });\n                          observer.next({\n                            type: ControlMessage.SYNC_ENGINE_SYNC_QUERIES_STARTED,\n                            data: {\n                              models: Array.from(paginatingModels).map(function (_a) {\n                                var name = _a.name;\n                                return name;\n                              })\n                            }\n                          });\n                        })];\n\n                      case 2:\n                        _a.sent();\n\n                        msNextFullSync = newestFullSyncStartedAt + theInterval - (newestStartedAt + duration);\n                        logger.debug(\"Next fullSync in \" + msNextFullSync / 1000 + \" seconds. (\" + new Date(Date.now() + msNextFullSync) + \")\");\n                        return [4\n                        /*yield*/\n                        , new Promise(function (res) {\n                          waitTimeoutId = setTimeout(res, msNextFullSync);\n                        })];\n\n                      case 3:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                };\n\n                this_1 = this;\n                _a.label = 1;\n\n              case 1:\n                if (!!observer.closed) return [3\n                /*break*/\n                , 3];\n                return [5\n                /*yield**/\n                , _loop_1()];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 1];\n\n              case 3:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        if (syncQueriesSubscription) {\n          syncQueriesSubscription.unsubscribe();\n        }\n\n        if (waitTimeoutId) {\n          clearTimeout(waitTimeoutId);\n        }\n      };\n    });\n  };\n\n  SyncEngine.prototype.disconnectionHandler = function () {\n    var _this = this;\n\n    return function (msg) {\n      // This implementation is tied to AWSAppSyncRealTimeProvider 'Connection closed', 'Timeout disconnect' msg\n      if (PUBSUB_CONTROL_MSG.CONNECTION_CLOSED === msg || PUBSUB_CONTROL_MSG.TIMEOUT_DISCONNECT === msg) {\n        _this.datastoreConnectivity.socketDisconnected();\n      }\n    };\n  };\n\n  SyncEngine.prototype.unsubscribeConnectivity = function () {\n    this.datastoreConnectivity.unsubscribe();\n  };\n\n  SyncEngine.prototype.setupModels = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fullSyncInterval, ModelMetadata, models, savedModel, promises, result, _a, _b, modelMetadata, modelName, e_2_1;\n\n      var e_2, _c;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            fullSyncInterval = params.fullSyncInterval;\n            ModelMetadata = this.modelClasses.ModelMetadata;\n            models = [];\n            Object.values(this.schema.namespaces).forEach(function (namespace) {\n              Object.values(namespace.models).filter(function (_a) {\n                var syncable = _a.syncable;\n                return syncable;\n              }).forEach(function (model) {\n                models.push([namespace.name, model]);\n\n                if (namespace.name === USER) {\n                  var modelConstructor = _this.userModelClasses[model.name];\n\n                  _this.modelSyncedStatus.set(modelConstructor, false);\n                }\n              });\n            });\n            promises = models.map(function (_a) {\n              var _b = __read(_a, 2),\n                  namespace = _b[0],\n                  model = _b[1];\n\n              return __awaiter(_this, void 0, void 0, function () {\n                var modelMetadata, syncPredicate, lastSyncPredicate, prevSyncPredicate, syncPredicateUpdated_1;\n\n                var _c, _d, _e, _f;\n\n                return __generator(this, function (_g) {\n                  switch (_g.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , this.getModelMetadata(namespace, model.name)];\n\n                    case 1:\n                      modelMetadata = _g.sent();\n                      syncPredicate = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n                      lastSyncPredicate = syncPredicate ? JSON.stringify(syncPredicate) : null;\n                      if (!(modelMetadata === undefined)) return [3\n                      /*break*/\n                      , 3];\n                      return [4\n                      /*yield*/\n                      , this.storage.save(this.modelInstanceCreator(ModelMetadata, {\n                        model: model.name,\n                        namespace: namespace,\n                        lastSync: null,\n                        fullSyncInterval: fullSyncInterval,\n                        lastFullSync: null,\n                        lastSyncPredicate: lastSyncPredicate\n                      }), undefined, ownSymbol)];\n\n                    case 2:\n                      _c = __read.apply(void 0, [_g.sent(), 1]), _d = __read(_c[0], 1), savedModel = _d[0];\n                      return [3\n                      /*break*/\n                      , 5];\n\n                    case 3:\n                      prevSyncPredicate = modelMetadata.lastSyncPredicate ? modelMetadata.lastSyncPredicate : null;\n                      syncPredicateUpdated_1 = prevSyncPredicate !== lastSyncPredicate;\n                      return [4\n                      /*yield*/\n                      , this.storage.save(this.modelClasses.ModelMetadata.copyOf(modelMetadata, function (draft) {\n                        draft.fullSyncInterval = fullSyncInterval; // perform a base sync if the syncPredicate changed in between calls to DataStore.start\n                        // ensures that the local store contains all the data specified by the syncExpression\n\n                        if (syncPredicateUpdated_1) {\n                          draft.lastSync = null;\n                          draft.lastFullSync = null;\n                          draft.lastSyncPredicate = lastSyncPredicate;\n                        }\n                      }))];\n\n                    case 4:\n                      _e = __read.apply(void 0, [_g.sent(), 1]), _f = __read(_e[0], 1), savedModel = _f[0];\n                      _g.label = 5;\n\n                    case 5:\n                      return [2\n                      /*return*/\n                      , savedModel];\n                  }\n                });\n              });\n            });\n            result = {};\n            _d.label = 1;\n\n          case 1:\n            _d.trys.push([1, 6, 7, 8]);\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 2:\n            _a = __values.apply(void 0, [_d.sent()]), _b = _a.next();\n            _d.label = 3;\n\n          case 3:\n            if (!!_b.done) return [3\n            /*break*/\n            , 5];\n            modelMetadata = _b.value;\n            modelName = modelMetadata.model;\n            result[modelName] = modelMetadata;\n            _d.label = 4;\n\n          case 4:\n            _b = _a.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 5:\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            e_2_1 = _d.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            try {\n              if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 8:\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.getModelsMetadata = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ModelMetadata, modelsMetadata;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ModelMetadata = this.modelClasses.ModelMetadata;\n            return [4\n            /*yield*/\n            , this.storage.query(ModelMetadata)];\n\n          case 1:\n            modelsMetadata = _a.sent();\n            return [2\n            /*return*/\n            , modelsMetadata];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.getModelMetadata = function (namespace, model) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ModelMetadata, predicate, _a, modelMetadata;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            ModelMetadata = this.modelClasses.ModelMetadata;\n            predicate = ModelPredicateCreator.createFromExisting(this.schema.namespaces[SYNC].models[ModelMetadata.name], function (c) {\n              return c.namespace('eq', namespace).model('eq', model);\n            });\n            return [4\n            /*yield*/\n            , this.storage.query(ModelMetadata, predicate, {\n              page: 0,\n              limit: 1\n            })];\n\n          case 1:\n            _a = __read.apply(void 0, [_b.sent(), 1]), modelMetadata = _a[0];\n            return [2\n            /*return*/\n            , modelMetadata];\n        }\n      });\n    });\n  };\n\n  SyncEngine.prototype.getModelDefinition = function (modelConstructor) {\n    var namespaceName = this.namespaceResolver(modelConstructor);\n    var modelDefinition = this.schema.namespaces[namespaceName].models[modelConstructor.name];\n    return modelDefinition;\n  };\n\n  SyncEngine.getNamespace = function () {\n    var namespace = {\n      name: SYNC,\n      relationships: {},\n      enums: {\n        OperationType: {\n          name: 'OperationType',\n          values: ['CREATE', 'UPDATE', 'DELETE']\n        }\n      },\n      nonModels: {},\n      models: {\n        MutationEvent: {\n          name: 'MutationEvent',\n          pluralName: 'MutationEvents',\n          syncable: false,\n          fields: {\n            id: {\n              name: 'id',\n              type: 'ID',\n              isRequired: true,\n              isArray: false\n            },\n            model: {\n              name: 'model',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            data: {\n              name: 'data',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            modelId: {\n              name: 'modelId',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            operation: {\n              name: 'operation',\n              type: {\n                enum: 'Operationtype'\n              },\n              isArray: false,\n              isRequired: true\n            },\n            condition: {\n              name: 'condition',\n              type: 'String',\n              isArray: false,\n              isRequired: true\n            }\n          }\n        },\n        ModelMetadata: {\n          name: 'ModelMetadata',\n          pluralName: 'ModelsMetadata',\n          syncable: false,\n          fields: {\n            id: {\n              name: 'id',\n              type: 'ID',\n              isRequired: true,\n              isArray: false\n            },\n            namespace: {\n              name: 'namespace',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            model: {\n              name: 'model',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            lastSync: {\n              name: 'lastSync',\n              type: 'Int',\n              isRequired: false,\n              isArray: false\n            },\n            lastFullSync: {\n              name: 'lastFullSync',\n              type: 'Int',\n              isRequired: false,\n              isArray: false\n            },\n            fullSyncInterval: {\n              name: 'fullSyncInterval',\n              type: 'Int',\n              isRequired: true,\n              isArray: false\n            },\n            lastSyncPredicate: {\n              name: 'lastSyncPredicate',\n              type: 'String',\n              isRequired: false,\n              isArray: false\n            }\n          }\n        }\n      }\n    };\n    return namespace;\n  };\n\n  return SyncEngine;\n}();\n\nexport { SyncEngine };","map":{"version":3,"mappings":"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","names":["browserOrNode","ConsoleLogger","Logger","CONTROL_MSG","PUBSUB_CONTROL_MSG","Observable","ModelPredicateCreator","OpType","exhaustiveCheck","getNow","SYNC","USER","DataStoreConnectivity","ModelMerger","MutationEventOutbox","MutationProcessor","SubscriptionProcessor","SyncProcessor","createMutationInstanceFromModelOperation","predicateToGraphQLCondition","logger","ownSymbol","Symbol","ControlMessage","schema","namespaceResolver","modelClasses","userModelClasses","storage","modelInstanceCreator","conflictHandler","errorHandler","syncPredicates","amplifyConfig","authModeStrategy","amplifyContext","WeakMap","MutationEvent","outbox","modelMerger","syncQueriesProcessor","subscriptionsProcessor","mutationsProcessor","datastoreConnectivity","SyncEngine","modelConstructor","modelSyncedStatus","get","params","log","subscriptions","setupModels","_a","observer","error","err_1","startPromise","Promise","_this","status","subscribe","online","next","type","SYNC_ENGINE_NETWORK_STATUS","data","active","dataSubsObservable","isNode","warn","_b","ctlSubsObservable_1","resolve","reject","ctlSubsSubscription","msg","CONNECTED","err","handleDisconnect","disconnectionHandler","push","_c","err_2","SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED","syncQuerySubscription","syncQueriesObservable","SYNC_ENGINE_SYNC_QUERIES_READY","message","complete","error_1","start","modelDefinition","item","hasMore","name","model","runExclusive","merge","SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED","element","SYNC_ENGINE_OUTBOX_STATUS","isEmpty","_transformerMutationType","forEach","unsubscribe","observe","filter","getModelDefinition","syncable","opType","condition","namespace","namespaces","MutationEventConstructor","graphQLCondition","mutationEvent","relationships","enqueue","SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED","resume","SYNC_ENGINE_STORAGE_SUBSCRIBED","peek","hasMutationsInOutbox","undefined","SYNC_ENGINE_READY","currentTimeStamp","Map","getModelsMetadata","modelLastSync","map","lastSync","lastFullSync","fullSyncInterval","lastSyncPredicate","nextFullSync","syncFrom","models","of","syncQueriesSubscription","waitTimeoutId","count","this_1","getModelsMetadataWithNextFullSync","Date","now","paginatingModels","Set","keys","items","done","startedAt","isFullSync","has","set","new","updated","deleted","newestStartedAt","Math","max","getModelIds","idsInOutbox","_e","oneByOne","page","id","opTypeCount","oneByOne_1","oneByOne_1_1","apply","mergePage","counts","INSERT","UPDATE","DELETE","modelName","getModelMetadata","modelMetadata_1","theInterval","newestFullSyncStartedAt","ModelMetadata","copyOf","draft","save","SYNC_ENGINE_MODEL_SYNCED","isDeltaSync","delete","size","duration","SYNC_ENGINE_SYNC_QUERIES_STARTED","Array","from","msNextFullSync","debug","setTimeout","res","closed","clearTimeout","CONNECTION_CLOSED","TIMEOUT_DISCONNECT","socketDisconnected","Object","values","promises","modelMetadata","_g","syncPredicate","getPredicates","JSON","stringify","_d","savedModel","prevSyncPredicate","syncPredicateUpdated_1","_f","result","all","query","modelsMetadata","predicate","createFromExisting","limit","namespaceName","enums","OperationType","nonModels","pluralName","fields","isRequired","isArray","modelId","operation","enum"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/datastore/src/sync/index.ts"],"sourcesContent":["import { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable, { ZenObservable } from 'zen-observable-ts';\nimport { ModelInstanceCreator } from '../datastore/datastore';\nimport { ModelPredicateCreator } from '../predicates';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport {\n\tConflictHandler,\n\tControlMessageType,\n\tErrorHandler,\n\tInternalSchema,\n\tModelInit,\n\tModelInstanceMetadata,\n\tMutableModel,\n\tNamespaceResolver,\n\tOpType,\n\tPersistentModel,\n\tPersistentModelConstructor,\n\tSchemaModel,\n\tSchemaNamespace,\n\tTypeConstructorMap,\n\tModelPredicate,\n\tAuthModeStrategy,\n\tAmplifyContext,\n} from '../types';\nimport { exhaustiveCheck, getNow, SYNC, USER } from '../util';\nimport DataStoreConnectivity from './datastoreConnectivity';\nimport { ModelMerger } from './merger';\nimport { MutationEventOutbox } from './outbox';\nimport { MutationProcessor } from './processors/mutation';\nimport { CONTROL_MSG, SubscriptionProcessor } from './processors/subscription';\nimport { SyncProcessor } from './processors/sync';\nimport {\n\tcreateMutationInstanceFromModelOperation,\n\tpredicateToGraphQLCondition,\n\tTransformerMutationType,\n} from './utils';\n\nconst { isNode } = browserOrNode();\nconst logger = new Logger('DataStore');\n\nconst ownSymbol = Symbol('sync');\n\ntype StartParams = {\n\tfullSyncInterval: number;\n};\n\nexport declare class MutationEvent {\n\tconstructor(init: ModelInit<MutationEvent>);\n\tstatic copyOf(\n\t\tsrc: MutationEvent,\n\t\tmutator: (draft: MutableModel<MutationEvent>) => void | MutationEvent\n\t): MutationEvent;\n\tpublic readonly id: string;\n\tpublic readonly model: string;\n\tpublic readonly operation: TransformerMutationType;\n\tpublic readonly modelId: string;\n\tpublic readonly condition: string;\n\tpublic data: string;\n}\n\ndeclare class ModelMetadata {\n\tconstructor(init: ModelInit<ModelMetadata>);\n\tstatic copyOf(\n\t\tsrc: ModelMetadata,\n\t\tmutator: (draft: MutableModel<ModelMetadata>) => void | ModelMetadata\n\t): ModelMetadata;\n\tpublic readonly id: string;\n\tpublic readonly namespace: string;\n\tpublic readonly model: string;\n\tpublic readonly fullSyncInterval: number;\n\tpublic readonly lastSync?: number;\n\tpublic readonly lastFullSync?: number;\n\tpublic readonly lastSyncPredicate?: null | string;\n}\n\nexport enum ControlMessage {\n\tSYNC_ENGINE_STORAGE_SUBSCRIBED = 'storageSubscribed',\n\tSYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED = 'subscriptionsEstablished',\n\tSYNC_ENGINE_SYNC_QUERIES_STARTED = 'syncQueriesStarted',\n\tSYNC_ENGINE_SYNC_QUERIES_READY = 'syncQueriesReady',\n\tSYNC_ENGINE_MODEL_SYNCED = 'modelSynced',\n\tSYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED = 'outboxMutationEnqueued',\n\tSYNC_ENGINE_OUTBOX_MUTATION_PROCESSED = 'outboxMutationProcessed',\n\tSYNC_ENGINE_OUTBOX_STATUS = 'outboxStatus',\n\tSYNC_ENGINE_NETWORK_STATUS = 'networkStatus',\n\tSYNC_ENGINE_READY = 'ready',\n}\n\nexport class SyncEngine {\n\tprivate online = false;\n\n\tprivate readonly syncQueriesProcessor: SyncProcessor;\n\tprivate readonly subscriptionsProcessor: SubscriptionProcessor;\n\tprivate readonly mutationsProcessor: MutationProcessor;\n\tprivate readonly modelMerger: ModelMerger;\n\tprivate readonly outbox: MutationEventOutbox;\n\tprivate readonly datastoreConnectivity: DataStoreConnectivity;\n\tprivate readonly modelSyncedStatus: WeakMap<\n\t\tPersistentModelConstructor<any>,\n\t\tboolean\n\t> = new WeakMap();\n\n\tpublic getModelSyncedStatus(\n\t\tmodelConstructor: PersistentModelConstructor<any>\n\t): boolean {\n\t\treturn this.modelSyncedStatus.get(modelConstructor);\n\t}\n\n\tconstructor(\n\t\tprivate readonly schema: InternalSchema,\n\t\tprivate readonly namespaceResolver: NamespaceResolver,\n\t\tprivate readonly modelClasses: TypeConstructorMap,\n\t\tprivate readonly userModelClasses: TypeConstructorMap,\n\t\tprivate readonly storage: Storage,\n\t\tprivate readonly modelInstanceCreator: ModelInstanceCreator,\n\t\tconflictHandler: ConflictHandler,\n\t\terrorHandler: ErrorHandler,\n\t\tprivate readonly syncPredicates: WeakMap<SchemaModel, ModelPredicate<any>>,\n\t\tprivate readonly amplifyConfig: Record<string, any> = {},\n\t\tprivate readonly authModeStrategy: AuthModeStrategy,\n\t\tprivate readonly amplifyContext: AmplifyContext\n\t) {\n\t\tconst MutationEvent = this.modelClasses[\n\t\t\t'MutationEvent'\n\t\t] as PersistentModelConstructor<any>;\n\n\t\tthis.outbox = new MutationEventOutbox(\n\t\t\tthis.schema,\n\t\t\tMutationEvent,\n\t\t\tmodelInstanceCreator,\n\t\t\townSymbol\n\t\t);\n\n\t\tthis.modelMerger = new ModelMerger(this.outbox, ownSymbol);\n\n\t\tthis.syncQueriesProcessor = new SyncProcessor(\n\t\t\tthis.schema,\n\t\t\tthis.syncPredicates,\n\t\t\tthis.amplifyConfig,\n\t\t\tthis.authModeStrategy,\n\t\t\terrorHandler,\n\t\t\tthis.amplifyContext\n\t\t);\n\n\t\tthis.subscriptionsProcessor = new SubscriptionProcessor(\n\t\t\tthis.schema,\n\t\t\tthis.syncPredicates,\n\t\t\tthis.amplifyConfig,\n\t\t\tthis.authModeStrategy,\n\t\t\terrorHandler,\n\t\t\tthis.amplifyContext\n\t\t);\n\n\t\tthis.mutationsProcessor = new MutationProcessor(\n\t\t\tthis.schema,\n\t\t\tthis.storage,\n\t\t\tthis.userModelClasses,\n\t\t\tthis.outbox,\n\t\t\tthis.modelInstanceCreator,\n\t\t\tMutationEvent,\n\t\t\tthis.amplifyConfig,\n\t\t\tthis.authModeStrategy,\n\t\t\terrorHandler,\n\t\t\tconflictHandler,\n\t\t\tthis.amplifyContext\n\t\t);\n\n\t\tthis.datastoreConnectivity = new DataStoreConnectivity();\n\t}\n\n\tstart(params: StartParams) {\n\t\treturn new Observable<ControlMessageType<ControlMessage>>(observer => {\n\t\t\tlogger.log('starting sync engine...');\n\n\t\t\tlet subscriptions: ZenObservable.Subscription[] = [];\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.setupModels(params);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tobserver.error(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst startPromise = new Promise(resolve => {\n\t\t\t\t\tthis.datastoreConnectivity.status().subscribe(async ({ online }) => {\n\t\t\t\t\t\t// From offline to online\n\t\t\t\t\t\tif (online && !this.online) {\n\t\t\t\t\t\t\tthis.online = online;\n\n\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_NETWORK_STATUS,\n\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\tactive: this.online,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tlet ctlSubsObservable: Observable<CONTROL_MSG>;\n\t\t\t\t\t\t\tlet dataSubsObservable: Observable<\n\t\t\t\t\t\t\t\t[TransformerMutationType, SchemaModel, PersistentModel]\n\t\t\t\t\t\t\t>;\n\n\t\t\t\t\t\t\tif (isNode) {\n\t\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\t'Realtime disabled when in a server-side environment'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//#region GraphQL Subscriptions\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t// const ctlObservable: Observable<CONTROL_MSG>\n\t\t\t\t\t\t\t\t\tctlSubsObservable,\n\t\t\t\t\t\t\t\t\t// const dataObservable: Observable<[TransformerMutationType, SchemaModel, Readonly<{\n\t\t\t\t\t\t\t\t\t// id: string;\n\t\t\t\t\t\t\t\t\t// } & Record<string, any>>]>\n\t\t\t\t\t\t\t\t\tdataSubsObservable,\n\t\t\t\t\t\t\t\t] = this.subscriptionsProcessor.start();\n\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\t\t\tconst ctlSubsSubscription = ctlSubsObservable.subscribe({\n\t\t\t\t\t\t\t\t\t\t\tnext: msg => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (msg === CONTROL_MSG.CONNECTED) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\terror: err => {\n\t\t\t\t\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t\t\t\t\t\tconst handleDisconnect = this.disconnectionHandler();\n\t\t\t\t\t\t\t\t\t\t\t\thandleDisconnect(err);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tsubscriptions.push(ctlSubsSubscription);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\tobserver.error(err);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlogger.log('Realtime ready');\n\n\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t//#endregion\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//#region Base & Sync queries\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\t\tconst syncQuerySubscription =\n\t\t\t\t\t\t\t\t\t\tthis.syncQueriesObservable().subscribe({\n\t\t\t\t\t\t\t\t\t\t\tnext: message => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst { type } = message;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype === ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tobserver.next(message);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\terror: error => {\n\t\t\t\t\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tif (syncQuerySubscription) {\n\t\t\t\t\t\t\t\t\t\tsubscriptions.push(syncQuerySubscription);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tobserver.error(error);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//#endregion\n\n\t\t\t\t\t\t\t//#region process mutations\n\t\t\t\t\t\t\tsubscriptions.push(\n\t\t\t\t\t\t\t\tthis.mutationsProcessor\n\t\t\t\t\t\t\t\t\t.start()\n\t\t\t\t\t\t\t\t\t.subscribe(({ modelDefinition, model: item, hasMore }) => {\n\t\t\t\t\t\t\t\t\t\tconst modelConstructor = this.userModelClasses[\n\t\t\t\t\t\t\t\t\t\t\tmodelDefinition.name\n\t\t\t\t\t\t\t\t\t\t] as PersistentModelConstructor<any>;\n\n\t\t\t\t\t\t\t\t\t\tconst model = this.modelInstanceCreator(\n\t\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tthis.storage.runExclusive(storage =>\n\t\t\t\t\t\t\t\t\t\t\tthis.modelMerger.merge(storage, model)\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tmodel: modelConstructor,\n\t\t\t\t\t\t\t\t\t\t\t\telement: model,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tisEmpty: !hasMore,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t//#endregion\n\n\t\t\t\t\t\t\t//#region Merge subscriptions buffer\n\t\t\t\t\t\t\t// TODO: extract to function\n\t\t\t\t\t\t\tif (!isNode) {\n\t\t\t\t\t\t\t\tsubscriptions.push(\n\t\t\t\t\t\t\t\t\tdataSubsObservable.subscribe(\n\t\t\t\t\t\t\t\t\t\t([_transformerMutationType, modelDefinition, item]) => {\n\t\t\t\t\t\t\t\t\t\t\tconst modelConstructor = this.userModelClasses[\n\t\t\t\t\t\t\t\t\t\t\t\tmodelDefinition.name\n\t\t\t\t\t\t\t\t\t\t\t] as PersistentModelConstructor<any>;\n\n\t\t\t\t\t\t\t\t\t\t\tconst model = this.modelInstanceCreator(\n\t\t\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\tthis.storage.runExclusive(storage =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.modelMerger.merge(storage, model)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//#endregion\n\t\t\t\t\t\t} else if (!online) {\n\t\t\t\t\t\t\tthis.online = online;\n\n\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_NETWORK_STATUS,\n\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\tactive: this.online,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tsubscriptions.forEach(sub => sub.unsubscribe());\n\t\t\t\t\t\t\tsubscriptions = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.storage\n\t\t\t\t\t.observe(null, null, ownSymbol)\n\t\t\t\t\t.filter(({ model }) => {\n\t\t\t\t\t\tconst modelDefinition = this.getModelDefinition(model);\n\n\t\t\t\t\t\treturn modelDefinition.syncable === true;\n\t\t\t\t\t})\n\t\t\t\t\t.subscribe({\n\t\t\t\t\t\tnext: async ({ opType, model, element, condition }) => {\n\t\t\t\t\t\t\tconst namespace =\n\t\t\t\t\t\t\t\tthis.schema.namespaces[this.namespaceResolver(model)];\n\t\t\t\t\t\t\tconst MutationEventConstructor = this.modelClasses[\n\t\t\t\t\t\t\t\t'MutationEvent'\n\t\t\t\t\t\t\t] as PersistentModelConstructor<MutationEvent>;\n\t\t\t\t\t\t\tconst graphQLCondition = predicateToGraphQLCondition(condition);\n\t\t\t\t\t\t\tconst mutationEvent = createMutationInstanceFromModelOperation(\n\t\t\t\t\t\t\t\tnamespace.relationships,\n\t\t\t\t\t\t\t\tthis.getModelDefinition(model),\n\t\t\t\t\t\t\t\topType,\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\tgraphQLCondition,\n\t\t\t\t\t\t\t\tMutationEventConstructor,\n\t\t\t\t\t\t\t\tthis.modelInstanceCreator\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tawait this.outbox.enqueue(this.storage, mutationEvent);\n\n\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED,\n\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\tisEmpty: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait startPromise;\n\n\t\t\t\t\t\t\tif (this.online) {\n\t\t\t\t\t\t\t\tthis.mutationsProcessor.resume();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\tobserver.next({\n\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED,\n\t\t\t\t});\n\n\t\t\t\tconst hasMutationsInOutbox =\n\t\t\t\t\t(await this.outbox.peek(this.storage)) === undefined;\n\t\t\t\tobserver.next({\n\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tisEmpty: hasMutationsInOutbox,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tawait startPromise;\n\n\t\t\t\tobserver.next({\n\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_READY,\n\t\t\t\t});\n\t\t\t})();\n\n\t\t\treturn () => {\n\t\t\t\tsubscriptions.forEach(sub => sub.unsubscribe());\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate async getModelsMetadataWithNextFullSync(\n\t\tcurrentTimeStamp: number\n\t): Promise<Map<SchemaModel, [string, number]>> {\n\t\tconst modelLastSync: Map<SchemaModel, [string, number]> = new Map(\n\t\t\t(await this.getModelsMetadata()).map(\n\t\t\t\t({\n\t\t\t\t\tnamespace,\n\t\t\t\t\tmodel,\n\t\t\t\t\tlastSync,\n\t\t\t\t\tlastFullSync,\n\t\t\t\t\tfullSyncInterval,\n\t\t\t\t\tlastSyncPredicate,\n\t\t\t\t}) => {\n\t\t\t\t\tconst nextFullSync = lastFullSync + fullSyncInterval;\n\t\t\t\t\tconst syncFrom =\n\t\t\t\t\t\t!lastFullSync || nextFullSync < currentTimeStamp\n\t\t\t\t\t\t\t? 0 // perform full sync if expired\n\t\t\t\t\t\t\t: lastSync; // perform delta sync\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tthis.schema.namespaces[namespace].models[model],\n\t\t\t\t\t\t[namespace, syncFrom],\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\treturn modelLastSync;\n\t}\n\n\tprivate syncQueriesObservable(): Observable<\n\t\tControlMessageType<ControlMessage>\n\t> {\n\t\tif (!this.online) {\n\t\t\treturn Observable.of<ControlMessageType<ControlMessage>>();\n\t\t}\n\n\t\treturn new Observable<ControlMessageType<ControlMessage>>(observer => {\n\t\t\tlet syncQueriesSubscription: ZenObservable.Subscription;\n\t\t\tlet waitTimeoutId: ReturnType<typeof setTimeout>;\n\n\t\t\t(async () => {\n\t\t\t\twhile (!observer.closed) {\n\t\t\t\t\tconst count: WeakMap<\n\t\t\t\t\t\tPersistentModelConstructor<any>,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnew: number;\n\t\t\t\t\t\t\tupdated: number;\n\t\t\t\t\t\t\tdeleted: number;\n\t\t\t\t\t\t}\n\t\t\t\t\t> = new WeakMap();\n\n\t\t\t\t\tconst modelLastSync = await this.getModelsMetadataWithNextFullSync(\n\t\t\t\t\t\tDate.now()\n\t\t\t\t\t);\n\t\t\t\t\tconst paginatingModels = new Set(modelLastSync.keys());\n\n\t\t\t\t\tlet newestFullSyncStartedAt: number;\n\t\t\t\t\tlet theInterval: number;\n\n\t\t\t\t\tlet start: number;\n\t\t\t\t\tlet duration: number;\n\t\t\t\t\tlet newestStartedAt: number;\n\t\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\t\tsyncQueriesSubscription = this.syncQueriesProcessor\n\t\t\t\t\t\t\t.start(modelLastSync)\n\t\t\t\t\t\t\t.subscribe({\n\t\t\t\t\t\t\t\tnext: async ({\n\t\t\t\t\t\t\t\t\tnamespace,\n\t\t\t\t\t\t\t\t\tmodelDefinition,\n\t\t\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\t\t\tdone,\n\t\t\t\t\t\t\t\t\tstartedAt,\n\t\t\t\t\t\t\t\t\tisFullSync,\n\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\tconst modelConstructor = this.userModelClasses[\n\t\t\t\t\t\t\t\t\t\tmodelDefinition.name\n\t\t\t\t\t\t\t\t\t] as PersistentModelConstructor<any>;\n\n\t\t\t\t\t\t\t\t\tif (!count.has(modelConstructor)) {\n\t\t\t\t\t\t\t\t\t\tcount.set(modelConstructor, {\n\t\t\t\t\t\t\t\t\t\t\tnew: 0,\n\t\t\t\t\t\t\t\t\t\t\tupdated: 0,\n\t\t\t\t\t\t\t\t\t\t\tdeleted: 0,\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tstart = getNow();\n\t\t\t\t\t\t\t\t\t\tnewestStartedAt =\n\t\t\t\t\t\t\t\t\t\t\tnewestStartedAt === undefined\n\t\t\t\t\t\t\t\t\t\t\t\t? startedAt\n\t\t\t\t\t\t\t\t\t\t\t\t: Math.max(newestStartedAt, startedAt);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * If there are mutations in the outbox for a given id, those need to be\n\t\t\t\t\t\t\t\t\t * merged individually. Otherwise, we can merge them in batches.\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tawait this.storage.runExclusive(async storage => {\n\t\t\t\t\t\t\t\t\t\tconst idsInOutbox = await this.outbox.getModelIds(storage);\n\n\t\t\t\t\t\t\t\t\t\tconst oneByOne: ModelInstanceMetadata[] = [];\n\t\t\t\t\t\t\t\t\t\tconst page = items.filter(item => {\n\t\t\t\t\t\t\t\t\t\t\tif (!idsInOutbox.has(item.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\toneByOne.push(item);\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tconst opTypeCount: [any, OpType][] = [];\n\n\t\t\t\t\t\t\t\t\t\tfor (const item of oneByOne) {\n\t\t\t\t\t\t\t\t\t\t\tconst opType = await this.modelMerger.merge(\n\t\t\t\t\t\t\t\t\t\t\t\tstorage,\n\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\tif (opType !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\topTypeCount.push([item, opType]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\topTypeCount.push(\n\t\t\t\t\t\t\t\t\t\t\t...(await this.modelMerger.mergePage(\n\t\t\t\t\t\t\t\t\t\t\t\tstorage,\n\t\t\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\t\t\tpage\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tconst counts = count.get(modelConstructor);\n\n\t\t\t\t\t\t\t\t\t\topTypeCount.forEach(([, opType]) => {\n\t\t\t\t\t\t\t\t\t\t\tswitch (opType) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase OpType.INSERT:\n\t\t\t\t\t\t\t\t\t\t\t\t\tcounts.new++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase OpType.UPDATE:\n\t\t\t\t\t\t\t\t\t\t\t\t\tcounts.updated++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tcase OpType.DELETE:\n\t\t\t\t\t\t\t\t\t\t\t\t\tcounts.deleted++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\texhaustiveCheck(opType);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\t\t\t\tconst { name: modelName } = modelDefinition;\n\n\t\t\t\t\t\t\t\t\t\t//#region update last sync for type\n\t\t\t\t\t\t\t\t\t\tlet modelMetadata = await this.getModelMetadata(\n\t\t\t\t\t\t\t\t\t\t\tnamespace,\n\t\t\t\t\t\t\t\t\t\t\tmodelName\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tconst { lastFullSync, fullSyncInterval } = modelMetadata;\n\n\t\t\t\t\t\t\t\t\t\ttheInterval = fullSyncInterval;\n\n\t\t\t\t\t\t\t\t\t\tnewestFullSyncStartedAt =\n\t\t\t\t\t\t\t\t\t\t\tnewestFullSyncStartedAt === undefined\n\t\t\t\t\t\t\t\t\t\t\t\t? lastFullSync\n\t\t\t\t\t\t\t\t\t\t\t\t: Math.max(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewestFullSyncStartedAt,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisFullSync ? startedAt : lastFullSync\n\t\t\t\t\t\t\t\t\t\t\t\t  );\n\n\t\t\t\t\t\t\t\t\t\tmodelMetadata = (\n\t\t\t\t\t\t\t\t\t\t\tthis.modelClasses\n\t\t\t\t\t\t\t\t\t\t\t\t.ModelMetadata as PersistentModelConstructor<any>\n\t\t\t\t\t\t\t\t\t\t).copyOf(modelMetadata, draft => {\n\t\t\t\t\t\t\t\t\t\t\tdraft.lastSync = startedAt;\n\t\t\t\t\t\t\t\t\t\t\tdraft.lastFullSync = isFullSync\n\t\t\t\t\t\t\t\t\t\t\t\t? startedAt\n\t\t\t\t\t\t\t\t\t\t\t\t: modelMetadata.lastFullSync;\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tawait this.storage.save(\n\t\t\t\t\t\t\t\t\t\t\tmodelMetadata,\n\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\townSymbol\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t//#endregion\n\n\t\t\t\t\t\t\t\t\t\tconst counts = count.get(modelConstructor);\n\n\t\t\t\t\t\t\t\t\t\tthis.modelSyncedStatus.set(modelConstructor, true);\n\n\t\t\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_MODEL_SYNCED,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tmodel: modelConstructor,\n\t\t\t\t\t\t\t\t\t\t\t\tisFullSync,\n\t\t\t\t\t\t\t\t\t\t\t\tisDeltaSync: !isFullSync,\n\t\t\t\t\t\t\t\t\t\t\t\tcounts,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tpaginatingModels.delete(modelDefinition);\n\n\t\t\t\t\t\t\t\t\t\tif (paginatingModels.size === 0) {\n\t\t\t\t\t\t\t\t\t\t\tduration = getNow() - start;\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tsyncQueriesSubscription.unsubscribe();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: error => {\n\t\t\t\t\t\t\t\t\tobserver.error(error);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\ttype: ControlMessage.SYNC_ENGINE_SYNC_QUERIES_STARTED,\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tmodels: Array.from(paginatingModels).map(({ name }) => name),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst msNextFullSync =\n\t\t\t\t\t\tnewestFullSyncStartedAt +\n\t\t\t\t\t\ttheInterval -\n\t\t\t\t\t\t(newestStartedAt + duration);\n\n\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t`Next fullSync in ${msNextFullSync / 1000} seconds. (${new Date(\n\t\t\t\t\t\t\tDate.now() + msNextFullSync\n\t\t\t\t\t\t)})`\n\t\t\t\t\t);\n\n\t\t\t\t\tawait new Promise(res => {\n\t\t\t\t\t\twaitTimeoutId = setTimeout(res, msNextFullSync);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn () => {\n\t\t\t\tif (syncQueriesSubscription) {\n\t\t\t\t\tsyncQueriesSubscription.unsubscribe();\n\t\t\t\t}\n\n\t\t\t\tif (waitTimeoutId) {\n\t\t\t\t\tclearTimeout(waitTimeoutId);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate disconnectionHandler(): (msg: string) => void {\n\t\treturn (msg: string) => {\n\t\t\t// This implementation is tied to AWSAppSyncRealTimeProvider 'Connection closed', 'Timeout disconnect' msg\n\t\t\tif (\n\t\t\t\tPUBSUB_CONTROL_MSG.CONNECTION_CLOSED === msg ||\n\t\t\t\tPUBSUB_CONTROL_MSG.TIMEOUT_DISCONNECT === msg\n\t\t\t) {\n\t\t\t\tthis.datastoreConnectivity.socketDisconnected();\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic unsubscribeConnectivity() {\n\t\tthis.datastoreConnectivity.unsubscribe();\n\t}\n\n\tprivate async setupModels(params: StartParams) {\n\t\tconst { fullSyncInterval } = params;\n\t\tconst ModelMetadata = this.modelClasses\n\t\t\t.ModelMetadata as PersistentModelConstructor<ModelMetadata>;\n\n\t\tconst models: [string, SchemaModel][] = [];\n\t\tlet savedModel;\n\n\t\tObject.values(this.schema.namespaces).forEach(namespace => {\n\t\t\tObject.values(namespace.models)\n\t\t\t\t.filter(({ syncable }) => syncable)\n\t\t\t\t.forEach(model => {\n\t\t\t\t\tmodels.push([namespace.name, model]);\n\t\t\t\t\tif (namespace.name === USER) {\n\t\t\t\t\t\tconst modelConstructor = this.userModelClasses[\n\t\t\t\t\t\t\tmodel.name\n\t\t\t\t\t\t] as PersistentModelConstructor<any>;\n\t\t\t\t\t\tthis.modelSyncedStatus.set(modelConstructor, false);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\n\t\tconst promises = models.map(async ([namespace, model]) => {\n\t\t\tconst modelMetadata = await this.getModelMetadata(namespace, model.name);\n\t\t\tconst syncPredicate = ModelPredicateCreator.getPredicates(\n\t\t\t\tthis.syncPredicates.get(model),\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tconst lastSyncPredicate = syncPredicate\n\t\t\t\t? JSON.stringify(syncPredicate)\n\t\t\t\t: null;\n\n\t\t\tif (modelMetadata === undefined) {\n\t\t\t\t[[savedModel]] = await this.storage.save(\n\t\t\t\t\tthis.modelInstanceCreator(ModelMetadata, {\n\t\t\t\t\t\tmodel: model.name,\n\t\t\t\t\t\tnamespace,\n\t\t\t\t\t\tlastSync: null,\n\t\t\t\t\t\tfullSyncInterval,\n\t\t\t\t\t\tlastFullSync: null,\n\t\t\t\t\t\tlastSyncPredicate,\n\t\t\t\t\t}),\n\t\t\t\t\tundefined,\n\t\t\t\t\townSymbol\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst prevSyncPredicate = modelMetadata.lastSyncPredicate\n\t\t\t\t\t? modelMetadata.lastSyncPredicate\n\t\t\t\t\t: null;\n\t\t\t\tconst syncPredicateUpdated = prevSyncPredicate !== lastSyncPredicate;\n\n\t\t\t\t[[savedModel]] = await this.storage.save(\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.modelClasses.ModelMetadata as PersistentModelConstructor<any>\n\t\t\t\t\t).copyOf(modelMetadata, draft => {\n\t\t\t\t\t\tdraft.fullSyncInterval = fullSyncInterval;\n\t\t\t\t\t\t// perform a base sync if the syncPredicate changed in between calls to DataStore.start\n\t\t\t\t\t\t// ensures that the local store contains all the data specified by the syncExpression\n\t\t\t\t\t\tif (syncPredicateUpdated) {\n\t\t\t\t\t\t\tdraft.lastSync = null;\n\t\t\t\t\t\t\tdraft.lastFullSync = null;\n\t\t\t\t\t\t\tdraft.lastSyncPredicate = lastSyncPredicate;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn savedModel;\n\t\t});\n\n\t\tconst result: Record<string, ModelMetadata> = {};\n\t\tfor (const modelMetadata of await Promise.all(promises)) {\n\t\t\tconst { model: modelName } = modelMetadata;\n\n\t\t\tresult[modelName] = modelMetadata;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async getModelsMetadata(): Promise<ModelMetadata[]> {\n\t\tconst ModelMetadata = this.modelClasses\n\t\t\t.ModelMetadata as PersistentModelConstructor<ModelMetadata>;\n\n\t\tconst modelsMetadata = await this.storage.query(ModelMetadata);\n\n\t\treturn modelsMetadata;\n\t}\n\n\tprivate async getModelMetadata(\n\t\tnamespace: string,\n\t\tmodel: string\n\t): Promise<ModelMetadata> {\n\t\tconst ModelMetadata = this.modelClasses\n\t\t\t.ModelMetadata as PersistentModelConstructor<ModelMetadata>;\n\n\t\tconst predicate = ModelPredicateCreator.createFromExisting<ModelMetadata>(\n\t\t\tthis.schema.namespaces[SYNC].models[ModelMetadata.name],\n\t\t\tc => c.namespace('eq', namespace).model('eq', model)\n\t\t);\n\n\t\tconst [modelMetadata] = await this.storage.query(ModelMetadata, predicate, {\n\t\t\tpage: 0,\n\t\t\tlimit: 1,\n\t\t});\n\n\t\treturn modelMetadata;\n\t}\n\n\tprivate getModelDefinition(\n\t\tmodelConstructor: PersistentModelConstructor<any>\n\t): SchemaModel {\n\t\tconst namespaceName = this.namespaceResolver(modelConstructor);\n\n\t\tconst modelDefinition =\n\t\t\tthis.schema.namespaces[namespaceName].models[modelConstructor.name];\n\n\t\treturn modelDefinition;\n\t}\n\n\tstatic getNamespace() {\n\t\tconst namespace: SchemaNamespace = {\n\t\t\tname: SYNC,\n\t\t\trelationships: {},\n\t\t\tenums: {\n\t\t\t\tOperationType: {\n\t\t\t\t\tname: 'OperationType',\n\t\t\t\t\tvalues: ['CREATE', 'UPDATE', 'DELETE'],\n\t\t\t\t},\n\t\t\t},\n\t\t\tnonModels: {},\n\t\t\tmodels: {\n\t\t\t\tMutationEvent: {\n\t\t\t\t\tname: 'MutationEvent',\n\t\t\t\t\tpluralName: 'MutationEvents',\n\t\t\t\t\tsyncable: false,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\t\ttype: 'ID',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodel: {\n\t\t\t\t\t\t\tname: 'model',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tname: 'data',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodelId: {\n\t\t\t\t\t\t\tname: 'modelId',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\toperation: {\n\t\t\t\t\t\t\tname: 'operation',\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\tenum: 'Operationtype',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcondition: {\n\t\t\t\t\t\t\tname: 'condition',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tModelMetadata: {\n\t\t\t\t\tname: 'ModelMetadata',\n\t\t\t\t\tpluralName: 'ModelsMetadata',\n\t\t\t\t\tsyncable: false,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\t\ttype: 'ID',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnamespace: {\n\t\t\t\t\t\t\tname: 'namespace',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodel: {\n\t\t\t\t\t\t\tname: 'model',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlastSync: {\n\t\t\t\t\t\t\tname: 'lastSync',\n\t\t\t\t\t\t\ttype: 'Int',\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlastFullSync: {\n\t\t\t\t\t\t\tname: 'lastFullSync',\n\t\t\t\t\t\t\ttype: 'Int',\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfullSyncInterval: {\n\t\t\t\t\t\t\tname: 'fullSyncInterval',\n\t\t\t\t\t\t\ttype: 'Int',\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlastSyncPredicate: {\n\t\t\t\t\t\t\tname: 'lastSyncPredicate',\n\t\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\treturn namespace;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}