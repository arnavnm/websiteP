{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { StopEventsDetectionJobRequest, StopEventsDetectionJobResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StopEventsDetectionJobCommand, serializeAws_json1_1StopEventsDetectionJobCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Stops an events detection job in progress.</p>\n */\n\nvar StopEventsDetectionJobCommand =\n/** @class */\nfunction (_super) {\n  __extends(StopEventsDetectionJobCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function StopEventsDetectionJobCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  StopEventsDetectionJobCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"ComprehendClient\";\n    var commandName = \"StopEventsDetectionJobCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: StopEventsDetectionJobRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StopEventsDetectionJobResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  StopEventsDetectionJobCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1StopEventsDetectionJobCommand(input, context);\n  };\n\n  StopEventsDetectionJobCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1StopEventsDetectionJobCommand(output, context);\n  };\n\n  return StopEventsDetectionJobCommand;\n}($Command);\n\nexport { StopEventsDetectionJobCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,6BAAT,EAAwCC,8BAAxC,QAA8E,oBAA9E;AACA,SAASC,mDAAT,EAA8DC,iDAA9D,QAAwH,0BAAxH;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;;AACA,IAAIC,6BAA6B;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACjET,SAAS,CAACQ,6BAAD,EAAgCC,MAAhC,CAAT,CADiE,CAEjE;EACA;;;EACA,SAASD,6BAAT,CAAuCE,KAAvC,EAA8C;IAC1C,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CAL0C,CAM1C;EACH;EACD;AACJ;AACA;;;EACIH,6BAA6B,CAACK,SAA9B,CAAwCC,iBAAxC,GAA4D,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IACvG,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,IAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,kBAAjB;IACA,IAAIC,WAAW,GAAG,+BAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,6BAA6B,CAAC4B,kBAJ7B;MAK1BC,wBAAwB,EAAE5B,8BAA8B,CAAC2B;IAL/B,CAA9B;IAOA,IAAIE,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAjBD;;EAkBAnB,6BAA6B,CAACK,SAA9B,CAAwCO,SAAxC,GAAoD,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IAC1E,OAAO/B,iDAAiD,CAACM,KAAD,EAAQyB,OAAR,CAAxD;EACH,CAFD;;EAGA3B,6BAA6B,CAACK,SAA9B,CAAwCQ,WAAxC,GAAsD,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IAC7E,OAAOhC,mDAAmD,CAACiC,MAAD,EAASD,OAAT,CAA1D;EACH,CAFD;;EAGA,OAAO3B,6BAAP;AACH,CAxCkD,CAwCjDD,QAxCiD,CAAnD;;AAyCA,SAASC,6BAAT","names":["StopEventsDetectionJobRequest","StopEventsDetectionJobResponse","deserializeAws_json1_1StopEventsDetectionJobCommand","serializeAws_json1_1StopEventsDetectionJobCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","StopEventsDetectionJobCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-comprehend/commands/StopEventsDetectionJobCommand.ts"],"sourcesContent":["import { ComprehendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../ComprehendClient\";\nimport { StopEventsDetectionJobRequest, StopEventsDetectionJobResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1StopEventsDetectionJobCommand,\n  serializeAws_json1_1StopEventsDetectionJobCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type StopEventsDetectionJobCommandInput = StopEventsDetectionJobRequest;\nexport type StopEventsDetectionJobCommandOutput = StopEventsDetectionJobResponse & __MetadataBearer;\n\n/**\n * <p>Stops an events detection job in progress.</p>\n */\nexport class StopEventsDetectionJobCommand extends $Command<\n  StopEventsDetectionJobCommandInput,\n  StopEventsDetectionJobCommandOutput,\n  ComprehendClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: StopEventsDetectionJobCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: ComprehendClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<StopEventsDetectionJobCommandInput, StopEventsDetectionJobCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"ComprehendClient\";\n    const commandName = \"StopEventsDetectionJobCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: StopEventsDetectionJobRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StopEventsDetectionJobResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: StopEventsDetectionJobCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1StopEventsDetectionJobCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<StopEventsDetectionJobCommandOutput> {\n    return deserializeAws_json1_1StopEventsDetectionJobCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}