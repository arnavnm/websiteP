{"ast":null,"code":"import _slicedToArray from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { observeElementRect as t } from \"@radix-ui/rect\";\nimport * as r from \"react\";\nexport function useRect(e) {\n  var _r$useState = r.useState(),\n      _r$useState2 = _slicedToArray(_r$useState, 2),\n      o = _r$useState2[0],\n      c = _r$useState2[1];\n\n  return r.useEffect(function () {\n    if (e) {\n      var _r = t(e, c);\n\n      return function () {\n        c(void 0), _r();\n      };\n    }\n  }, [e]), o;\n}","map":{"version":3,"mappings":";AAAA,SAAOA,kBAAkB,IAAIC,CAA7B,QAAmC,gBAAnC;AAAoD,OAAM,KAAIC,CAAV,MAAgB,OAAhB;AAAwB,OAAO,SAASC,OAAT,CAAiBC,CAAjB,EAAmB;EAAC,kBAAWF,CAAC,CAACG,QAAF,EAAX;EAAA;EAAA,IAAMC,CAAN;EAAA,IAAQC,CAAR;;EAAwB,OAAOL,CAAC,CAACM,SAAF,CAAa,YAAI;IAAC,IAAGJ,CAAH,EAAK;MAAC,IAAMF,EAAC,GAACD,CAAC,CAACG,CAAD,EAAGG,CAAH,CAAT;;MAAe,OAAM,YAAI;QAACA,CAAC,CAAC,KAAK,CAAN,CAAD,EAAUL,EAAC,EAAX;MAAc,CAAzB;IAA0B;EAAC,CAAlE,EAAoE,CAACE,CAAD,CAApE,GAAyEE,CAAhF;AAAkF","names":["useRect","measurable","React","useState","rect","setRect","useEffect","unobserve","observeElementRect","undefined"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@radix-ui/react-use-rect/dist/packages/react/use-rect/src/useRect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { observeElementRect } from '@radix-ui/rect';\n\nimport type { Measurable } from '@radix-ui/rect';\n\n/**\n * Use this custom hook to get access to an element's rect (getBoundingClientRect)\n * and observe it along time.\n */\nfunction useRect(measurable: Measurable | null) {\n  const [rect, setRect] = React.useState<ClientRect>();\n  React.useEffect(() => {\n    if (measurable) {\n      const unobserve = observeElementRect(measurable, setRect);\n      return () => {\n        setRect(undefined);\n        unobserve();\n      };\n    }\n    return;\n  }, [measurable]);\n  return rect;\n}\n\nexport { useRect };\n"]},"metadata":{},"sourceType":"module"}