{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ConsoleLogger as Logger, ClientDevice, Credentials, Signer, JS, Hub, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { PinpointClient, PutEventsCommand, UpdateEndpointCommand } from '@aws-sdk/client-pinpoint';\nimport Cache from '@aws-amplify/cache';\nimport { v1 as uuid } from 'uuid';\nimport EventsBuffer from './EventBuffer';\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAnalyticsEvent = function (event, data) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\n\nvar logger = new Logger('AWSPinpointProvider');\nvar RETRYABLE_CODES = [429, 500];\nvar ACCEPTED_CODES = [202];\nvar FORBIDDEN_CODE = 403;\nvar MOBILE_SERVICE_NAME = 'mobiletargeting';\nvar EXPIRED_TOKEN_CODE = 'ExpiredTokenException';\nvar UPDATE_ENDPOINT = '_update_endpoint';\nvar SESSION_START = '_session.start';\nvar SESSION_STOP = '_session.stop';\nvar BEACON_SUPPORTED = typeof navigator !== 'undefined' && navigator && typeof navigator.sendBeacon === 'function'; // events buffer\n\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\n\nvar RESEND_LIMIT = 5; // params: { event: {name: , .... }, timeStamp, config, resendLimits }\n\nvar AWSPinpointProvider =\n/** @class */\nfunction () {\n  function AWSPinpointProvider(config) {\n    this._endpointGenerating = true;\n    this._endpointUpdateInProgress = false;\n    this._buffer = null;\n    this._endpointBuffer = [];\n    this._config = config ? config : {};\n    this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n    this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n    this._clientInfo = ClientDevice.clientInfo();\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSPinpointProvider.prototype.getCategory = function () {\n    return AWSPinpointProvider.category;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSPinpointProvider.prototype.getProviderName = function () {\n    return AWSPinpointProvider.providerName;\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n\n\n  AWSPinpointProvider.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Analytics', config);\n    var conf = config || {};\n    this._config = Object.assign({}, this._config, conf); // If autoSessionRecord is enabled, we need to wait for the endpoint to be\n    // updated before sending any events. See `sendEvents` in `Analytics.ts`\n\n    this._endpointGenerating = !!config['autoSessionRecord'];\n\n    if (this._config.appId && !this._config.disabled) {\n      if (!this._config.endpointId) {\n        var cacheKey = this.getProviderName() + '_' + this._config.appId;\n\n        this._getEndpointId(cacheKey).then(function (endpointId) {\n          logger.debug('setting endpoint id from the cache', endpointId);\n          _this._config.endpointId = endpointId;\n          dispatchAnalyticsEvent('pinpointProvider_configured', null);\n        }).catch(function (err) {\n          logger.debug('Failed to generate endpointId', err);\n        });\n      } else {\n        dispatchAnalyticsEvent('pinpointProvider_configured', null);\n      }\n    } else {\n      this._flushBuffer();\n    }\n\n    return this._config;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n\n\n  AWSPinpointProvider.prototype.record = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, timestamp;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('_public record', params);\n            return [4\n            /*yield*/\n            , this._getCredentials()];\n\n          case 1:\n            credentials = _a.sent();\n\n            if (!credentials || !this._config.appId || !this._config.region) {\n              logger.debug('cannot send events without credentials, applicationId or region');\n              return [2\n              /*return*/\n              , handlers.reject(new Error('No credentials, applicationId or region'))];\n            }\n\n            this._initClients(credentials);\n\n            timestamp = new Date().getTime(); // attach the session and eventId\n\n            this._generateSession(params);\n\n            params.event.eventId = uuid();\n            Object.assign(params, {\n              timestamp: timestamp,\n              config: this._config\n            });\n\n            if (params.event.immediate) {\n              return [2\n              /*return*/\n              , this._send(params, handlers)];\n            } else {\n              this._putToBuffer(params, handlers);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._sendEndpointUpdate = function (endpointObject) {\n    return __awaiter(this, void 0, void 0, function () {\n      var next;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._endpointUpdateInProgress) {\n              this._endpointBuffer.push(endpointObject);\n\n              return [2\n              /*return*/\n              ];\n            }\n\n            this._endpointUpdateInProgress = true;\n            return [4\n            /*yield*/\n            , this._updateEndpoint(endpointObject)];\n\n          case 1:\n            _a.sent();\n\n            next = this._endpointBuffer.shift();\n            this._endpointUpdateInProgress = false;\n            next && this._sendEndpointUpdate(next);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @private\n   * @param params - params for event recording\n   * Put events into buffer\n   */\n\n\n  AWSPinpointProvider.prototype._putToBuffer = function (params, handlers) {\n    if (params.event.name === UPDATE_ENDPOINT) {\n      this._sendEndpointUpdate({\n        params: params,\n        handlers: handlers\n      });\n\n      return;\n    }\n\n    this._buffer && this._buffer.push({\n      params: params,\n      handlers: handlers\n    });\n  };\n\n  AWSPinpointProvider.prototype._generateSession = function (params) {\n    this._sessionId = this._sessionId || uuid();\n    var event = params.event;\n\n    switch (event.name) {\n      case SESSION_START:\n        // refresh the session id and session start time\n        this._sessionStartTimestamp = new Date().getTime();\n        this._sessionId = uuid();\n        event.session = {\n          Id: this._sessionId,\n          StartTimestamp: new Date(this._sessionStartTimestamp).toISOString()\n        };\n        break;\n\n      case SESSION_STOP:\n        var stopTimestamp = new Date().getTime();\n        this._sessionStartTimestamp = this._sessionStartTimestamp || new Date().getTime();\n        this._sessionId = this._sessionId || uuid();\n        event.session = {\n          Id: this._sessionId,\n          Duration: stopTimestamp - this._sessionStartTimestamp,\n          StartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n          StopTimestamp: new Date(stopTimestamp).toISOString()\n        };\n        this._sessionId = undefined;\n        this._sessionStartTimestamp = undefined;\n        break;\n\n      default:\n        this._sessionStartTimestamp = this._sessionStartTimestamp || new Date().getTime();\n        this._sessionId = this._sessionId || uuid();\n        event.session = {\n          Id: this._sessionId,\n          StartTimestamp: new Date(this._sessionStartTimestamp).toISOString()\n        };\n    }\n  };\n\n  AWSPinpointProvider.prototype._send = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = params.event;\n\n        switch (event.name) {\n          case UPDATE_ENDPOINT:\n            return [2\n            /*return*/\n            , this._updateEndpoint({\n              params: params,\n              handlers: handlers\n            })];\n\n          case SESSION_STOP:\n            return [2\n            /*return*/\n            , this._pinpointSendStopSession(params, handlers)];\n\n          default:\n            return [2\n            /*return*/\n            , this._pinpointPutEvents(params, handlers)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._generateBatchItemContext = function (params) {\n    var _a;\n\n    var event = params.event,\n        timestamp = params.timestamp,\n        config = params.config;\n    var name = event.name,\n        attributes = event.attributes,\n        metrics = event.metrics,\n        eventId = event.eventId,\n        session = event.session;\n    var appId = config.appId,\n        endpointId = config.endpointId;\n    var endpointContext = {};\n    var eventParams = {\n      ApplicationId: appId,\n      EventsRequest: {\n        BatchItem: {}\n      }\n    };\n    var endpointObj = {};\n    endpointObj.Endpoint = endpointContext;\n    endpointObj.Events = (_a = {}, _a[eventId] = {\n      EventType: name,\n      Timestamp: new Date(timestamp).toISOString(),\n      Attributes: attributes,\n      Metrics: metrics,\n      Session: session\n    }, _a);\n    eventParams.EventsRequest.BatchItem[endpointId] = endpointObj;\n    return eventParams;\n  };\n\n  AWSPinpointProvider.prototype._pinpointPutEvents = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var eventId, endpointId, eventParams, command, data, _a, _b, _c, _d, StatusCode, Message, err_1;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            eventId = params.event.eventId, endpointId = params.config.endpointId;\n            eventParams = this._generateBatchItemContext(params);\n            command = new PutEventsCommand(eventParams);\n            _e.label = 1;\n\n          case 1:\n            _e.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.pinpointClient.send(command)];\n\n          case 2:\n            data = _e.sent();\n            _a = data, _b = endpointId, _c = eventId, _d = _a.EventsResponse.Results[_b].EventsItemResponse[_c], StatusCode = _d.StatusCode, Message = _d.Message;\n\n            if (ACCEPTED_CODES.includes(StatusCode)) {\n              logger.debug('record event success. ', data);\n              return [2\n              /*return*/\n              , handlers.resolve(data)];\n            } else {\n              if (RETRYABLE_CODES.includes(StatusCode)) {\n                this._retry(params, handlers);\n              } else {\n                logger.error(\"Event \" + eventId + \" is not accepted, the error is \" + Message);\n                return [2\n                /*return*/\n                , handlers.reject(data)];\n              }\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_1 = _e.sent();\n\n            this._eventError(err_1);\n\n            return [2\n            /*return*/\n            , handlers.reject(err_1)];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._pinpointSendStopSession = function (params, handlers) {\n    if (!BEACON_SUPPORTED) {\n      this._pinpointPutEvents(params, handlers);\n\n      return;\n    }\n\n    var eventParams = this._generateBatchItemContext(params);\n\n    var region = this._config.region;\n    var ApplicationId = eventParams.ApplicationId,\n        EventsRequest = eventParams.EventsRequest;\n    var accessInfo = {\n      secret_key: this._config.credentials.secretAccessKey,\n      access_key: this._config.credentials.accessKeyId,\n      session_token: this._config.credentials.sessionToken\n    };\n    var url = \"https://pinpoint.\" + region + \".amazonaws.com/v1/apps/\" + ApplicationId + \"/events/legacy\";\n    var body = JSON.stringify(EventsRequest);\n    var method = 'POST';\n    var request = {\n      url: url,\n      body: body,\n      method: method\n    };\n    var serviceInfo = {\n      region: region,\n      service: MOBILE_SERVICE_NAME\n    };\n    var requestUrl = Signer.signUrl(request, accessInfo, serviceInfo, null);\n    var success = navigator.sendBeacon(requestUrl, body);\n\n    if (success) {\n      return handlers.resolve('sendBeacon success');\n    }\n\n    return handlers.reject('sendBeacon failure');\n  };\n\n  AWSPinpointProvider.prototype._retry = function (params, handlers) {\n    var resendLimit = params.config.resendLimit; // For backward compatibility\n\n    params.resendLimit = typeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\n    if (params.resendLimit-- > 0) {\n      logger.debug(\"resending event \" + params.eventName + \" with \" + params.resendLimit + \" retry times left\");\n\n      this._pinpointPutEvents(params, handlers);\n    } else {\n      logger.debug(\"retry times used up for event \" + params.eventName);\n    }\n  };\n\n  AWSPinpointProvider.prototype._updateEndpoint = function (endpointObject) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params, handlers, config, event, appId, endpointId, request, update_params, command, data, err_2, failureData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            params = endpointObject.params, handlers = endpointObject.handlers;\n            config = params.config, event = params.event;\n            appId = config.appId, endpointId = config.endpointId;\n            request = this._endpointRequest(config, JS.transferKeyToLowerCase(event, [], ['attributes', 'userAttributes', 'Attributes', 'UserAttributes']));\n            update_params = {\n              ApplicationId: appId,\n              EndpointId: endpointId,\n              EndpointRequest: request\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            command = new UpdateEndpointCommand(update_params);\n            return [4\n            /*yield*/\n            , this.pinpointClient.send(command)];\n\n          case 2:\n            data = _a.sent();\n            logger.debug('updateEndpoint success', data);\n            this._endpointGenerating = false;\n\n            this._resumeBuffer();\n\n            handlers.resolve(data);\n            return [2\n            /*return*/\n            ];\n\n          case 3:\n            err_2 = _a.sent();\n            failureData = {\n              err: err_2,\n              update_params: update_params,\n              endpointObject: endpointObject\n            };\n            return [2\n            /*return*/\n            , this._handleEndpointUpdateFailure(failureData)];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._handleEndpointUpdateFailure = function (failureData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var err, endpointObject, statusCode, exponential;\n      return __generator(this, function (_a) {\n        err = failureData.err, endpointObject = failureData.endpointObject;\n        statusCode = err.$metadata && err.$metadata.httpStatusCode;\n        logger.debug('updateEndpoint error', err);\n\n        switch (statusCode) {\n          case FORBIDDEN_CODE:\n            return [2\n            /*return*/\n            , this._handleEndpointUpdateForbidden(failureData)];\n\n          default:\n            if (RETRYABLE_CODES.includes(statusCode)) {\n              exponential = true;\n              return [2\n              /*return*/\n              , this._retryEndpointUpdate(endpointObject, exponential)];\n            }\n\n            logger.error('updateEndpoint failed', err);\n            endpointObject.handlers.reject(err);\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._handleEndpointUpdateForbidden = function (failureData) {\n    var err = failureData.err,\n        endpointObject = failureData.endpointObject;\n    var code = err.code,\n        retryable = err.retryable;\n\n    if (code !== EXPIRED_TOKEN_CODE && !retryable) {\n      return endpointObject.handlers.reject(err);\n    }\n\n    this._retryEndpointUpdate(endpointObject);\n  };\n\n  AWSPinpointProvider.prototype._retryEndpointUpdate = function (endpointObject, exponential) {\n    if (exponential === void 0) {\n      exponential = false;\n    }\n\n    logger.debug('_retryEndpointUpdate', endpointObject);\n    var params = endpointObject.params; // TODO: implement retry with exp back off once exp function is available\n\n    var resendLimit = params.config.resendLimit;\n    params.resendLimit = typeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\n    if (params.resendLimit-- > 0) {\n      logger.debug(\"resending endpoint update \" + params.event.eventId + \" with \" + params.resendLimit + \" retry attempts remaining\"); // insert at the front of endpointBuffer\n\n      this._endpointBuffer.length ? this._endpointBuffer.unshift(endpointObject) : this._updateEndpoint(endpointObject);\n      return;\n    }\n\n    logger.warn(\"resending endpoint update \" + params.event.eventId + \" failed after \" + params.config.resendLimit + \" attempts\");\n\n    if (this._endpointGenerating) {\n      logger.error('Initial endpoint update failed. ');\n    }\n  };\n  /**\n   * @private\n   * @param config\n   * Init the clients\n   */\n\n\n  AWSPinpointProvider.prototype._initClients = function (credentials) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityId, region;\n      return __generator(this, function (_a) {\n        logger.debug('init clients');\n\n        if (this.pinpointClient && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n          logger.debug('no change for aws credentials, directly return from init');\n          return [2\n          /*return*/\n          ];\n        }\n\n        identityId = this._config.credentials ? this._config.credentials.identityId : null;\n        this._config.credentials = credentials;\n        region = this._config.region;\n        logger.debug('init clients with credentials', credentials);\n        this.pinpointClient = new PinpointClient({\n          region: region,\n          credentials: credentials,\n          customUserAgent: getAmplifyUserAgent()\n        }); // TODO: remove this middleware once a long term fix is implemented by aws-sdk-js team.\n\n        this.pinpointClient.middlewareStack.addRelativeTo(function (next) {\n          return function (args) {\n            delete args.request.headers['amz-sdk-invocation-id'];\n            delete args.request.headers['amz-sdk-request'];\n            return next(args);\n          };\n        }, {\n          step: 'finalizeRequest',\n          relation: 'after',\n          toMiddleware: 'retryMiddleware'\n        });\n\n        if (this._bufferExists() && identityId === credentials.identityId) {\n          // if the identity has remained the same, pass the updated client to the buffer\n          this._updateBufferClient();\n        } else {\n          // otherwise flush the buffer and instantiate a new one\n          // this will cause the old buffer to send any remaining events\n          // with the old credentials and then stop looping and shortly thereafter get picked up by GC\n          this._initBuffer();\n        }\n\n        this._customizePinpointClientReq();\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._bufferExists = function () {\n    return this._buffer && this._buffer instanceof EventsBuffer;\n  };\n\n  AWSPinpointProvider.prototype._initBuffer = function () {\n    if (this._bufferExists()) {\n      this._flushBuffer();\n    }\n\n    this._buffer = new EventsBuffer(this.pinpointClient, this._config); // if the first endpoint update hasn't yet resolved pause the buffer to\n    // prevent race conditions. It will be resumed as soon as that request succeeds\n\n    if (this._endpointGenerating) {\n      this._buffer.pause();\n    }\n  };\n\n  AWSPinpointProvider.prototype._updateBufferClient = function () {\n    if (this._bufferExists()) {\n      this._buffer.updateClient(this.pinpointClient);\n    }\n  };\n\n  AWSPinpointProvider.prototype._flushBuffer = function () {\n    if (this._bufferExists()) {\n      this._buffer.flush();\n\n      this._buffer = null;\n    }\n  };\n\n  AWSPinpointProvider.prototype._resumeBuffer = function () {\n    if (this._bufferExists()) {\n      this._buffer.resume();\n    }\n  };\n\n  AWSPinpointProvider.prototype._customizePinpointClientReq = function () {// TODO FIXME: Find a middleware to do this with AWS V3 SDK\n    // if (Platform.isReactNative) {\n    // \tthis.pinpointClient.customizeRequests(request => {\n    // \t\trequest.on('build', req => {\n    // \t\t\treq.httpRequest.headers['user-agent'] = Platform.userAgent;\n    // \t\t});\n    // \t});\n    // }\n  };\n\n  AWSPinpointProvider.prototype._getEndpointId = function (cacheKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var endpointId, ttl, expiration;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Cache.getItem(cacheKey)];\n\n          case 1:\n            endpointId = _a.sent();\n            logger.debug('endpointId from cache', endpointId, 'type', typeof endpointId);\n\n            if (!endpointId) {\n              endpointId = uuid();\n              ttl = 1000 * 60 * 60 * 24 * 365 * 100;\n              expiration = new Date().getTime() + ttl;\n              Cache.setItem(cacheKey, endpointId, {\n                expires: expiration,\n                priority: 1\n              });\n            }\n\n            return [2\n            /*return*/\n            , endpointId];\n        }\n      });\n    });\n  };\n  /**\n   * EndPoint request\n   * @return {Object} - The request of updating endpoint\n   */\n\n\n  AWSPinpointProvider.prototype._endpointRequest = function (config, event) {\n    var credentials = config.credentials;\n    var clientInfo = this._clientInfo || {};\n    var clientContext = config.clientContext || {}; // for now we have three different ways for default endpoint configurations\n    // clientInfo\n    // clientContext (deprecated)\n    // config.endpoint\n\n    var defaultEndpointConfig = config.endpoint || {};\n    var demographicByClientInfo = {\n      appVersion: clientInfo.appVersion,\n      make: clientInfo.make,\n      model: clientInfo.model,\n      modelVersion: clientInfo.version,\n      platform: clientInfo.platform\n    }; // for backward compatibility\n\n    var clientId = clientContext.clientId,\n        appTitle = clientContext.appTitle,\n        appVersionName = clientContext.appVersionName,\n        appVersionCode = clientContext.appVersionCode,\n        appPackageName = clientContext.appPackageName,\n        demographicByClientContext = __rest(clientContext, [\"clientId\", \"appTitle\", \"appVersionName\", \"appVersionCode\", \"appPackageName\"]);\n\n    var channelType = event.address ? clientInfo.platform === 'android' ? 'GCM' : 'APNS' : undefined;\n\n    var tmp = __assign(__assign(__assign({\n      channelType: channelType,\n      requestId: uuid(),\n      effectiveDate: new Date().toISOString()\n    }, defaultEndpointConfig), event), {\n      attributes: __assign(__assign({}, defaultEndpointConfig.attributes), event.attributes),\n      demographic: __assign(__assign(__assign(__assign({}, demographicByClientInfo), demographicByClientContext), defaultEndpointConfig.demographic), event.demographic),\n      location: __assign(__assign({}, defaultEndpointConfig.location), event.location),\n      metrics: __assign(__assign({}, defaultEndpointConfig.metrics), event.metrics),\n      user: {\n        userId: event.userId || defaultEndpointConfig.userId || credentials.identityId,\n        userAttributes: __assign(__assign({}, defaultEndpointConfig.userAttributes), event.userAttributes)\n      }\n    }); // eliminate unnecessary params\n\n\n    var userId = tmp.userId,\n        userAttributes = tmp.userAttributes,\n        name = tmp.name,\n        session = tmp.session,\n        eventId = tmp.eventId,\n        immediate = tmp.immediate,\n        ret = __rest(tmp, [\"userId\", \"userAttributes\", \"name\", \"session\", \"eventId\", \"immediate\"]);\n\n    return JS.transferKeyToUpperCase(ret, [], ['metrics', 'userAttributes', 'attributes']);\n  };\n\n  AWSPinpointProvider.prototype._eventError = function (err) {\n    logger.error('record event failed.', err);\n    logger.warn(\"Please ensure you have updated your Pinpoint IAM Policy \" + \"with the Action: \\\"mobiletargeting:PutEvents\\\" \" + \"in order to record events\");\n  };\n\n  AWSPinpointProvider.prototype._getCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, err_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2\n            /*return*/\n            , null];\n            logger.debug('set credentials for analytics', credentials);\n            return [2\n            /*return*/\n            , Credentials.shear(credentials)];\n\n          case 2:\n            err_3 = _a.sent();\n            logger.debug('ensure credentials error', err_3);\n            return [2\n            /*return*/\n            , null];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSPinpointProvider.category = 'Analytics';\n  AWSPinpointProvider.providerName = 'AWSPinpoint';\n  return AWSPinpointProvider;\n}();\n\nexport { AWSPinpointProvider };\n/**\n * @deprecated use named import\n */\n\nexport default AWSPinpointProvider;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","ClientDevice","Credentials","Signer","JS","Hub","getAmplifyUserAgent","PinpointClient","PutEventsCommand","UpdateEndpointCommand","Cache","v1","uuid","EventsBuffer","AMPLIFY_SYMBOL","Symbol","for","dispatchAnalyticsEvent","event","data","dispatch","logger","RETRYABLE_CODES","ACCEPTED_CODES","FORBIDDEN_CODE","MOBILE_SERVICE_NAME","EXPIRED_TOKEN_CODE","UPDATE_ENDPOINT","SESSION_START","SESSION_STOP","BEACON_SUPPORTED","navigator","sendBeacon","BUFFER_SIZE","FLUSH_SIZE","FLUSH_INTERVAL","RESEND_LIMIT","config","_buffer","_endpointBuffer","_config","bufferSize","flushSize","flushInterval","resendLimit","_clientInfo","clientInfo","AWSPinpointProvider","category","providerName","debug","conf","Object","assign","_endpointGenerating","appId","disabled","endpointId","cacheKey","getProviderName","_getEndpointId","then","_this","catch","err","_flushBuffer","params","handlers","_getCredentials","credentials","_a","region","reject","Error","_initClients","timestamp","Date","getTime","_generateSession","eventId","immediate","_send","_putToBuffer","endpointObject","_endpointUpdateInProgress","push","_updateEndpoint","next","shift","_sendEndpointUpdate","name","_sessionId","_sessionStartTimestamp","session","Id","StartTimestamp","toISOString","stopTimestamp","Duration","StopTimestamp","undefined","_pinpointSendStopSession","_pinpointPutEvents","attributes","metrics","endpointContext","eventParams","ApplicationId","EventsRequest","BatchItem","endpointObj","Endpoint","Events","EventType","Timestamp","Attributes","Metrics","Session","_generateBatchItemContext","command","pinpointClient","send","_e","_b","_c","_d","StatusCode","Message","includes","resolve","_retry","error","_eventError","err_1","accessInfo","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","url","body","JSON","stringify","method","request","serviceInfo","service","requestUrl","signUrl","success","eventName","_endpointRequest","transferKeyToLowerCase","update_params","EndpointId","EndpointRequest","_resumeBuffer","failureData","_handleEndpointUpdateFailure","statusCode","$metadata","httpStatusCode","_handleEndpointUpdateForbidden","exponential","_retryEndpointUpdate","retryable","code","length","unshift","warn","identityId","customUserAgent","middlewareStack","addRelativeTo","args","headers","step","relation","toMiddleware","_bufferExists","_updateBufferClient","_initBuffer","_customizePinpointClientReq","pause","updateClient","flush","resume","getItem","ttl","expiration","setItem","expires","priority","clientContext","defaultEndpointConfig","endpoint","demographicByClientInfo","appVersion","make","model","modelVersion","version","platform","appTitle","appVersionName","appVersionCode","appPackageName","demographicByClientContext","channelType","address","tmp","requestId","effectiveDate","demographic","location","user","userId","userAttributes","ret","transferKeyToUpperCase","get","shear","err_3"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/analytics/src/Providers/AWSPinpointProvider.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tConsoleLogger as Logger,\n\tClientDevice,\n\tCredentials,\n\tSigner,\n\tJS,\n\tHub,\n\tgetAmplifyUserAgent,\n} from '@aws-amplify/core';\nimport {\n\tEventsBatch,\n\tPinpointClient,\n\tPutEventsCommand,\n\tPutEventsCommandInput,\n\tUpdateEndpointCommand,\n} from '@aws-sdk/client-pinpoint';\nimport Cache from '@aws-amplify/cache';\n\nimport {\n\tAnalyticsProvider,\n\tPromiseHandlers,\n\tEndpointBuffer,\n\tEventParams,\n\tEventObject,\n\tEndpointFailureData,\n} from '../types';\nimport { v1 as uuid } from 'uuid';\nimport EventsBuffer from './EventBuffer';\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\n\nconst dispatchAnalyticsEvent = (event, data) => {\n\tHub.dispatch('analytics', { event, data }, 'Analytics', AMPLIFY_SYMBOL);\n};\n\nconst logger = new Logger('AWSPinpointProvider');\nconst RETRYABLE_CODES = [429, 500];\nconst ACCEPTED_CODES = [202];\nconst FORBIDDEN_CODE = 403;\nconst MOBILE_SERVICE_NAME = 'mobiletargeting';\nconst EXPIRED_TOKEN_CODE = 'ExpiredTokenException';\nconst UPDATE_ENDPOINT = '_update_endpoint';\nconst SESSION_START = '_session.start';\nconst SESSION_STOP = '_session.stop';\n\nconst BEACON_SUPPORTED =\n\ttypeof navigator !== 'undefined' &&\n\tnavigator &&\n\ttypeof navigator.sendBeacon === 'function';\n\n// events buffer\nconst BUFFER_SIZE = 1000;\nconst FLUSH_SIZE = 100;\nconst FLUSH_INTERVAL = 5 * 1000; // 5s\nconst RESEND_LIMIT = 5;\n\n// params: { event: {name: , .... }, timeStamp, config, resendLimits }\nexport class AWSPinpointProvider implements AnalyticsProvider {\n\tstatic category = 'Analytics';\n\tstatic providerName = 'AWSPinpoint';\n\n\tprivate _config;\n\tprivate pinpointClient;\n\tprivate _sessionId;\n\tprivate _sessionStartTimestamp;\n\tprivate _buffer: EventsBuffer;\n\tprivate _endpointBuffer: EndpointBuffer;\n\tprivate _clientInfo;\n\tprivate _endpointGenerating = true;\n\tprivate _endpointUpdateInProgress = false;\n\n\tconstructor(config?) {\n\t\tthis._buffer = null;\n\t\tthis._endpointBuffer = [];\n\t\tthis._config = config ? config : {};\n\t\tthis._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n\t\tthis._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n\t\tthis._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n\t\tthis._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n\t\tthis._clientInfo = ClientDevice.clientInfo();\n\t}\n\n\t/**\n\t * get the category of the plugin\n\t */\n\tgetCategory(): string {\n\t\treturn AWSPinpointProvider.category;\n\t}\n\n\t/**\n\t * get provider name of the plugin\n\t */\n\tgetProviderName(): string {\n\t\treturn AWSPinpointProvider.providerName;\n\t}\n\n\t/**\n\t * configure the plugin\n\t * @param {Object} config - configuration\n\t */\n\tpublic configure(config): object {\n\t\tlogger.debug('configure Analytics', config);\n\t\tconst conf = config || {};\n\t\tthis._config = Object.assign({}, this._config, conf);\n\n\t\t// If autoSessionRecord is enabled, we need to wait for the endpoint to be\n\t\t// updated before sending any events. See `sendEvents` in `Analytics.ts`\n\t\tthis._endpointGenerating = !!config['autoSessionRecord'];\n\n\t\tif (this._config.appId && !this._config.disabled) {\n\t\t\tif (!this._config.endpointId) {\n\t\t\t\tconst cacheKey = this.getProviderName() + '_' + this._config.appId;\n\t\t\t\tthis._getEndpointId(cacheKey)\n\t\t\t\t\t.then(endpointId => {\n\t\t\t\t\t\tlogger.debug('setting endpoint id from the cache', endpointId);\n\t\t\t\t\t\tthis._config.endpointId = endpointId;\n\t\t\t\t\t\tdispatchAnalyticsEvent('pinpointProvider_configured', null);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tlogger.debug('Failed to generate endpointId', err);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatchAnalyticsEvent('pinpointProvider_configured', null);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * record an event\n\t * @param {Object} params - the params of an event\n\t */\n\tpublic async record(params: EventParams, handlers: PromiseHandlers) {\n\t\tlogger.debug('_public record', params);\n\t\tconst credentials = await this._getCredentials();\n\t\tif (!credentials || !this._config.appId || !this._config.region) {\n\t\t\tlogger.debug(\n\t\t\t\t'cannot send events without credentials, applicationId or region'\n\t\t\t);\n\t\t\treturn handlers.reject(\n\t\t\t\tnew Error('No credentials, applicationId or region')\n\t\t\t);\n\t\t}\n\n\t\tthis._initClients(credentials);\n\n\t\tconst timestamp = new Date().getTime();\n\t\t// attach the session and eventId\n\t\tthis._generateSession(params);\n\t\tparams.event.eventId = uuid();\n\n\t\tObject.assign(params, { timestamp, config: this._config });\n\n\t\tif (params.event.immediate) {\n\t\t\treturn this._send(params, handlers);\n\t\t} else {\n\t\t\tthis._putToBuffer(params, handlers);\n\t\t}\n\t}\n\n\tprivate async _sendEndpointUpdate(endpointObject: EventObject) {\n\t\tif (this._endpointUpdateInProgress) {\n\t\t\tthis._endpointBuffer.push(endpointObject);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._endpointUpdateInProgress = true;\n\t\tawait this._updateEndpoint(endpointObject);\n\n\t\tconst next = this._endpointBuffer.shift();\n\t\tthis._endpointUpdateInProgress = false;\n\n\t\tnext && this._sendEndpointUpdate(next);\n\t}\n\n\t/**\n\t * @private\n\t * @param params - params for event recording\n\t * Put events into buffer\n\t */\n\tprivate _putToBuffer(params, handlers) {\n\t\tif (params.event.name === UPDATE_ENDPOINT) {\n\t\t\tthis._sendEndpointUpdate({ params, handlers });\n\t\t\treturn;\n\t\t}\n\n\t\tthis._buffer && this._buffer.push({ params, handlers });\n\t}\n\n\tprivate _generateSession(params) {\n\t\tthis._sessionId = this._sessionId || uuid();\n\t\tconst { event } = params;\n\n\t\tswitch (event.name) {\n\t\t\tcase SESSION_START:\n\t\t\t\t// refresh the session id and session start time\n\t\t\t\tthis._sessionStartTimestamp = new Date().getTime();\n\t\t\t\tthis._sessionId = uuid();\n\t\t\t\tevent.session = {\n\t\t\t\t\tId: this._sessionId,\n\t\t\t\t\tStartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase SESSION_STOP:\n\t\t\t\tconst stopTimestamp = new Date().getTime();\n\t\t\t\tthis._sessionStartTimestamp =\n\t\t\t\t\tthis._sessionStartTimestamp || new Date().getTime();\n\t\t\t\tthis._sessionId = this._sessionId || uuid();\n\t\t\t\tevent.session = {\n\t\t\t\t\tId: this._sessionId,\n\t\t\t\t\tDuration: stopTimestamp - this._sessionStartTimestamp,\n\t\t\t\t\tStartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n\t\t\t\t\tStopTimestamp: new Date(stopTimestamp).toISOString(),\n\t\t\t\t};\n\t\t\t\tthis._sessionId = undefined;\n\t\t\t\tthis._sessionStartTimestamp = undefined;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._sessionStartTimestamp =\n\t\t\t\t\tthis._sessionStartTimestamp || new Date().getTime();\n\t\t\t\tthis._sessionId = this._sessionId || uuid();\n\t\t\t\tevent.session = {\n\t\t\t\t\tId: this._sessionId,\n\t\t\t\t\tStartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n\t\t\t\t};\n\t\t}\n\t}\n\n\tprivate async _send(params, handlers) {\n\t\tconst { event } = params;\n\n\t\tswitch (event.name) {\n\t\t\tcase UPDATE_ENDPOINT:\n\t\t\t\treturn this._updateEndpoint({ params, handlers });\n\t\t\tcase SESSION_STOP:\n\t\t\t\treturn this._pinpointSendStopSession(params, handlers);\n\t\t\tdefault:\n\t\t\t\treturn this._pinpointPutEvents(params, handlers);\n\t\t}\n\t}\n\n\tprivate _generateBatchItemContext(params) {\n\t\tconst { event, timestamp, config } = params;\n\t\tconst { name, attributes, metrics, eventId, session } = event;\n\t\tconst { appId, endpointId } = config;\n\n\t\tconst endpointContext = {};\n\n\t\tconst eventParams: PutEventsCommandInput = {\n\t\t\tApplicationId: appId,\n\t\t\tEventsRequest: {\n\t\t\t\tBatchItem: {},\n\t\t\t},\n\t\t};\n\n\t\tconst endpointObj: EventsBatch = {} as EventsBatch;\n\t\tendpointObj.Endpoint = endpointContext;\n\t\tendpointObj.Events = {\n\t\t\t[eventId]: {\n\t\t\t\tEventType: name,\n\t\t\t\tTimestamp: new Date(timestamp).toISOString(),\n\t\t\t\tAttributes: attributes,\n\t\t\t\tMetrics: metrics,\n\t\t\t\tSession: session,\n\t\t\t},\n\t\t};\n\t\teventParams.EventsRequest.BatchItem[endpointId] = endpointObj;\n\n\t\treturn eventParams;\n\t}\n\n\tprivate async _pinpointPutEvents(params, handlers) {\n\t\tconst {\n\t\t\tevent: { eventId },\n\t\t\tconfig: { endpointId },\n\t\t} = params;\n\t\tconst eventParams = this._generateBatchItemContext(params);\n\t\tconst command: PutEventsCommand = new PutEventsCommand(eventParams);\n\n\t\ttry {\n\t\t\tconst data = await this.pinpointClient.send(command);\n\t\t\tconst {\n\t\t\t\tEventsResponse: {\n\t\t\t\t\tResults: {\n\t\t\t\t\t\t[endpointId]: {\n\t\t\t\t\t\t\tEventsItemResponse: {\n\t\t\t\t\t\t\t\t[eventId]: { StatusCode, Message },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} = data;\n\t\t\tif (ACCEPTED_CODES.includes(StatusCode)) {\n\t\t\t\tlogger.debug('record event success. ', data);\n\t\t\t\treturn handlers.resolve(data);\n\t\t\t} else {\n\t\t\t\tif (RETRYABLE_CODES.includes(StatusCode)) {\n\t\t\t\t\tthis._retry(params, handlers);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.error(\n\t\t\t\t\t\t`Event ${eventId} is not accepted, the error is ${Message}`\n\t\t\t\t\t);\n\t\t\t\t\treturn handlers.reject(data);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis._eventError(err);\n\t\t\treturn handlers.reject(err);\n\t\t}\n\t}\n\n\tprivate _pinpointSendStopSession(params, handlers): Promise<string> {\n\t\tif (!BEACON_SUPPORTED) {\n\t\t\tthis._pinpointPutEvents(params, handlers);\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventParams = this._generateBatchItemContext(params);\n\n\t\tconst { region } = this._config;\n\t\tconst { ApplicationId, EventsRequest } = eventParams;\n\n\t\tconst accessInfo = {\n\t\t\tsecret_key: this._config.credentials.secretAccessKey,\n\t\t\taccess_key: this._config.credentials.accessKeyId,\n\t\t\tsession_token: this._config.credentials.sessionToken,\n\t\t};\n\n\t\tconst url = `https://pinpoint.${region}.amazonaws.com/v1/apps/${ApplicationId}/events/legacy`;\n\t\tconst body = JSON.stringify(EventsRequest);\n\t\tconst method = 'POST';\n\n\t\tconst request = {\n\t\t\turl,\n\t\t\tbody,\n\t\t\tmethod,\n\t\t};\n\n\t\tconst serviceInfo = { region, service: MOBILE_SERVICE_NAME };\n\n\t\tconst requestUrl: string = Signer.signUrl(\n\t\t\trequest,\n\t\t\taccessInfo,\n\t\t\tserviceInfo,\n\t\t\tnull\n\t\t);\n\n\t\tconst success: boolean = navigator.sendBeacon(requestUrl, body);\n\n\t\tif (success) {\n\t\t\treturn handlers.resolve('sendBeacon success');\n\t\t}\n\t\treturn handlers.reject('sendBeacon failure');\n\t}\n\n\tprivate _retry(params, handlers) {\n\t\tconst {\n\t\t\tconfig: { resendLimit },\n\t\t} = params;\n\t\t// For backward compatibility\n\t\tparams.resendLimit =\n\t\t\ttypeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\t\tif (params.resendLimit-- > 0) {\n\t\t\tlogger.debug(\n\t\t\t\t`resending event ${params.eventName} with ${params.resendLimit} retry times left`\n\t\t\t);\n\t\t\tthis._pinpointPutEvents(params, handlers);\n\t\t} else {\n\t\t\tlogger.debug(`retry times used up for event ${params.eventName}`);\n\t\t}\n\t}\n\n\tprivate async _updateEndpoint(endpointObject: EventObject) {\n\t\tconst { params, handlers } = endpointObject;\n\t\tconst { config, event } = params;\n\t\tconst { appId, endpointId } = config;\n\n\t\tconst request = this._endpointRequest(\n\t\t\tconfig,\n\t\t\tJS.transferKeyToLowerCase(\n\t\t\t\tevent,\n\t\t\t\t[],\n\t\t\t\t['attributes', 'userAttributes', 'Attributes', 'UserAttributes']\n\t\t\t)\n\t\t);\n\t\tconst update_params = {\n\t\t\tApplicationId: appId,\n\t\t\tEndpointId: endpointId,\n\t\t\tEndpointRequest: request,\n\t\t};\n\n\t\ttry {\n\t\t\tconst command: UpdateEndpointCommand = new UpdateEndpointCommand(\n\t\t\t\tupdate_params\n\t\t\t);\n\t\t\tconst data = await this.pinpointClient.send(command);\n\n\t\t\tlogger.debug('updateEndpoint success', data);\n\t\t\tthis._endpointGenerating = false;\n\t\t\tthis._resumeBuffer();\n\n\t\t\thandlers.resolve(data);\n\t\t\treturn;\n\t\t} catch (err) {\n\t\t\tconst failureData: EndpointFailureData = {\n\t\t\t\terr,\n\t\t\t\tupdate_params,\n\t\t\t\tendpointObject,\n\t\t\t};\n\n\t\t\treturn this._handleEndpointUpdateFailure(failureData);\n\t\t}\n\t}\n\n\tprivate async _handleEndpointUpdateFailure(failureData: EndpointFailureData) {\n\t\tconst { err, endpointObject } = failureData;\n\t\tconst statusCode = err.$metadata && err.$metadata.httpStatusCode;\n\n\t\tlogger.debug('updateEndpoint error', err);\n\n\t\tswitch (statusCode) {\n\t\t\tcase FORBIDDEN_CODE:\n\t\t\t\treturn this._handleEndpointUpdateForbidden(failureData);\n\t\t\tdefault:\n\t\t\t\tif (RETRYABLE_CODES.includes(statusCode)) {\n\t\t\t\t\t// Server error. Attempt exponential retry\n\t\t\t\t\tconst exponential = true;\n\t\t\t\t\treturn this._retryEndpointUpdate(endpointObject, exponential);\n\t\t\t\t}\n\t\t\t\tlogger.error('updateEndpoint failed', err);\n\t\t\t\tendpointObject.handlers.reject(err);\n\t\t}\n\t}\n\n\tprivate _handleEndpointUpdateForbidden(failureData: EndpointFailureData) {\n\t\tconst { err, endpointObject } = failureData;\n\n\t\tconst { code, retryable } = err;\n\n\t\tif (code !== EXPIRED_TOKEN_CODE && !retryable) {\n\t\t\treturn endpointObject.handlers.reject(err);\n\t\t}\n\n\t\tthis._retryEndpointUpdate(endpointObject);\n\t}\n\n\tprivate _retryEndpointUpdate(\n\t\tendpointObject: EventObject,\n\t\texponential: boolean = false\n\t) {\n\t\tlogger.debug('_retryEndpointUpdate', endpointObject);\n\t\tconst { params } = endpointObject;\n\n\t\t// TODO: implement retry with exp back off once exp function is available\n\t\tconst {\n\t\t\tconfig: { resendLimit },\n\t\t} = params;\n\n\t\tparams.resendLimit =\n\t\t\ttypeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\n\t\tif (params.resendLimit-- > 0) {\n\t\t\tlogger.debug(\n\t\t\t\t`resending endpoint update ${params.event.eventId} with ${params.resendLimit} retry attempts remaining`\n\t\t\t);\n\t\t\t// insert at the front of endpointBuffer\n\t\t\tthis._endpointBuffer.length\n\t\t\t\t? this._endpointBuffer.unshift(endpointObject)\n\t\t\t\t: this._updateEndpoint(endpointObject);\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.warn(\n\t\t\t`resending endpoint update ${params.event.eventId} failed after ${params.config.resendLimit} attempts`\n\t\t);\n\n\t\tif (this._endpointGenerating) {\n\t\t\tlogger.error('Initial endpoint update failed. ');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param config\n\t * Init the clients\n\t */\n\tprivate async _initClients(credentials) {\n\t\tlogger.debug('init clients');\n\n\t\tif (\n\t\t\tthis.pinpointClient &&\n\t\t\tthis._config.credentials &&\n\t\t\tthis._config.credentials.sessionToken === credentials.sessionToken &&\n\t\t\tthis._config.credentials.identityId === credentials.identityId\n\t\t) {\n\t\t\tlogger.debug('no change for aws credentials, directly return from init');\n\t\t\treturn;\n\t\t}\n\n\t\tconst identityId = this._config.credentials\n\t\t\t? this._config.credentials.identityId\n\t\t\t: null;\n\n\t\tthis._config.credentials = credentials;\n\t\tconst { region } = this._config;\n\t\tlogger.debug('init clients with credentials', credentials);\n\t\tthis.pinpointClient = new PinpointClient({\n\t\t\tregion,\n\t\t\tcredentials,\n\t\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t\t});\n\n\t\t// TODO: remove this middleware once a long term fix is implemented by aws-sdk-js team.\n\t\tthis.pinpointClient.middlewareStack.addRelativeTo(\n\t\t\tnext => args => {\n\t\t\t\tdelete args.request.headers['amz-sdk-invocation-id'];\n\t\t\t\tdelete args.request.headers['amz-sdk-request'];\n\t\t\t\treturn next(args);\n\t\t\t},\n\t\t\t{\n\t\t\t\tstep: 'finalizeRequest',\n\t\t\t\trelation: 'after',\n\t\t\t\ttoMiddleware: 'retryMiddleware',\n\t\t\t}\n\t\t);\n\n\t\tif (this._bufferExists() && identityId === credentials.identityId) {\n\t\t\t// if the identity has remained the same, pass the updated client to the buffer\n\t\t\tthis._updateBufferClient();\n\t\t} else {\n\t\t\t// otherwise flush the buffer and instantiate a new one\n\t\t\t// this will cause the old buffer to send any remaining events\n\t\t\t// with the old credentials and then stop looping and shortly thereafter get picked up by GC\n\t\t\tthis._initBuffer();\n\t\t}\n\n\t\tthis._customizePinpointClientReq();\n\t}\n\n\tprivate _bufferExists() {\n\t\treturn this._buffer && this._buffer instanceof EventsBuffer;\n\t}\n\n\tprivate _initBuffer() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._flushBuffer();\n\t\t}\n\n\t\tthis._buffer = new EventsBuffer(this.pinpointClient, this._config);\n\n\t\t// if the first endpoint update hasn't yet resolved pause the buffer to\n\t\t// prevent race conditions. It will be resumed as soon as that request succeeds\n\t\tif (this._endpointGenerating) {\n\t\t\tthis._buffer.pause();\n\t\t}\n\t}\n\n\tprivate _updateBufferClient() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._buffer.updateClient(this.pinpointClient);\n\t\t}\n\t}\n\n\tprivate _flushBuffer() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._buffer.flush();\n\t\t\tthis._buffer = null;\n\t\t}\n\t}\n\n\tprivate _resumeBuffer() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._buffer.resume();\n\t\t}\n\t}\n\n\tprivate _customizePinpointClientReq() {\n\t\t// TODO FIXME: Find a middleware to do this with AWS V3 SDK\n\t\t// if (Platform.isReactNative) {\n\t\t// \tthis.pinpointClient.customizeRequests(request => {\n\t\t// \t\trequest.on('build', req => {\n\t\t// \t\t\treq.httpRequest.headers['user-agent'] = Platform.userAgent;\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }\n\t}\n\n\tprivate async _getEndpointId(cacheKey) {\n\t\t// try to get from cache\n\t\tlet endpointId = await Cache.getItem(cacheKey);\n\t\tlogger.debug(\n\t\t\t'endpointId from cache',\n\t\t\tendpointId,\n\t\t\t'type',\n\t\t\ttypeof endpointId\n\t\t);\n\t\tif (!endpointId) {\n\t\t\tendpointId = uuid();\n\t\t\t// set a longer TTL to avoid endpoint id being deleted after the default TTL (3 days)\n\t\t\t// also set its priority to the highest to reduce its chance of being deleted when cache is full\n\t\t\tconst ttl = 1000 * 60 * 60 * 24 * 365 * 100; // 100 years\n\t\t\tconst expiration = new Date().getTime() + ttl;\n\t\t\tCache.setItem(cacheKey, endpointId, {\n\t\t\t\texpires: expiration,\n\t\t\t\tpriority: 1,\n\t\t\t});\n\t\t}\n\t\treturn endpointId;\n\t}\n\n\t/**\n\t * EndPoint request\n\t * @return {Object} - The request of updating endpoint\n\t */\n\tprivate _endpointRequest(config, event) {\n\t\tconst { credentials } = config;\n\t\tconst clientInfo = this._clientInfo || {};\n\t\tconst clientContext = config.clientContext || {};\n\t\t// for now we have three different ways for default endpoint configurations\n\t\t// clientInfo\n\t\t// clientContext (deprecated)\n\t\t// config.endpoint\n\t\tconst defaultEndpointConfig = config.endpoint || {};\n\t\tconst demographicByClientInfo = {\n\t\t\tappVersion: clientInfo.appVersion,\n\t\t\tmake: clientInfo.make,\n\t\t\tmodel: clientInfo.model,\n\t\t\tmodelVersion: clientInfo.version,\n\t\t\tplatform: clientInfo.platform,\n\t\t};\n\t\t// for backward compatibility\n\t\tconst {\n\t\t\tclientId,\n\t\t\tappTitle,\n\t\t\tappVersionName,\n\t\t\tappVersionCode,\n\t\t\tappPackageName,\n\t\t\t...demographicByClientContext\n\t\t} = clientContext;\n\t\tconst channelType = event.address\n\t\t\t? clientInfo.platform === 'android'\n\t\t\t\t? 'GCM'\n\t\t\t\t: 'APNS'\n\t\t\t: undefined;\n\t\tconst tmp = {\n\t\t\tchannelType,\n\t\t\trequestId: uuid(),\n\t\t\teffectiveDate: new Date().toISOString(),\n\t\t\t...defaultEndpointConfig,\n\t\t\t...event,\n\t\t\tattributes: {\n\t\t\t\t...defaultEndpointConfig.attributes,\n\t\t\t\t...event.attributes,\n\t\t\t},\n\t\t\tdemographic: {\n\t\t\t\t...demographicByClientInfo,\n\t\t\t\t...demographicByClientContext,\n\t\t\t\t...defaultEndpointConfig.demographic,\n\t\t\t\t...event.demographic,\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\t...defaultEndpointConfig.location,\n\t\t\t\t...event.location,\n\t\t\t},\n\t\t\tmetrics: {\n\t\t\t\t...defaultEndpointConfig.metrics,\n\t\t\t\t...event.metrics,\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tuserId:\n\t\t\t\t\tevent.userId ||\n\t\t\t\t\tdefaultEndpointConfig.userId ||\n\t\t\t\t\tcredentials.identityId,\n\t\t\t\tuserAttributes: {\n\t\t\t\t\t...defaultEndpointConfig.userAttributes,\n\t\t\t\t\t...event.userAttributes,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\t// eliminate unnecessary params\n\t\tconst {\n\t\t\tuserId,\n\t\t\tuserAttributes,\n\t\t\tname,\n\t\t\tsession,\n\t\t\teventId,\n\t\t\timmediate,\n\t\t\t...ret\n\t\t} = tmp;\n\t\treturn JS.transferKeyToUpperCase(\n\t\t\tret,\n\t\t\t[],\n\t\t\t['metrics', 'userAttributes', 'attributes']\n\t\t);\n\t}\n\n\tprivate _eventError(err: any) {\n\t\tlogger.error('record event failed.', err);\n\t\tlogger.warn(\n\t\t\t`Please ensure you have updated your Pinpoint IAM Policy ` +\n\t\t\t\t`with the Action: \"mobiletargeting:PutEvents\" ` +\n\t\t\t\t`in order to record events`\n\t\t);\n\t}\n\n\tprivate async _getCredentials() {\n\t\ttry {\n\t\t\tconst credentials = await Credentials.get();\n\t\t\tif (!credentials) return null;\n\n\t\t\tlogger.debug('set credentials for analytics', credentials);\n\t\t\treturn Credentials.shear(credentials);\n\t\t} catch (err) {\n\t\t\tlogger.debug('ensure credentials error', err);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default AWSPinpointProvider;\n"]},"metadata":{},"sourceType":"module"}