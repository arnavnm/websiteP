{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Credentials, Parser, StorageHelper, Hub } from '@aws-amplify/core';\nimport { GetObjectCommand, DeleteObjectCommand, ListObjectsV2Command, CopyObjectCommand } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from './axios-http-handler';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { createPrefixMiddleware, prefixMiddlewareOptions, getPrefix, autoAdjustClockskewMiddleware, autoAdjustClockskewMiddlewareOptions, createS3Client } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar AWSS3Provider =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    var _this = this;\n\n    this._config = config ? config : {};\n    this._storage = new StorageHelper().getStorage();\n    Hub.listen('auth', function (data) {\n      var payload = data.payload;\n\n      if (payload.event === 'signOut' || payload.event === 'signIn') {\n        _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n      }\n    });\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n\n  AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n    var s3Client = addTaskInput.s3Client,\n        emitter = addTaskInput.emitter,\n        key = addTaskInput.key,\n        file = addTaskInput.file,\n        params = addTaskInput.params;\n    var progressCallback = config.progressCallback,\n        completeCallback = config.completeCallback,\n        errorCallback = config.errorCallback,\n        _a = config.track,\n        track = _a === void 0 ? false : _a;\n\n    if (!(file instanceof Blob)) {\n      throw new Error(StorageErrorStrings.INVALID_BLOB);\n    }\n\n    emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          progressCallback(event);\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n      if (completeCallback) {\n        if (typeof completeCallback === 'function') {\n          completeCallback(event);\n        } else {\n          logger.warn('completeCallback should be a function, not a ' + typeof completeCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.ERROR, function (err) {\n      if (errorCallback) {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        } else {\n          logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n        }\n      }\n    }); // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n    // when its doing a final check with _listSingleFile function\n\n    var prefixPromise = Credentials.get().then(function (credentials) {\n      var cred = Credentials.shear(credentials);\n      return getPrefix(__assign(__assign({}, config), {\n        credentials: cred\n      }));\n    });\n    var task = new AWSS3UploadTask({\n      s3Client: s3Client,\n      file: file,\n      emitter: emitter,\n      level: config.level,\n      storage: this._storage,\n      params: params,\n      prefixPromise: prefixPromise\n    });\n    dispatchStorageEvent(track, 'upload', {\n      method: 'put',\n      result: 'success'\n    }, null, \"Upload Task created successfully for \" + key); // automatically start the upload task\n\n    task.resume();\n    return task;\n  };\n  /**\n   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n   * different level or identityId (if source object's level is 'protected').\n   *\n   * @async\n   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n   */\n\n\n  AWSS3Provider.prototype.copy = function (src, dest, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;\n            _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;\n\n            if (!srcKey || typeof srcKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_SRC_KEY);\n            }\n\n            if (!destKey || typeof destKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_DEST_KEY);\n            }\n\n            if (srcLevel !== 'protected' && srcIdentityId) {\n              logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \" + srcLevel);\n            }\n\n            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {\n              level: srcLevel\n            }), srcIdentityId && {\n              identityId: srcIdentityId\n            }));\n            destPrefix = this._prefix(__assign(__assign({}, opt), {\n              level: destLevel\n            }));\n            finalSrcKey = bucket + \"/\" + srcPrefix + srcKey;\n            finalDestKey = \"\" + destPrefix + destKey;\n            logger.debug(\"copying \" + finalSrcKey + \" to \" + finalDestKey);\n            params = {\n              Bucket: bucket,\n              CopySource: finalSrcKey,\n              Key: finalDestKey,\n              // Copies over metadata like contentType as well\n              MetadataDirective: 'COPY'\n            };\n            if (cacheControl) params.CacheControl = cacheControl;\n            if (expires) params.Expires = expires;\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n\n            if (acl) params.ACL = acl;\n            s3 = this._createNewS3Client(opt);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(new CopyObjectCommand(params))];\n\n          case 3:\n            _c.sent();\n\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'success'\n            }, null, \"Copy success from \" + srcKey + \" to \" + destKey);\n            return [2\n            /*return*/\n            , {\n              key: destKey\n            }];\n\n          case 4:\n            error_1 = _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'failed'\n            }, null, \"Copy failed from \" + srcKey + \" to \" + destKey);\n            throw error_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _b.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            emitter = new events.EventEmitter();\n            s3 = this._createNewS3Client(opt, emitter);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (!(download === true)) return [3\n            /*break*/\n            , 5];\n            getObjectCommand = new GetObjectCommand(params);\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , s3.send(getObjectCommand)];\n\n          case 3:\n            response = _b.sent();\n            emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \" + key);\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_2 = _b.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \" + error_2.message);\n            throw error_2;\n\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n\n            signer = new S3RequestPresigner(__assign({}, s3.config));\n            return [4\n            /*yield*/\n            , createRequest(s3, new GetObjectCommand(params))];\n\n          case 6:\n            request = _b.sent();\n            _a = formatUrl;\n            return [4\n            /*yield*/\n            , signer.presign(request, {\n              expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION\n            })];\n\n          case 7:\n            url = _a.apply(void 0, [_b.sent()]);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \" + url);\n            return [2\n            /*return*/\n            , url];\n\n          case 8:\n            error_3 = _b.sent();\n            logger.warn('get signed url error', error_3);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \" + key);\n            throw error_3;\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param key - key of the object\n   * @param object - File to be put in Amazon S3 bucket\n   * @param [config] - Optional configuration for the underlying S3 command\n   * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n   * success.\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    var opt = Object.assign({}, this._config, config);\n    var bucket = opt.bucket,\n        track = opt.track,\n        progressCallback = opt.progressCallback,\n        level = opt.level,\n        resumable = opt.resumable;\n    var contentType = opt.contentType,\n        contentDisposition = opt.contentDisposition,\n        contentEncoding = opt.contentEncoding,\n        cacheControl = opt.cacheControl,\n        expires = opt.expires,\n        metadata = opt.metadata,\n        tagging = opt.tagging,\n        acl = opt.acl;\n    var serverSideEncryption = opt.serverSideEncryption,\n        SSECustomerAlgorithm = opt.SSECustomerAlgorithm,\n        SSECustomerKey = opt.SSECustomerKey,\n        SSECustomerKeyMD5 = opt.SSECustomerKeyMD5,\n        SSEKMSKeyId = opt.SSEKMSKeyId;\n    var type = contentType ? contentType : 'binary/octet-stream';\n    var params = {\n      Bucket: bucket,\n      Key: key,\n      Body: object,\n      ContentType: type\n    };\n\n    if (cacheControl) {\n      params.CacheControl = cacheControl;\n    }\n\n    if (contentDisposition) {\n      params.ContentDisposition = contentDisposition;\n    }\n\n    if (contentEncoding) {\n      params.ContentEncoding = contentEncoding;\n    }\n\n    if (expires) {\n      params.Expires = expires;\n    }\n\n    if (metadata) {\n      params.Metadata = metadata;\n    }\n\n    if (tagging) {\n      params.Tagging = tagging;\n    }\n\n    if (serverSideEncryption) {\n      params.ServerSideEncryption = serverSideEncryption;\n    }\n\n    if (SSECustomerAlgorithm) {\n      params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n    }\n\n    if (SSECustomerKey) {\n      params.SSECustomerKey = SSECustomerKey;\n    }\n\n    if (SSECustomerKeyMD5) {\n      params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n    }\n\n    if (SSEKMSKeyId) {\n      params.SSEKMSKeyId = SSEKMSKeyId;\n    }\n\n    var emitter = new events.EventEmitter();\n    var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n\n    if (acl) {\n      params.ACL = acl;\n    }\n\n    if (resumable === true) {\n      var s3Client = this._createNewS3Client(opt); // we are using aws sdk middleware to inject the prefix to key, this way we don't have to call\n      // this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask\n\n\n      s3Client.middlewareStack.add(createPrefixMiddleware(opt, key), prefixMiddlewareOptions);\n      var addTaskInput = {\n        bucket: bucket,\n        key: key,\n        s3Client: s3Client,\n        file: object,\n        emitter: emitter,\n        accessLevel: level,\n        params: params\n      }; // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n\n      return this.startResumableUpload(addTaskInput, config);\n    }\n\n    try {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            progressCallback(progress);\n          });\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n\n      return uploader.upload().then(function (response) {\n        logger.debug('upload result', response);\n        dispatchStorageEvent(track, 'upload', {\n          method: 'put',\n          result: 'success'\n        }, null, \"Upload success for \" + key);\n        return {\n          key: key\n        };\n      });\n    } catch (error) {\n      logger.warn('error uploading', error);\n      dispatchStorageEvent(track, 'upload', {\n        method: 'put',\n        result: 'failed'\n      }, null, \"Error uploading \" + key);\n      throw error;\n    }\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            deleteObjectCommand = new DeleteObjectCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(deleteObjectCommand)];\n\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \" + key + \" successfully\");\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_4 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \" + key + \" failed with \" + error_4);\n            throw error_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._list = function (params, opt, prefix) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, s3, listObjectsV2Command, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            result = {\n              contents: [],\n              nextToken: ''\n            };\n            s3 = this._createNewS3Client(opt);\n            listObjectsV2Command = new ListObjectsV2Command(__assign({}, params));\n            return [4\n            /*yield*/\n            , s3.send(listObjectsV2Command)];\n\n          case 1:\n            response = _a.sent();\n\n            if (response && response.Contents) {\n              result.contents = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n              result.nextToken = response.NextContinuationToken;\n            }\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n   * all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, list, token, listResult, params, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            logger.debug('list ' + path + ' from ' + final_path);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 10,, 11]);\n\n            list = [];\n            token = void 0;\n            listResult = void 0;\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: 1000\n            };\n            if (!(maxKeys === 'ALL')) return [3\n            /*break*/\n            , 7];\n            _a.label = 3;\n\n          case 3:\n            params.ContinuationToken = token;\n            params.MaxKeys = 1000;\n            return [4\n            /*yield*/\n            , this._list(params, opt, prefix)];\n\n          case 4:\n            listResult = _a.sent();\n            list.push.apply(list, __spread(listResult.contents));\n            if (listResult.nextToken) token = listResult.nextToken;\n            _a.label = 5;\n\n          case 5:\n            if (listResult.nextToken) return [3\n            /*break*/\n            , 3];\n            _a.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            maxKeys < 1000 || typeof maxKeys === 'string' ? params.MaxKeys = maxKeys : params.MaxKeys = 1000;\n            return [4\n            /*yield*/\n            , this._list(params, opt, prefix)];\n\n          case 8:\n            listResult = _a.sent();\n            list.push.apply(list, __spread(listResult.contents));\n            if (maxKeys > 1000) logger.warn(\"maxkeys can be from 0 - 1000 or 'ALL'. To list all files you can set maxKeys to 'ALL'.\");\n            _a.label = 9;\n\n          case 9:\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, list.length + \" items returned from list operation\");\n            logger.debug('list', list);\n            return [2\n            /*return*/\n            , list];\n\n          case 10:\n            error_5 = _a.sent();\n            logger.warn('list error', error_5);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \" + error_5.message);\n            throw error_5;\n\n          case 11:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, cred, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2\n            /*return*/\n            , false];\n            cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            this._config.credentials = cred;\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_6 = _a.sent();\n            logger.warn('ensure credentials error', error_6);\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._isWithCredentials = function (config) {\n    return typeof config === 'object' && config.hasOwnProperty('credentials');\n  };\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * Creates an S3 client with new V3 aws sdk\n   */\n\n\n  AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n    var s3client = createS3Client(config, emitter);\n    s3client.middlewareStack.add(autoAdjustClockskewMiddleware(s3client.config), autoAdjustClockskewMiddlewareOptions);\n    return s3client;\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\n\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\n\nexport default AWSS3Provider;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","Credentials","Parser","StorageHelper","Hub","GetObjectCommand","DeleteObjectCommand","ListObjectsV2Command","CopyObjectCommand","formatUrl","createRequest","S3RequestPresigner","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","StorageErrorStrings","dispatchStorageEvent","createPrefixMiddleware","prefixMiddlewareOptions","getPrefix","autoAdjustClockskewMiddleware","autoAdjustClockskewMiddlewareOptions","createS3Client","AWSS3ProviderManagedUpload","AWSS3UploadTask","TaskEvents","UPLOADS_STORAGE_KEY","events","logger","DEFAULT_STORAGE_LEVEL","DEFAULT_PRESIGN_EXPIRATION","config","_config","_storage","getStorage","listen","payload","event","_this","removeItem","debug","AWSS3Provider","CATEGORY","PROVIDER_NAME","amplifyConfig","parseMobilehubConfig","Object","assign","Storage","bucket","addTaskInput","emitter","key","file","params","completeCallback","errorCallback","_a","track","Blob","Error","INVALID_BLOB","on","UPLOAD_PROGRESS","progressCallback","warn","UPLOAD_COMPLETE","ERROR","err","prefixPromise","get","then","credentials","cred","shear","task","s3Client","level","storage","method","result","resume","src","dest","_ensureCredentials","credentialsOK","_c","_isWithCredentials","NO_CREDENTIALS","opt","acl","cacheControl","expires","serverSideEncryption","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","srcLevel","srcIdentityId","srcKey","_b","destLevel","destKey","NO_SRC_KEY","NO_DEST_KEY","srcPrefix","_prefix","__assign","identityId","destPrefix","finalSrcKey","finalDestKey","Bucket","CopySource","Key","MetadataDirective","CacheControl","Expires","ServerSideEncryption","ACL","s3","_createNewS3Client","send","error_1","download","contentDisposition","contentEncoding","contentLanguage","contentType","prefix","final_key","EventEmitter","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","getObjectCommand","progress","response","removeAllListeners","fileSize","Number","Body","error_2","message","signer","request","presign","expiresIn","url","error_3","object","resumable","metadata","tagging","type","ContentType","ContentDisposition","ContentEncoding","Metadata","Tagging","uploader","middlewareStack","add","accessLevel","startResumableUpload","upload","error","deleteObjectCommand","error_4","contents","nextToken","listObjectsV2Command","Contents","map","item","substr","length","eTag","ETag","lastModified","LastModified","size","Size","NextContinuationToken","path","maxKeys","final_path","list","token","listResult","Prefix","MaxKeys","ContinuationToken","_list","push","apply","__spread","error_5","error_6","hasOwnProperty","customPrefix","privatePath","private","undefined","protectedPath","protected","publicPath","public","s3client"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-amplify/storage/src/providers/AWSS3Provider.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport {\n\tConsoleLogger as Logger,\n\tCredentials,\n\tParser,\n\tICredentials,\n\tStorageHelper,\n\tHub,\n} from '@aws-amplify/core';\nimport {\n\tS3Client,\n\tGetObjectCommand,\n\tDeleteObjectCommand,\n\tListObjectsV2Command,\n\tGetObjectCommandOutput,\n\tDeleteObjectCommandInput,\n\tCopyObjectCommandInput,\n\tCopyObjectCommand,\n\tPutObjectCommandInput,\n\tGetObjectCommandInput,\n\tListObjectsV2Request,\n} from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport {\n\tSEND_DOWNLOAD_PROGRESS_EVENT,\n\tSEND_UPLOAD_PROGRESS_EVENT,\n} from './axios-http-handler';\nimport {\n\tStorageOptions,\n\tStorageProvider,\n\tS3ProviderGetConfig,\n\tS3ProviderGetOuput,\n\tS3ProviderPutConfig,\n\tS3ProviderRemoveConfig,\n\tS3ProviderListOutput,\n\tS3ProviderListConfig,\n\tS3ProviderCopyConfig,\n\tS3ProviderCopyOutput,\n\tS3CopySource,\n\tS3CopyDestination,\n\tStorageAccessLevel,\n\tCustomPrefix,\n\tS3ProviderRemoveOutput,\n\tS3ProviderPutOutput,\n\tResumableUploadConfig,\n\tUploadTask,\n\tS3ClientOptions,\n} from '../types';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport {\n\tcreatePrefixMiddleware,\n\tprefixMiddlewareOptions,\n\tgetPrefix,\n\tautoAdjustClockskewMiddleware,\n\tautoAdjustClockskewMiddlewareOptions,\n\tcreateS3Client,\n} from '../common/S3ClientUtils';\nimport { S3ProviderListOutputWithToken } from '.././types/AWSS3Provider';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nimport { CancelTokenSource } from 'axios';\n\nconst logger = new Logger('AWSS3Provider');\n\nconst DEFAULT_STORAGE_LEVEL = 'public';\nconst DEFAULT_PRESIGN_EXPIRATION = 900;\n\ninterface AddTaskInput {\n\taccessLevel: StorageAccessLevel;\n\tfile: Blob;\n\tbucket: string;\n\temitter: events.EventEmitter;\n\tkey: string;\n\ts3Client: S3Client;\n\tparams?: PutObjectCommandInput;\n}\n\n/**\n * Provide storage methods to use AWS S3\n */\nexport class AWSS3Provider implements StorageProvider {\n\tstatic readonly CATEGORY = 'Storage';\n\tstatic readonly PROVIDER_NAME = 'AWSS3';\n\tprivate _config: StorageOptions;\n\tprivate _storage: Storage;\n\n\t/**\n\t * Initialize Storage with AWS configurations\n\t * @param {Object} config - Configuration object for storage\n\t */\n\tconstructor(config?: StorageOptions) {\n\t\tthis._config = config ? config : {};\n\t\tthis._storage = new StorageHelper().getStorage();\n\t\tHub.listen('auth', data => {\n\t\t\tconst { payload } = data;\n\t\t\tif (payload.event === 'signOut' || payload.event === 'signIn') {\n\t\t\t\tthis._storage.removeItem(UPLOADS_STORAGE_KEY);\n\t\t\t}\n\t\t});\n\t\tlogger.debug('Storage Options', this._config);\n\t}\n\n\t/**\n\t * get the category of the plugin\n\t */\n\tpublic getCategory(): string {\n\t\treturn AWSS3Provider.CATEGORY;\n\t}\n\n\t/**\n\t * get provider name of the plugin\n\t */\n\tgetProviderName(): 'AWSS3' {\n\t\treturn AWSS3Provider.PROVIDER_NAME;\n\t}\n\n\t/**\n\t * Configure Storage part with aws configuration\n\t * @param {Object} config - Configuration of the Storage\n\t * @return {Object} - Current configuration\n\t */\n\tpublic configure(config?): object {\n\t\tlogger.debug('configure Storage', config);\n\t\tif (!config) return this._config;\n\t\tconst amplifyConfig = Parser.parseMobilehubConfig(config);\n\t\tthis._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\t\tif (!this._config.bucket) {\n\t\t\tlogger.debug('Do not have bucket yet');\n\t\t}\n\t\treturn this._config;\n\t}\n\n\tprivate startResumableUpload(\n\t\taddTaskInput: AddTaskInput,\n\t\tconfig: S3ProviderPutConfig & ResumableUploadConfig\n\t): UploadTask {\n\t\tconst { s3Client, emitter, key, file, params } = addTaskInput;\n\t\tconst {\n\t\t\tprogressCallback,\n\t\t\tcompleteCallback,\n\t\t\terrorCallback,\n\t\t\ttrack = false,\n\t\t} = config;\n\t\tif (!(file instanceof Blob)) {\n\t\t\tthrow new Error(StorageErrorStrings.INVALID_BLOB);\n\t\t}\n\n\t\temitter.on(TaskEvents.UPLOAD_PROGRESS, event => {\n\t\t\tif (progressCallback) {\n\t\t\t\tif (typeof progressCallback === 'function') {\n\t\t\t\t\tprogressCallback(event);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t'progressCallback should be a function, not a ' +\n\t\t\t\t\t\t\ttypeof progressCallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\temitter.on(TaskEvents.UPLOAD_COMPLETE, event => {\n\t\t\tif (completeCallback) {\n\t\t\t\tif (typeof completeCallback === 'function') {\n\t\t\t\t\tcompleteCallback(event);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t'completeCallback should be a function, not a ' +\n\t\t\t\t\t\t\ttypeof completeCallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\temitter.on(TaskEvents.ERROR, err => {\n\t\t\tif (errorCallback) {\n\t\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t'errorCallback should be a function, not a ' + typeof errorCallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n\t\t// when its doing a final check with _listSingleFile function\n\t\tconst prefixPromise: Promise<string> = Credentials.get().then(\n\t\t\t(credentials: any) => {\n\t\t\t\tconst cred = Credentials.shear(credentials);\n\t\t\t\treturn getPrefix({\n\t\t\t\t\t...config,\n\t\t\t\t\tcredentials: cred,\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\n\t\tconst task = new AWSS3UploadTask({\n\t\t\ts3Client,\n\t\t\tfile,\n\t\t\temitter,\n\t\t\tlevel: config.level,\n\t\t\tstorage: this._storage,\n\t\t\tparams,\n\t\t\tprefixPromise,\n\t\t});\n\n\t\tdispatchStorageEvent(\n\t\t\ttrack,\n\t\t\t'upload',\n\t\t\t{ method: 'put', result: 'success' },\n\t\t\tnull,\n\t\t\t`Upload Task created successfully for ${key}`\n\t\t);\n\n\t\t// automatically start the upload task\n\t\ttask.resume();\n\n\t\treturn task;\n\t}\n\n\t/**\n\t * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n\t * different level or identityId (if source object's level is 'protected').\n\t *\n\t * @async\n\t * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n\t * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n\t * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n\t * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n\t */\n\tpublic async copy(\n\t\tsrc: S3CopySource,\n\t\tdest: S3CopyDestination,\n\t\tconfig?: S3ProviderCopyConfig\n\t): Promise<S3ProviderCopyOutput> {\n\t\tconst credentialsOK = await this._ensureCredentials();\n\t\tif (!credentialsOK || !this._isWithCredentials(this._config)) {\n\t\t\tthrow new Error(StorageErrorStrings.NO_CREDENTIALS);\n\t\t}\n\t\tconst opt = Object.assign({}, this._config, config);\n\t\tconst {\n\t\t\tacl,\n\t\t\tbucket,\n\t\t\tcacheControl,\n\t\t\texpires,\n\t\t\ttrack,\n\t\t\tserverSideEncryption,\n\t\t\tSSECustomerAlgorithm,\n\t\t\tSSECustomerKey,\n\t\t\tSSECustomerKeyMD5,\n\t\t\tSSEKMSKeyId,\n\t\t} = opt;\n\t\tconst {\n\t\t\tlevel: srcLevel = DEFAULT_STORAGE_LEVEL,\n\t\t\tidentityId: srcIdentityId,\n\t\t\tkey: srcKey,\n\t\t} = src;\n\t\tconst { level: destLevel = DEFAULT_STORAGE_LEVEL, key: destKey } = dest;\n\t\tif (!srcKey || typeof srcKey !== 'string') {\n\t\t\tthrow new Error(StorageErrorStrings.NO_SRC_KEY);\n\t\t}\n\t\tif (!destKey || typeof destKey !== 'string') {\n\t\t\tthrow new Error(StorageErrorStrings.NO_DEST_KEY);\n\t\t}\n\t\tif (srcLevel !== 'protected' && srcIdentityId) {\n\t\t\tlogger.warn(\n\t\t\t\t`You may copy files from another user if the source level is \"protected\", currently it's ${srcLevel}`\n\t\t\t);\n\t\t}\n\t\tconst srcPrefix = this._prefix({\n\t\t\t...opt,\n\t\t\tlevel: srcLevel,\n\t\t\t...(srcIdentityId && { identityId: srcIdentityId }),\n\t\t});\n\t\tconst destPrefix = this._prefix({ ...opt, level: destLevel });\n\t\tconst finalSrcKey = `${bucket}/${srcPrefix}${srcKey}`;\n\t\tconst finalDestKey = `${destPrefix}${destKey}`;\n\t\tlogger.debug(`copying ${finalSrcKey} to ${finalDestKey}`);\n\n\t\tconst params: CopyObjectCommandInput = {\n\t\t\tBucket: bucket,\n\t\t\tCopySource: finalSrcKey,\n\t\t\tKey: finalDestKey,\n\t\t\t// Copies over metadata like contentType as well\n\t\t\tMetadataDirective: 'COPY',\n\t\t};\n\n\t\tif (cacheControl) params.CacheControl = cacheControl;\n\t\tif (expires) params.Expires = expires;\n\t\tif (serverSideEncryption) {\n\t\t\tparams.ServerSideEncryption = serverSideEncryption;\n\t\t}\n\t\tif (SSECustomerAlgorithm) {\n\t\t\tparams.SSECustomerAlgorithm = SSECustomerAlgorithm;\n\t\t}\n\t\tif (SSECustomerKey) {\n\t\t\tparams.SSECustomerKey = SSECustomerKey;\n\t\t}\n\t\tif (SSECustomerKeyMD5) {\n\t\t\tparams.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n\t\t}\n\t\tif (SSEKMSKeyId) {\n\t\t\tparams.SSEKMSKeyId = SSEKMSKeyId;\n\t\t}\n\t\tif (acl) params.ACL = acl;\n\n\t\tconst s3 = this._createNewS3Client(opt);\n\t\ttry {\n\t\t\tawait s3.send(new CopyObjectCommand(params));\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'copy',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'copy',\n\t\t\t\t\tresult: 'success',\n\t\t\t\t},\n\t\t\t\tnull,\n\t\t\t\t`Copy success from ${srcKey} to ${destKey}`\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tkey: destKey,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'copy',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'copy',\n\t\t\t\t\tresult: 'failed',\n\t\t\t\t},\n\t\t\t\tnull,\n\t\t\t\t`Copy failed from ${srcKey} to ${destKey}`\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Get a presigned URL of the file or the object data when download:true\n\t *\n\t * @param {string} key - key of the object\n\t * @param {S3ProviderGetConfig} [config] - Optional configuration for the underlying S3 command\n\t * @return {Promise<string | GetObjectCommandOutput>} - A promise resolves to Amazon S3 presigned URL or the\n\t * GetObjectCommandOutput if download is set to true on success\n\t */\n\tpublic async get<T extends S3ProviderGetConfig & StorageOptions>(\n\t\tkey: string,\n\t\tconfig?: T\n\t): Promise<S3ProviderGetOuput<T>>;\n\tpublic async get(\n\t\tkey: string,\n\t\tconfig?: S3ProviderGetConfig\n\t): Promise<string | GetObjectCommandOutput> {\n\t\tconst credentialsOK = await this._ensureCredentials();\n\t\tif (!credentialsOK || !this._isWithCredentials(this._config)) {\n\t\t\tthrow new Error(StorageErrorStrings.NO_CREDENTIALS);\n\t\t}\n\t\tconst opt = Object.assign({}, this._config, config);\n\t\tconst {\n\t\t\tbucket,\n\t\t\tdownload,\n\t\t\tcacheControl,\n\t\t\tcontentDisposition,\n\t\t\tcontentEncoding,\n\t\t\tcontentLanguage,\n\t\t\tcontentType,\n\t\t\texpires,\n\t\t\ttrack,\n\t\t\tSSECustomerAlgorithm,\n\t\t\tSSECustomerKey,\n\t\t\tSSECustomerKeyMD5,\n\t\t\tprogressCallback,\n\t\t} = opt;\n\t\tconst prefix = this._prefix(opt);\n\t\tconst final_key = prefix + key;\n\t\tconst emitter = new events.EventEmitter();\n\t\tconst s3 = this._createNewS3Client(opt, emitter);\n\t\tlogger.debug('get ' + key + ' from ' + final_key);\n\n\t\tconst params: GetObjectCommandInput = {\n\t\t\tBucket: bucket,\n\t\t\tKey: final_key,\n\t\t};\n\n\t\t// See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\t\tif (cacheControl) params.ResponseCacheControl = cacheControl;\n\t\tif (contentDisposition)\n\t\t\tparams.ResponseContentDisposition = contentDisposition;\n\t\tif (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n\t\tif (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n\t\tif (contentType) params.ResponseContentType = contentType;\n\t\tif (SSECustomerAlgorithm) {\n\t\t\tparams.SSECustomerAlgorithm = SSECustomerAlgorithm;\n\t\t}\n\t\tif (SSECustomerKey) {\n\t\t\tparams.SSECustomerKey = SSECustomerKey;\n\t\t}\n\t\tif (SSECustomerKeyMD5) {\n\t\t\tparams.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n\t\t}\n\n\t\tif (download === true) {\n\t\t\tconst getObjectCommand = new GetObjectCommand(params);\n\t\t\ttry {\n\t\t\t\tif (progressCallback) {\n\t\t\t\t\tif (typeof progressCallback === 'function') {\n\t\t\t\t\t\temitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, progress => {\n\t\t\t\t\t\t\tprogressCallback(progress);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t'progressCallback should be a function, not a ' +\n\t\t\t\t\t\t\t\ttypeof progressCallback\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst response = await s3.send(getObjectCommand);\n\t\t\t\temitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n\t\t\t\tdispatchStorageEvent(\n\t\t\t\t\ttrack,\n\t\t\t\t\t'download',\n\t\t\t\t\t{ method: 'get', result: 'success' },\n\t\t\t\t\t{\n\t\t\t\t\t\tfileSize: Number(response.Body['size'] || response.Body['length']),\n\t\t\t\t\t},\n\t\t\t\t\t`Download success for ${key}`\n\t\t\t\t);\n\t\t\t\treturn response;\n\t\t\t} catch (error) {\n\t\t\t\tdispatchStorageEvent(\n\t\t\t\t\ttrack,\n\t\t\t\t\t'download',\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'get',\n\t\t\t\t\t\tresult: 'failed',\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\t`Download failed with ${error.message}`\n\t\t\t\t);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst signer = new S3RequestPresigner({ ...s3.config });\n\t\t\tconst request = await createRequest(s3, new GetObjectCommand(params));\n\t\t\t// Default is 15 mins as defined in V2 AWS SDK\n\t\t\tconst url = formatUrl(\n\t\t\t\tawait signer.presign(request, {\n\t\t\t\t\texpiresIn: expires || DEFAULT_PRESIGN_EXPIRATION,\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'getSignedUrl',\n\t\t\t\t{ method: 'get', result: 'success' },\n\t\t\t\tnull,\n\t\t\t\t`Signed URL: ${url}`\n\t\t\t);\n\t\t\treturn url;\n\t\t} catch (error) {\n\t\t\tlogger.warn('get signed url error', error);\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'getSignedUrl',\n\t\t\t\t{ method: 'get', result: 'failed' },\n\t\t\t\tnull,\n\t\t\t\t`Could not get a signed URL for ${key}`\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Put a file in S3 bucket specified to configure method\n\t * @param key - key of the object\n\t * @param object - File to be put in Amazon S3 bucket\n\t * @param [config] - Optional configuration for the underlying S3 command\n\t * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n\t * success.\n\t */\n\tpublic put<T extends S3ProviderPutConfig>(\n\t\tkey: string,\n\t\tobject: PutObjectCommandInput['Body'],\n\t\tconfig?: T\n\t): S3ProviderPutOutput<T> {\n\t\tconst opt = Object.assign({}, this._config, config);\n\t\tconst { bucket, track, progressCallback, level, resumable } = opt;\n\t\tconst {\n\t\t\tcontentType,\n\t\t\tcontentDisposition,\n\t\t\tcontentEncoding,\n\t\t\tcacheControl,\n\t\t\texpires,\n\t\t\tmetadata,\n\t\t\ttagging,\n\t\t\tacl,\n\t\t} = opt;\n\t\tconst {\n\t\t\tserverSideEncryption,\n\t\t\tSSECustomerAlgorithm,\n\t\t\tSSECustomerKey,\n\t\t\tSSECustomerKeyMD5,\n\t\t\tSSEKMSKeyId,\n\t\t} = opt;\n\t\tconst type = contentType ? contentType : 'binary/octet-stream';\n\n\t\tconst params: PutObjectCommandInput = {\n\t\t\tBucket: bucket,\n\t\t\tKey: key,\n\t\t\tBody: object,\n\t\t\tContentType: type,\n\t\t};\n\t\tif (cacheControl) {\n\t\t\tparams.CacheControl = cacheControl;\n\t\t}\n\t\tif (contentDisposition) {\n\t\t\tparams.ContentDisposition = contentDisposition;\n\t\t}\n\t\tif (contentEncoding) {\n\t\t\tparams.ContentEncoding = contentEncoding;\n\t\t}\n\t\tif (expires) {\n\t\t\tparams.Expires = expires;\n\t\t}\n\t\tif (metadata) {\n\t\t\tparams.Metadata = metadata;\n\t\t}\n\t\tif (tagging) {\n\t\t\tparams.Tagging = tagging;\n\t\t}\n\t\tif (serverSideEncryption) {\n\t\t\tparams.ServerSideEncryption = serverSideEncryption;\n\t\t}\n\t\tif (SSECustomerAlgorithm) {\n\t\t\tparams.SSECustomerAlgorithm = SSECustomerAlgorithm;\n\t\t}\n\t\tif (SSECustomerKey) {\n\t\t\tparams.SSECustomerKey = SSECustomerKey;\n\t\t}\n\t\tif (SSECustomerKeyMD5) {\n\t\t\tparams.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n\t\t}\n\t\tif (SSEKMSKeyId) {\n\t\t\tparams.SSEKMSKeyId = SSEKMSKeyId;\n\t\t}\n\n\t\tconst emitter = new events.EventEmitter();\n\t\tconst uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n\n\t\tif (acl) {\n\t\t\tparams.ACL = acl;\n\t\t}\n\n\t\tif (resumable === true) {\n\t\t\tconst s3Client = this._createNewS3Client(opt);\n\t\t\t// we are using aws sdk middleware to inject the prefix to key, this way we don't have to call\n\t\t\t// this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask\n\t\t\ts3Client.middlewareStack.add(\n\t\t\t\tcreatePrefixMiddleware(opt, key),\n\t\t\t\tprefixMiddlewareOptions\n\t\t\t);\n\t\t\tconst addTaskInput: AddTaskInput = {\n\t\t\t\tbucket,\n\t\t\t\tkey,\n\t\t\t\ts3Client,\n\t\t\t\tfile: object as Blob,\n\t\t\t\temitter,\n\t\t\t\taccessLevel: level,\n\t\t\t\tparams,\n\t\t\t};\n\t\t\t// explicitly asserting the type here as Typescript could not infer that resumable is of type true\n\t\t\treturn this.startResumableUpload(\n\t\t\t\taddTaskInput,\n\t\t\t\tconfig as typeof config & { resumable: true }\n\t\t\t) as S3ProviderPutOutput<T>;\n\t\t}\n\n\t\ttry {\n\t\t\tif (progressCallback) {\n\t\t\t\tif (typeof progressCallback === 'function') {\n\t\t\t\t\temitter.on(SEND_UPLOAD_PROGRESS_EVENT, progress => {\n\t\t\t\t\t\tprogressCallback(progress);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t'progressCallback should be a function, not a ' +\n\t\t\t\t\t\t\ttypeof progressCallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn uploader.upload().then(response => {\n\t\t\t\tlogger.debug('upload result', response);\n\t\t\t\tdispatchStorageEvent(\n\t\t\t\t\ttrack,\n\t\t\t\t\t'upload',\n\t\t\t\t\t{ method: 'put', result: 'success' },\n\t\t\t\t\tnull,\n\t\t\t\t\t`Upload success for ${key}`\n\t\t\t\t);\n\t\t\t\treturn { key };\n\t\t\t}) as S3ProviderPutOutput<T>;\n\t\t} catch (error) {\n\t\t\tlogger.warn('error uploading', error);\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'upload',\n\t\t\t\t{ method: 'put', result: 'failed' },\n\t\t\t\tnull,\n\t\t\t\t`Error uploading ${key}`\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Remove the object for specified key\n\t * @param {string} key - key of the object\n\t * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n\t * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n\t */\n\tpublic async remove(\n\t\tkey: string,\n\t\tconfig?: S3ProviderRemoveConfig\n\t): Promise<S3ProviderRemoveOutput> {\n\t\tconst credentialsOK = await this._ensureCredentials();\n\t\tif (!credentialsOK || !this._isWithCredentials(this._config)) {\n\t\t\tthrow new Error(StorageErrorStrings.NO_CREDENTIALS);\n\t\t}\n\t\tconst opt = Object.assign({}, this._config, config);\n\t\tconst { bucket, track } = opt;\n\n\t\tconst prefix = this._prefix(opt);\n\t\tconst final_key = prefix + key;\n\t\tconst s3 = this._createNewS3Client(opt);\n\t\tlogger.debug('remove ' + key + ' from ' + final_key);\n\n\t\tconst params: DeleteObjectCommandInput = {\n\t\t\tBucket: bucket,\n\t\t\tKey: final_key,\n\t\t};\n\n\t\tconst deleteObjectCommand = new DeleteObjectCommand(params);\n\n\t\ttry {\n\t\t\tconst response = await s3.send(deleteObjectCommand);\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'delete',\n\t\t\t\t{ method: 'remove', result: 'success' },\n\t\t\t\tnull,\n\t\t\t\t`Deleted ${key} successfully`\n\t\t\t);\n\t\t\treturn response;\n\t\t} catch (error) {\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'delete',\n\t\t\t\t{ method: 'remove', result: 'failed' },\n\t\t\t\tnull,\n\t\t\t\t`Deletion of ${key} failed with ${error}`\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\t}\n\tprivate async _list(\n\t\tparams: ListObjectsV2Request,\n\t\topt: S3ClientOptions,\n\t\tprefix: string\n\t): Promise<S3ProviderListOutputWithToken> {\n\t\tconst result: S3ProviderListOutputWithToken = {\n\t\t\tcontents: [],\n\t\t\tnextToken: '',\n\t\t};\n\t\tconst s3 = this._createNewS3Client(opt);\n\t\tconst listObjectsV2Command = new ListObjectsV2Command({ ...params });\n\t\tconst response = await s3.send(listObjectsV2Command);\n\t\tif (response && response.Contents) {\n\t\t\tresult.contents = response.Contents.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: item.Key.substr(prefix.length),\n\t\t\t\t\teTag: item.ETag,\n\t\t\t\t\tlastModified: item.LastModified,\n\t\t\t\t\tsize: item.Size,\n\t\t\t\t};\n\t\t\t});\n\t\t\tresult.nextToken = response.NextContinuationToken;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * List bucket objects relative to the level and prefix specified\n\t * @param {string} path - the path that contains objects\n\t * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n\t * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for\n\t * all objects in path\n\t */\n\tpublic async list(\n\t\tpath: string,\n\t\tconfig?: S3ProviderListConfig\n\t): Promise<S3ProviderListOutput> {\n\t\tconst credentialsOK = await this._ensureCredentials();\n\t\tif (!credentialsOK || !this._isWithCredentials(this._config)) {\n\t\t\tthrow new Error(StorageErrorStrings.NO_CREDENTIALS);\n\t\t}\n\t\tconst opt: S3ClientOptions = Object.assign({}, this._config, config);\n\t\tconst { bucket, track, maxKeys } = opt;\n\t\tconst prefix = this._prefix(opt);\n\t\tconst final_path = prefix + path;\n\t\tlogger.debug('list ' + path + ' from ' + final_path);\n\t\ttry {\n\t\t\tconst list: S3ProviderListOutput = [];\n\t\t\tlet token: string;\n\t\t\tlet listResult: S3ProviderListOutputWithToken;\n\t\t\tconst params: ListObjectsV2Request = {\n\t\t\t\tBucket: bucket,\n\t\t\t\tPrefix: final_path,\n\t\t\t\tMaxKeys: 1000,\n\t\t\t};\n\t\t\tif (maxKeys === 'ALL') {\n\t\t\t\tdo {\n\t\t\t\t\tparams.ContinuationToken = token;\n\t\t\t\t\tparams.MaxKeys = 1000;\n\t\t\t\t\tlistResult = await this._list(params, opt, prefix);\n\t\t\t\t\tlist.push(...listResult.contents);\n\t\t\t\t\tif (listResult.nextToken) token = listResult.nextToken;\n\t\t\t\t} while (listResult.nextToken);\n\t\t\t} else {\n\t\t\t\tmaxKeys < 1000 || typeof maxKeys === 'string'\n\t\t\t\t\t? (params.MaxKeys = maxKeys)\n\t\t\t\t\t: (params.MaxKeys = 1000);\n\t\t\t\tlistResult = await this._list(params, opt, prefix);\n\t\t\t\tlist.push(...listResult.contents);\n\t\t\t\tif (maxKeys > 1000)\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\"maxkeys can be from 0 - 1000 or 'ALL'. To list all files you can set maxKeys to 'ALL'.\"\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'list',\n\t\t\t\t{ method: 'list', result: 'success' },\n\t\t\t\tnull,\n\t\t\t\t`${list.length} items returned from list operation`\n\t\t\t);\n\t\t\tlogger.debug('list', list);\n\t\t\treturn list;\n\t\t} catch (error) {\n\t\t\tlogger.warn('list error', error);\n\t\t\tdispatchStorageEvent(\n\t\t\t\ttrack,\n\t\t\t\t'list',\n\t\t\t\t{ method: 'list', result: 'failed' },\n\t\t\t\tnull,\n\t\t\t\t`Listing items failed: ${error.message}`\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async _ensureCredentials(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst credentials = await Credentials.get();\n\t\t\tif (!credentials) return false;\n\t\t\tconst cred = Credentials.shear(credentials);\n\t\t\tlogger.debug('set credentials for storage', cred);\n\t\t\tthis._config.credentials = cred;\n\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tlogger.warn('ensure credentials error', error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _isWithCredentials(\n\t\tconfig: StorageOptions\n\t): config is StorageOptions & { credentials: ICredentials } {\n\t\treturn typeof config === 'object' && config.hasOwnProperty('credentials');\n\t}\n\n\tprivate _prefix(config: {\n\t\tcredentials: ICredentials;\n\t\tlevel?: StorageAccessLevel;\n\t\tcustomPrefix?: CustomPrefix;\n\t\tidentityId?: string;\n\t}): string {\n\t\tconst { credentials, level } = config;\n\n\t\tconst customPrefix = config.customPrefix || {};\n\t\tconst identityId = config.identityId || credentials.identityId;\n\t\tconst privatePath =\n\t\t\t(customPrefix.private !== undefined ? customPrefix.private : 'private/') +\n\t\t\tidentityId +\n\t\t\t'/';\n\t\tconst protectedPath =\n\t\t\t(customPrefix.protected !== undefined\n\t\t\t\t? customPrefix.protected\n\t\t\t\t: 'protected/') +\n\t\t\tidentityId +\n\t\t\t'/';\n\t\tconst publicPath =\n\t\t\tcustomPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n\t\tswitch (level) {\n\t\t\tcase 'private':\n\t\t\t\treturn privatePath;\n\t\t\tcase 'protected':\n\t\t\t\treturn protectedPath;\n\t\t\tdefault:\n\t\t\t\treturn publicPath;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an S3 client with new V3 aws sdk\n\t */\n\tprivate _createNewS3Client(\n\t\tconfig: {\n\t\t\tregion?: string;\n\t\t\tcancelTokenSource?: CancelTokenSource;\n\t\t\tdangerouslyConnectToHttpEndpointForTesting?: boolean;\n\t\t\tuseAccelerateEndpoint?: boolean;\n\t\t},\n\t\temitter?: events.EventEmitter\n\t): S3Client {\n\t\tconst s3client = createS3Client(config, emitter);\n\t\ts3client.middlewareStack.add(\n\t\t\tautoAdjustClockskewMiddleware(s3client.config),\n\t\t\tautoAdjustClockskewMiddlewareOptions\n\t\t);\n\t\treturn s3client;\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default AWSS3Provider;\n"]},"metadata":{},"sourceType":"module"}