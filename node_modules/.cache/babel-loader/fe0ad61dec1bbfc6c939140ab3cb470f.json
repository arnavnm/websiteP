{"ast":null,"code":"import { useLayoutEffect as t } from \"@radix-ui/react-use-layout-effect\";\nimport * as e from \"react\";\n\nconst r = e[\"useId\".toString()] || (() => {});\n\nlet n = 0;\nexport function useId(o) {\n  const [u, i] = e.useState(r());\n  return t(() => {\n    o || i(t => null != t ? t : String(n++));\n  }, [o]), o || (u ? `radix-${u}` : \"\");\n}\nexport function IdProvider(_ref) {\n  let {\n    children: t\n  } = _ref;\n  return e.useEffect(() => {\n    0;\n  }, []), /*#__PURE__*/e.createElement(e.Fragment, null, t);\n}","map":{"version":3,"mappings":"AAAA,SAAOA,eAAe,IAAIC,CAA1B,QAAgC,mCAAhC;AAAoE,OAAM,KAAIC,CAAV,MAAgB,OAAhB;;AAAwB,MAAMC,CAAC,GAACD,CAAC,CAAC,QAAQE,QAAR,EAAD,CAAD,KAAwB,MAAI,CAAE,CAA9B,CAAR;;AAAwC,IAAIC,CAAC,GAAC,CAAN;AAAQ,OAAO,SAASC,KAAT,CAAeC,CAAf,EAAiB;EAAC,MAAK,CAACC,CAAD,EAAGC,CAAH,IAAMP,CAAC,CAACQ,QAAF,CAAWP,CAAC,EAAZ,CAAX;EAA2B,OAAOF,CAAC,CAAE,MAAI;IAACM,CAAC,IAAEE,CAAC,CAAER,CAAC,IAAE,QAAMA,CAAN,GAAQA,CAAR,GAAUU,MAAM,CAACN,CAAC,EAAF,CAArB,CAAJ;EAAiC,CAAxC,EAA0C,CAACE,CAAD,CAA1C,CAAD,EAAgDA,CAAC,KAAGC,CAAC,GAAE,SAAQA,CAAE,EAAZ,GAAc,EAAlB,CAAxD;AAA8E;AAAA,OAAO,SAASI,UAAT,OAAiC;EAAA,IAAb;IAACC,QAAQ,EAACZ;EAAV,CAAa;EAAC,OAAOC,CAAC,CAACY,SAAF,CAAa,MAAI;IAAC;EAAE,CAApB,EAAsB,EAAtB,GAA0B,aAAaZ,CAAC,CAACa,aAAF,CAAgBb,CAAC,CAACc,QAAlB,EAA2B,IAA3B,EAAgCf,CAAhC,CAA9C;AAAiF","names":["useReactId","React","toString","count","useId","deterministicId","id","setId","useState","useLayoutEffect","reactId","String","IdProvider","children","useEffect","_react"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\n// DEPRECATED\nfunction IdProvider({ children }: { children: React.ReactNode }) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(ID_PROVIDER_DEPRECATED);\n    }\n  }, []);\n  return <>{children}</>;\n}\n\nconst ID_PROVIDER_DEPRECATED = `Warning: The \\`IdProvider\\` has been deprecated. For details, see https://radix-ui.com/docs/primitives/utilities/id-provider`;\n\nexport { IdProvider, useId };\n"]},"metadata":{},"sourceType":"module"}