{"ast":null,"code":"import { __assign } from \"tslib\";\nexport var resolveEventStreamSerdeConfig = function (input) {\n  return __assign(__assign({}, input), {\n    eventStreamMarshaller: input.eventStreamSerdeProvider(input)\n  });\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,IAAIC,6BAA6B,GAAG,UAAUC,KAAV,EAAiB;EAAE,OAAQF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKE,KAAL,CAAT,EAAsB;IAAEC,qBAAqB,EAAED,KAAK,CAACE,wBAAN,CAA+BF,KAA/B;EAAzB,CAAtB,CAAhB;AAA2G,CAAlK","names":["resolveEventStreamSerdeConfig","input","eventStreamMarshaller","eventStreamSerdeProvider"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/eventstream-serde-config-resolver/src/EventStreamSerdeConfig.ts"],"sourcesContent":["import { EventStreamMarshaller, EventStreamSerdeProvider } from \"@aws-sdk/types\";\n\nexport interface EventStreamSerdeInputConfig {}\n\nexport interface EventStreamSerdeResolvedConfig {\n  eventStreamMarshaller: EventStreamMarshaller;\n}\n\ninterface PreviouslyResolved {\n  eventStreamSerdeProvider: EventStreamSerdeProvider;\n}\n\nexport const resolveEventStreamSerdeConfig = <T>(\n  input: T & PreviouslyResolved & EventStreamSerdeInputConfig\n): T & EventStreamSerdeResolvedConfig => ({\n  ...input,\n  eventStreamMarshaller: input.eventStreamSerdeProvider(input),\n});\n"]},"metadata":{},"sourceType":"module"}