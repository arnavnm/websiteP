{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMsWindow = void 0;\nvar msSubtleCryptoMethods = [\"decrypt\", \"digest\", \"encrypt\", \"exportKey\", \"generateKey\", \"importKey\", \"sign\", \"verify\"];\n\nfunction quacksLikeAnMsWindow(window) {\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\n\n\nfunction isMsWindow(window) {\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n    var _a = window.msCrypto,\n        getRandomValues = _a.getRandomValues,\n        subtle_1 = _a.subtle;\n    return msSubtleCryptoMethods.map(function (methodName) {\n      return subtle_1[methodName];\n    }).concat(getRandomValues).every(function (method) {\n      return typeof method === \"function\";\n    });\n  }\n\n  return false;\n}\n\nexports.isMsWindow = isMsWindow;","map":{"version":3,"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;AACA,IAAIC,qBAAqB,GAAG,CACxB,SADwB,EAExB,QAFwB,EAGxB,SAHwB,EAIxB,WAJwB,EAKxB,aALwB,EAMxB,WANwB,EAOxB,MAPwB,EAQxB,QARwB,CAA5B;;AAUA,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;EAClC,OAAO,0BAA0BA,MAA1B,IAAoC,cAAcA,MAAzD;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASH,UAAT,CAAoBG,MAApB,EAA4B;EACxB,IAAID,oBAAoB,CAACC,MAAD,CAApB,IAAgCA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,KAA2BC,SAA/D,EAA0E;IACtE,IAAIC,EAAE,GAAGJ,MAAM,CAACC,QAAhB;IAAA,IAA0BI,eAAe,GAAGD,EAAE,CAACC,eAA/C;IAAA,IAAgEC,QAAQ,GAAGF,EAAE,CAACF,MAA9E;IACA,OAAOJ,qBAAqB,CACvBS,GADE,CACE,UAAUC,UAAV,EAAsB;MAAE,OAAOF,QAAQ,CAACE,UAAD,CAAf;IAA8B,CADxD,EAEFC,MAFE,CAEKJ,eAFL,EAGFK,KAHE,CAGI,UAAUC,MAAV,EAAkB;MAAE,OAAO,OAAOA,MAAP,KAAkB,UAAzB;IAAsC,CAH9D,CAAP;EAIH;;EACD,OAAO,KAAP;AACH;;AACDhB,OAAO,CAACE,UAAR,GAAqBA,UAArB","names":["msSubtleCryptoMethods","quacksLikeAnMsWindow","window","isMsWindow","msCrypto","subtle","undefined","getRandomValues","subtle_1","map","methodName","concat","every","method","exports"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-location/node_modules/@aws-crypto/ie11-detection/src/MsWindow.ts"],"sourcesContent":["import { MsSubtleCrypto } from \"./MsSubtleCrypto\";\n\ntype SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst msSubtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\n/**\n * The value accessible as `window.msCrypto` in Internet Explorer 11.\n */\nexport interface MsCrypto {\n  getRandomValues: (toFill: Uint8Array) => void;\n  subtle: MsSubtleCrypto;\n}\n\n/**\n * The `window` object in Internet Explorer 11. This interface does not\n * exhaustively document the prefixed features of `window` in IE11.\n */\nexport interface MsWindow extends Window {\n  MSInputMethodContext: any;\n  msCrypto: MsCrypto;\n}\n\nfunction quacksLikeAnMsWindow(window: Window): window is MsWindow {\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\nexport function isMsWindow(window: Window): window is MsWindow {\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n    const { getRandomValues, subtle } = window.msCrypto;\n    return msSubtleCryptoMethods\n      .map<Function>(methodName => subtle[methodName])\n      .concat(getRandomValues)\n      .every(method => typeof method === \"function\");\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"script"}