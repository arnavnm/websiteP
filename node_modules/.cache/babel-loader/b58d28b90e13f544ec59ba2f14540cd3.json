{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/*\n * Copyright 2017-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { Amplify, ConsoleLogger as Logger, parseMobileHubConfig } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nimport { validateCoordinates } from './util';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\n\nvar GeoClass =\n/** @class */\nfunction () {\n  function GeoClass() {\n    this._config = {};\n    this._pluggables = [];\n    logger.debug('Geo Options', this._config);\n  }\n  /**\n   * get the name of the module category\n   * @returns {string} name of the module category\n   */\n\n\n  GeoClass.prototype.getModuleName = function () {\n    return GeoClass.MODULE;\n  };\n  /**\n   * add plugin into Geo category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  GeoClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Geo') {\n      this._pluggables.push(pluggable);\n\n      var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  GeoClass.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      throw new Error('No plugin found in Geo for the provider');\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  GeoClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Geo\n   * @param {Object} config - Configuration object for Geo\n   * @return {Object} - Current configuration\n   */\n\n\n  GeoClass.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Geo');\n    if (!config) return this._config;\n    var amplifyConfig = parseMobileHubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AmazonLocationServiceProvider());\n    }\n\n    return this._config;\n  };\n  /**\n   * Get the map resources that are currently available through the provider\n   * @param {string} provider\n   * @returns - Array of available map resources\n   */\n\n\n  GeoClass.prototype.getAvailableMaps = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n\n    var prov = this.getPluggable(provider);\n    return prov.getAvailableMaps();\n  };\n  /**\n   * Get the map resource set as default in amplify config\n   * @param {string} provider\n   * @returns - Map resource set as the default in amplify config\n   */\n\n\n  GeoClass.prototype.getDefaultMap = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n\n    var prov = this.getPluggable(provider);\n    return prov.getDefaultMap();\n  };\n  /**\n   * Search by text input with optional parameters\n   * @param  {string} text - The text string that is to be searched for\n   * @param  {SearchByTextOptions} options? - Optional parameters to the search\n   * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n   */\n\n\n  GeoClass.prototype.searchByText = function (text, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.searchByText(text, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_1 = _b.sent();\n            logger.debug(error_1);\n            throw error_1;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Reverse geocoding search via a coordinate point on the map\n   * @param coordinates - Coordinates array for the search input\n   * @param options - Options parameters for the search\n   * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n   */\n\n\n  GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, _b, lng, lat, error_2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b = __read(coordinates, 2), lng = _b[0], lat = _b[1];\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n\n            validateCoordinates(lng, lat);\n            return [4\n            /*yield*/\n            , prov.searchByCoordinates(coordinates, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _c.sent()];\n\n          case 3:\n            error_2 = _c.sent();\n            logger.debug(error_2);\n            throw error_2;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Create geofences\n   * @param geofences - Single or array of geofence objects to create\n   * @param options? - Optional parameters for creating geofences\n   * @returns {Promise<SaveGeofencesResults>} - Promise that resolves to an object with:\n   *   successes: list of geofences successfully created\n   *   errors: list of geofences that failed to create\n   */\n\n\n  GeoClass.prototype.saveGeofences = function (geofences, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, geofenceInputArray, error_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n\n            if (!Array.isArray(geofences)) {\n              geofenceInputArray = [geofences];\n            } else {\n              geofenceInputArray = geofences;\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.saveGeofences(geofenceInputArray, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_3 = _b.sent();\n            logger.debug(error_3);\n            throw error_3;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get a single geofence by geofenceId\n   * @param geofenceId: GeofenceId - The string id of the geofence to get\n   * @param options?: GeofenceOptions - Optional parameters for getting a geofence\n   * @returns Promise<Geofence> - Promise that resolves to a geofence object\n   */\n\n\n  GeoClass.prototype.getGeofence = function (geofenceId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_4;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.getGeofence(geofenceId, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_4 = _b.sent();\n            logger.debug(error_4);\n            throw error_4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * List geofences\n   * @param  options?: ListGeofenceOptions\n   * @returns {Promise<ListGeofencesResults>} - Promise that resolves to an object with:\n   *   entries: list of geofences - 100 geofences are listed per page\n   *   nextToken: token for next page of geofences\n   */\n\n\n  GeoClass.prototype.listGeofences = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_5;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.listGeofences(options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_5 = _b.sent();\n            logger.debug(error_5);\n            throw error_5;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Delete geofences\n   * @param geofenceIds: string|string[]\n   * @param options?: GeofenceOptions\n   * @returns {Promise<DeleteGeofencesResults>} - Promise that resolves to an object with:\n   *  successes: list of geofences successfully deleted\n   *  errors: list of geofences that failed to delete\n   */\n\n\n  GeoClass.prototype.deleteGeofences = function (geofenceIds, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, geofenceIdsInputArray, error_6;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n\n            if (!Array.isArray(geofenceIds)) {\n              geofenceIdsInputArray = [geofenceIds];\n            } else {\n              geofenceIdsInputArray = geofenceIds;\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.deleteGeofences(geofenceIdsInputArray, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_6 = _b.sent();\n            logger.debug(error_6);\n            throw error_6;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  GeoClass.MODULE = 'Geo';\n  return GeoClass;\n}();\n\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);","map":{"version":3,"mappings":"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","names":["Amplify","ConsoleLogger","Logger","parseMobileHubConfig","AmazonLocationServiceProvider","validateCoordinates","logger","DEFAULT_PROVIDER","_config","_pluggables","debug","GeoClass","MODULE","pluggable","getCategory","push","config","configure","getProviderName","providerName","find","undefined","Error","filter","amplifyConfig","Object","assign","Geo","forEach","_this","length","addPluggable","provider","prov","getPluggable","getAvailableMaps","getDefaultMap","text","options","_a","searchByText","_b","error_1","coordinates","lng","lat","searchByCoordinates","_c","error_2","geofences","Array","isArray","geofenceInputArray","saveGeofences","error_3","geofenceId","getGeofence","error_4","listGeofences","error_5","geofenceIds","geofenceIdsInputArray","deleteGeofences","error_6","register"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-amplify/geo/src/Geo.ts"],"sourcesContent":["/*\n * Copyright 2017-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tparseMobileHubConfig,\n} from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\n\nimport { validateCoordinates } from './util';\n\nimport {\n\tPlace,\n\tGeoConfig,\n\tCoordinates,\n\tSearchByTextOptions,\n\tSearchByCoordinatesOptions,\n\tGeoProvider,\n\tMapStyle,\n\tGeofenceId,\n\tGeofenceInput,\n\tGeofenceOptions,\n\tSaveGeofencesResults,\n\tGeofence,\n\tListGeofenceOptions,\n\tListGeofenceResults,\n\tDeleteGeofencesResults,\n} from './types';\n\nconst logger = new Logger('Geo');\n\nconst DEFAULT_PROVIDER = 'AmazonLocationService';\nexport class GeoClass {\n\tstatic MODULE = 'Geo';\n\t/**\n\t * @private\n\t */\n\tprivate _config: GeoConfig;\n\tprivate _pluggables: GeoProvider[];\n\n\tconstructor() {\n\t\tthis._config = {};\n\t\tthis._pluggables = [];\n\t\tlogger.debug('Geo Options', this._config);\n\t}\n\n\t/**\n\t * get the name of the module category\n\t * @returns {string} name of the module category\n\t */\n\tpublic getModuleName() {\n\t\treturn GeoClass.MODULE;\n\t}\n\n\t/**\n\t * add plugin into Geo category\n\t * @param {Object} pluggable - an instance of the plugin\n\t */\n\tpublic addPluggable(pluggable: GeoProvider) {\n\t\tif (pluggable && pluggable.getCategory() === 'Geo') {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\tconst config = pluggable.configure(\n\t\t\t\tthis._config[pluggable.getProviderName()]\n\t\t\t);\n\n\t\t\treturn config;\n\t\t}\n\t}\n\n\t/**\n\t * Get the plugin object\n\t * @param providerName - the name of the plugin\n\t */\n\tpublic getPluggable(providerName: string) {\n\t\tconst pluggable = this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === providerName\n\t\t);\n\t\tif (pluggable === undefined) {\n\t\t\tlogger.debug('No plugin found with providerName', providerName);\n\t\t\tthrow new Error('No plugin found in Geo for the provider');\n\t\t} else return pluggable;\n\t}\n\n\t/**\n\t * Remove the plugin object\n\t * @param providerName - the name of the plugin\n\t */\n\tpublic removePluggable(providerName: string) {\n\t\tthis._pluggables = this._pluggables.filter(\n\t\t\tpluggable => pluggable.getProviderName() !== providerName\n\t\t);\n\t\treturn;\n\t}\n\n\t/**\n\t * Configure Geo\n\t * @param {Object} config - Configuration object for Geo\n\t * @return {Object} - Current configuration\n\t */\n\tconfigure(config?) {\n\t\tlogger.debug('configure Geo');\n\n\t\tif (!config) return this._config;\n\n\t\tconst amplifyConfig = parseMobileHubConfig(config);\n\t\tthis._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n\n\t\tthis._pluggables.forEach(pluggable => {\n\t\t\tpluggable.configure(this._config[pluggable.getProviderName()]);\n\t\t});\n\n\t\tif (this._pluggables.length === 0) {\n\t\t\tthis.addPluggable(new AmazonLocationServiceProvider());\n\t\t}\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Get the map resources that are currently available through the provider\n\t * @param {string} provider\n\t * @returns - Array of available map resources\n\t */\n\tpublic getAvailableMaps(provider = DEFAULT_PROVIDER): MapStyle[] {\n\t\tconst prov = this.getPluggable(provider);\n\n\t\treturn prov.getAvailableMaps();\n\t}\n\n\t/**\n\t * Get the map resource set as default in amplify config\n\t * @param {string} provider\n\t * @returns - Map resource set as the default in amplify config\n\t */\n\tpublic getDefaultMap(provider = DEFAULT_PROVIDER): MapStyle {\n\t\tconst prov = this.getPluggable(provider);\n\n\t\treturn prov.getDefaultMap();\n\t}\n\n\t/**\n\t * Search by text input with optional parameters\n\t * @param  {string} text - The text string that is to be searched for\n\t * @param  {SearchByTextOptions} options? - Optional parameters to the search\n\t * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n\t */\n\tpublic async searchByText(\n\t\ttext: string,\n\t\toptions?: SearchByTextOptions\n\t): Promise<Place[]> {\n\t\tconst { providerName = DEFAULT_PROVIDER } = options || {};\n\t\tconst prov = this.getPluggable(providerName);\n\n\t\ttry {\n\t\t\treturn await prov.searchByText(text, options);\n\t\t} catch (error) {\n\t\t\tlogger.debug(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Reverse geocoding search via a coordinate point on the map\n\t * @param coordinates - Coordinates array for the search input\n\t * @param options - Options parameters for the search\n\t * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n\t */\n\tpublic async searchByCoordinates(\n\t\tcoordinates: Coordinates,\n\t\toptions?: SearchByCoordinatesOptions\n\t): Promise<Place> {\n\t\tconst { providerName = DEFAULT_PROVIDER } = options || {};\n\t\tconst prov = this.getPluggable(providerName);\n\n\t\tconst [lng, lat] = coordinates;\n\t\ttry {\n\t\t\tvalidateCoordinates(lng, lat);\n\t\t\treturn await prov.searchByCoordinates(coordinates, options);\n\t\t} catch (error) {\n\t\t\tlogger.debug(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Create geofences\n\t * @param geofences - Single or array of geofence objects to create\n\t * @param options? - Optional parameters for creating geofences\n\t * @returns {Promise<SaveGeofencesResults>} - Promise that resolves to an object with:\n\t *   successes: list of geofences successfully created\n\t *   errors: list of geofences that failed to create\n\t */\n\tpublic async saveGeofences(\n\t\tgeofences: GeofenceInput | GeofenceInput[],\n\t\toptions?: GeofenceOptions\n\t): Promise<SaveGeofencesResults> {\n\t\tconst { providerName = DEFAULT_PROVIDER } = options || {};\n\t\tconst prov = this.getPluggable(providerName);\n\n\t\t// If single geofence input, make it an array for batch call\n\t\tlet geofenceInputArray;\n\t\tif (!Array.isArray(geofences)) {\n\t\t\tgeofenceInputArray = [geofences];\n\t\t} else {\n\t\t\tgeofenceInputArray = geofences;\n\t\t}\n\n\t\ttry {\n\t\t\treturn await prov.saveGeofences(geofenceInputArray, options);\n\t\t} catch (error) {\n\t\t\tlogger.debug(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Get a single geofence by geofenceId\n\t * @param geofenceId: GeofenceId - The string id of the geofence to get\n\t * @param options?: GeofenceOptions - Optional parameters for getting a geofence\n\t * @returns Promise<Geofence> - Promise that resolves to a geofence object\n\t */\n\tpublic async getGeofence(\n\t\tgeofenceId: GeofenceId,\n\t\toptions?: GeofenceOptions\n\t): Promise<Geofence> {\n\t\tconst { providerName = DEFAULT_PROVIDER } = options || {};\n\t\tconst prov = this.getPluggable(providerName);\n\n\t\ttry {\n\t\t\treturn await prov.getGeofence(geofenceId, options);\n\t\t} catch (error) {\n\t\t\tlogger.debug(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * List geofences\n\t * @param  options?: ListGeofenceOptions\n\t * @returns {Promise<ListGeofencesResults>} - Promise that resolves to an object with:\n\t *   entries: list of geofences - 100 geofences are listed per page\n\t *   nextToken: token for next page of geofences\n\t */\n\tpublic async listGeofences(\n\t\toptions?: ListGeofenceOptions\n\t): Promise<ListGeofenceResults> {\n\t\tconst { providerName = DEFAULT_PROVIDER } = options || {};\n\t\tconst prov = this.getPluggable(providerName);\n\n\t\ttry {\n\t\t\treturn await prov.listGeofences(options);\n\t\t} catch (error) {\n\t\t\tlogger.debug(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Delete geofences\n\t * @param geofenceIds: string|string[]\n\t * @param options?: GeofenceOptions\n\t * @returns {Promise<DeleteGeofencesResults>} - Promise that resolves to an object with:\n\t *  successes: list of geofences successfully deleted\n\t *  errors: list of geofences that failed to delete\n\t */\n\tpublic async deleteGeofences(\n\t\tgeofenceIds: string | string[],\n\t\toptions?: GeofenceOptions\n\t): Promise<DeleteGeofencesResults> {\n\t\tconst { providerName = DEFAULT_PROVIDER } = options || {};\n\t\tconst prov = this.getPluggable(providerName);\n\n\t\t// If single geofence input, make it an array for batch call\n\t\tlet geofenceIdsInputArray;\n\t\tif (!Array.isArray(geofenceIds)) {\n\t\t\tgeofenceIdsInputArray = [geofenceIds];\n\t\t} else {\n\t\t\tgeofenceIdsInputArray = geofenceIds;\n\t\t}\n\n\t\t//  Delete geofences\n\t\ttry {\n\t\t\treturn await prov.deleteGeofences(geofenceIdsInputArray, options);\n\t\t} catch (error) {\n\t\t\tlogger.debug(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport const Geo = new GeoClass();\nAmplify.register(Geo);\n"]},"metadata":{},"sourceType":"module"}