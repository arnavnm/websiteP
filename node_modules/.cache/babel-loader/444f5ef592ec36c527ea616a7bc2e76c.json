{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ListBucketAnalyticsConfigurationsOutput, ListBucketAnalyticsConfigurationsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand, serializeAws_restXmlListBucketAnalyticsConfigurationsCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Lists the analytics configurations for the bucket. You can have up to 1,000 analytics\n *          configurations per bucket.</p>\n *\n *          <p>This operation supports list pagination and does not return more than 100 configurations\n *          at a time. You should always check the <code>IsTruncated</code> element in the response. If\n *          there are no more configurations to list, <code>IsTruncated</code> is set to false. If\n *          there are more configurations to list, <code>IsTruncated</code> is set to true, and there\n *          will be a value in <code>NextContinuationToken</code>. You use the\n *             <code>NextContinuationToken</code> value to continue the pagination of the list by\n *          passing the value in continuation-token in the request to <code>GET</code> the next\n *          page.</p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:GetAnalyticsConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about Amazon S3 analytics feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html\">Amazon S3 Analytics â€“ Storage Class\n *             Analysis</a>. </p>\n *\n *          <p>The following operations are related to\n *          <code>ListBucketAnalyticsConfigurations</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html\">GetBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html\">DeleteBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html\">PutBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar ListBucketAnalyticsConfigurationsCommand =\n/** @class */\nfunction (_super) {\n  __extends(ListBucketAnalyticsConfigurationsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function ListBucketAnalyticsConfigurationsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  ListBucketAnalyticsConfigurationsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"ListBucketAnalyticsConfigurationsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  ListBucketAnalyticsConfigurationsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context);\n  };\n\n  ListBucketAnalyticsConfigurationsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context);\n  };\n\n  return ListBucketAnalyticsConfigurationsCommand;\n}($Command);\n\nexport { ListBucketAnalyticsConfigurationsCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uCAAT,EAAkDC,wCAAlD,QAAkG,oBAAlG;AACA,SAASC,8DAAT,EAAyEC,4DAAzE,QAA8I,0BAA9I;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,wCAAwC;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC5EV,SAAS,CAACS,wCAAD,EAA2CC,MAA3C,CAAT,CAD4E,CAE5E;EACA;;;EACA,SAASD,wCAAT,CAAkDE,KAAlD,EAAyD;IACrD,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALqD,CAMrD;EACH;EACD;AACJ;AACA;;;EACIH,wCAAwC,CAACK,SAAzC,CAAmDC,iBAAnD,GAAuE,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IAClH,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBf,uBAAuB,CAACY,aAAD,CAAhD;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,0CAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,wCAAwC,CAAC4B,kBAJxC;MAK1BC,wBAAwB,EAAE9B,uCAAuC,CAAC6B;IALxC,CAA9B;IAOA,IAAIE,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAlBD;;EAmBAnB,wCAAwC,CAACK,SAAzC,CAAmDO,SAAnD,GAA+D,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IACrF,OAAOhC,4DAA4D,CAACO,KAAD,EAAQyB,OAAR,CAAnE;EACH,CAFD;;EAGA3B,wCAAwC,CAACK,SAAzC,CAAmDQ,WAAnD,GAAiE,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IACxF,OAAOjC,8DAA8D,CAACkC,MAAD,EAASD,OAAT,CAArE;EACH,CAFD;;EAGA,OAAO3B,wCAAP;AACH,CAzC6D,CAyC5DD,QAzC4D,CAA9D;;AA0CA,SAASC,wCAAT","names":["ListBucketAnalyticsConfigurationsOutput","ListBucketAnalyticsConfigurationsRequest","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand","serializeAws_restXmlListBucketAnalyticsConfigurationsCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","ListBucketAnalyticsConfigurationsCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-s3/commands/ListBucketAnalyticsConfigurationsCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { ListBucketAnalyticsConfigurationsOutput, ListBucketAnalyticsConfigurationsRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand,\n  serializeAws_restXmlListBucketAnalyticsConfigurationsCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type ListBucketAnalyticsConfigurationsCommandInput = ListBucketAnalyticsConfigurationsRequest;\nexport type ListBucketAnalyticsConfigurationsCommandOutput = ListBucketAnalyticsConfigurationsOutput & __MetadataBearer;\n\n/**\n * <p>Lists the analytics configurations for the bucket. You can have up to 1,000 analytics\n *          configurations per bucket.</p>\n *\n *          <p>This operation supports list pagination and does not return more than 100 configurations\n *          at a time. You should always check the <code>IsTruncated</code> element in the response. If\n *          there are no more configurations to list, <code>IsTruncated</code> is set to false. If\n *          there are more configurations to list, <code>IsTruncated</code> is set to true, and there\n *          will be a value in <code>NextContinuationToken</code>. You use the\n *             <code>NextContinuationToken</code> value to continue the pagination of the list by\n *          passing the value in continuation-token in the request to <code>GET</code> the next\n *          page.</p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:GetAnalyticsConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about Amazon S3 analytics feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html\">Amazon S3 Analytics â€“ Storage Class\n *             Analysis</a>. </p>\n *\n *          <p>The following operations are related to\n *          <code>ListBucketAnalyticsConfigurations</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html\">GetBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html\">DeleteBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html\">PutBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class ListBucketAnalyticsConfigurationsCommand extends $Command<\n  ListBucketAnalyticsConfigurationsCommandInput,\n  ListBucketAnalyticsConfigurationsCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: ListBucketAnalyticsConfigurationsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<ListBucketAnalyticsConfigurationsCommandInput, ListBucketAnalyticsConfigurationsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"ListBucketAnalyticsConfigurationsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: ListBucketAnalyticsConfigurationsCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<ListBucketAnalyticsConfigurationsCommandOutput> {\n    return deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}