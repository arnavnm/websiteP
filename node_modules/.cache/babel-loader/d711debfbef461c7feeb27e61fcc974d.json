{"ast":null,"code":"import _objectSpread from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout']; // Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\n\nexport function normalizeStyle(style) {\n  if (!style) {\n    return null;\n  }\n\n  if (typeof style === 'string') {\n    return style;\n  }\n\n  if ('toJS' in style) {\n    style = style.toJS();\n  }\n\n  if (!style.layers) {\n    return style;\n  }\n\n  var layerIndex = {};\n\n  var _iterator = _createForOfIteratorHelper(style.layers),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var layer = _step.value;\n      layerIndex[layer.id] = layer;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var layers = style.layers.map(function (layer) {\n    // @ts-expect-error\n    var layerRef = layerIndex[layer.ref];\n    var normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = _objectSpread({}, layer); // Breaks style diffing :(\n\n      delete normalizedLayer.interactive;\n    } // Style diffing doesn't work with refs so expand them out manually before diffing.\n\n\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || _objectSpread({}, layer);\n      delete normalizedLayer.ref; // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n\n      var _iterator2 = _createForOfIteratorHelper(refProps),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var propName = _step2.value;\n\n          if (propName in layerRef) {\n            normalizedLayer[propName] = layerRef[propName];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return normalizedLayer || layer;\n  }); // Do not mutate the style object provided by the user\n\n  return _objectSpread(_objectSpread({}, style), {}, {\n    layers: layers\n  });\n}","map":{"version":3,"mappings":";;AAAA,IAAMA,QAAQ,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,cAAnB,EAAmC,SAAnC,EAA8C,SAA9C,EAAyD,QAAzD,EAAmE,QAAnE,CAAjB,C,CACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAI,CAACA,KAAL,EAAY;IACR,OAAO,IAAP;EACH;;EACD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,OAAOA,KAAP;EACH;;EACD,IAAI,UAAUA,KAAd,EAAqB;IACjBA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR;EACH;;EACD,IAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;IACf,OAAOF,KAAP;EACH;;EACD,IAAMG,UAAU,GAAG,EAAnB;;EAbkC,2CAcdH,KAAK,CAACE,MAdQ;EAAA;;EAAA;IAclC,oDAAkC;MAAA,IAAvBE,KAAuB;MAC9BD,UAAU,CAACC,KAAK,CAACC,EAAP,CAAV,GAAuBD,KAAvB;IACH;EAhBiC;IAAA;EAAA;IAAA;EAAA;;EAiBlC,IAAMF,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAaI,GAAb,CAAiB,UAAAF,KAAK,EAAI;IACrC;IACA,IAAMG,QAAQ,GAAGJ,UAAU,CAACC,KAAK,CAACI,GAAP,CAA3B;IACA,IAAIC,eAAe,GAAG,IAAtB;;IACA,IAAI,iBAAiBL,KAArB,EAA4B;MACxBK,eAAe,qBAAQL,KAAR,CAAf,CADwB,CAExB;;MACA,OAAOK,eAAe,CAACC,WAAvB;IACH,CARoC,CASrC;;;IACA,IAAIH,QAAJ,EAAc;MACVE,eAAe,GAAGA,eAAe,sBAASL,KAAT,CAAjC;MACA,OAAOK,eAAe,CAACD,GAAvB,CAFU,CAGV;;MAHU,4CAIaV,QAJb;MAAA;;MAAA;QAIV,uDAAiC;UAAA,IAAtBa,QAAsB;;UAC7B,IAAIA,QAAQ,IAAIJ,QAAhB,EAA0B;YACtBE,eAAe,CAACE,QAAD,CAAf,GAA4BJ,QAAQ,CAACI,QAAD,CAApC;UACH;QACJ;MARS;QAAA;MAAA;QAAA;MAAA;IASb;;IACD,OAAOF,eAAe,IAAIL,KAA1B;EACH,CArBc,CAAf,CAjBkC,CAuClC;;EACA,uCAAYJ,KAAZ;IAAmBE,MAAM,EAANA;EAAnB;AACH","names":["refProps","normalizeStyle","style","toJS","layers","layerIndex","layer","id","map","layerRef","ref","normalizedLayer","interactive","propName"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/react-map-gl/src/utils/style-utils.ts"],"sourcesContent":["import {ImmutableLike, MapboxStyle} from '../types';\n\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\nexport function normalizeStyle(style: string | MapboxStyle | ImmutableLike): string | MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if ('toJS' in style) {\n    style = style.toJS() as MapboxStyle;\n  }\n  if (!style.layers) {\n    return style;\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    // @ts-expect-error\n    const layerRef = layerIndex[layer.ref];\n    let normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = {...layer};\n      // Breaks style diffing :(\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || {...layer};\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n"]},"metadata":{},"sourceType":"module"}