{"ast":null,"code":"import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { raise, send, errorPlatform, update, error as error$1, log, stop, start, cancel } from './actionTypes.js';\nimport { initEvent, doneInvoke, toActionObjects, resolveActions, error, getActionFunction } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, toObserver, toSCXMLEvent, flatten, isFunction, isPromiseLike, isObservable, isMachine, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, toInvokeSource, uniqueId } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { createDeferredActor, isSpawnedActor } from './Actor.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // perhaps those events should be rejected in the parent\n        // but atm it doesn't have easy access to all of the information that is required to do it reliably\n        if (_this.status !== InterpreterStatus.Stopped || _this.parent !== target || // we need to send events to the parent from exit handlers of a machine that reached its final state\n        _this.state.done) {\n          // Send SCXML events to machines\n          target.send(__assign(__assign({}, event), {\n            name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n            origin: _this.sessionId\n          }));\n        }\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    this._exec = function (action, context, _event, actionFunctionMap) {\n      if (actionFunctionMap === void 0) {\n        actionFunctionMap = _this.machine.options.actions;\n      }\n\n      var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n      var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n      if (exec) {\n        try {\n          return exec(context, _event.data, !_this.machine.config.predictableActionArguments ? {\n            action: action,\n            state: _this.state,\n            _event: _event\n          } : {\n            action: action,\n            _event: _event\n          });\n        } catch (err) {\n          if (_this.parent) {\n            _this.parent.send({\n              type: 'xstate.error',\n              data: err\n            });\n          }\n\n          throw err;\n        }\n      }\n\n      switch (action.type) {\n        case send:\n          var sendAction = action;\n\n          if (typeof sendAction.delay === 'number') {\n            _this.defer(sendAction);\n\n            return;\n          } else {\n            if (sendAction.to) {\n              _this.sendTo(sendAction._event, sendAction.to);\n            } else {\n              _this.send(sendAction._event);\n            }\n          }\n\n          break;\n\n        case cancel:\n          _this.cancel(action.sendId);\n\n          break;\n\n        case start:\n          {\n            if (_this.status !== InterpreterStatus.Running) {\n              return;\n            }\n\n            var activity = action.activity; // If the activity will be stopped right after it's started\n            // (such as in transient states)\n            // don't bother starting the activity.\n\n            if ( // in v4 with `predictableActionArguments` invokes are called eagerly when the `this.state` still points to the previous state\n            !_this.machine.config.predictableActionArguments && !_this.state.activities[activity.id || activity.type]) {\n              break;\n            } // Invoked services\n\n\n            if (activity.type === ActionTypes.Invoke) {\n              var invokeSource = toInvokeSource(activity.src);\n              var serviceCreator = _this.machine.options.services ? _this.machine.options.services[invokeSource.type] : undefined;\n              var id = activity.id,\n                  data = activity.data;\n\n              if (!IS_PRODUCTION) {\n                warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n                \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(_this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n              }\n\n              var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n              if (!serviceCreator) {\n                // tslint:disable-next-line:no-console\n                if (!IS_PRODUCTION) {\n                  warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(_this.machine.id, \"'.\"));\n                }\n\n                return;\n              }\n\n              var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n              if (typeof serviceCreator === 'string') {\n                // TODO: warn\n                return;\n              }\n\n              var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n                data: resolvedData,\n                src: invokeSource,\n                meta: activity.meta\n              }) : serviceCreator;\n\n              if (!source) {\n                // TODO: warn?\n                return;\n              }\n\n              var options = void 0;\n\n              if (isMachine(source)) {\n                source = resolvedData ? source.withContext(resolvedData) : source;\n                options = {\n                  autoForward: autoForward\n                };\n              }\n\n              _this.spawn(source, id, options);\n            } else {\n              _this.spawnActivity(activity);\n            }\n\n            break;\n          }\n\n        case stop:\n          {\n            _this.stopChild(action.activity.id);\n\n            break;\n          }\n\n        case log:\n          var label = action.label,\n              value = action.value;\n\n          if (label) {\n            _this.logger(label, value);\n          } else {\n            _this.logger(value);\n          }\n\n          break;\n\n        default:\n          if (!IS_PRODUCTION) {\n            warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n          }\n\n          break;\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function get() {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function get() {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if ((!this.machine.config.predictableActionArguments || // this is currently required to execute initial actions as the `initialState` gets cached\n    // we can't just recompute it (and execute actions while doing so) because we try to preserve identity of actors created within initial assigns\n    _event === initEvent) && this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    if (this.state.done) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this._stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    var observer = toObserver(nextListenerOrObserver, _, completeListener);\n    this.listeners.add(observer.next); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      observer.next(this.state);\n    }\n\n    var completeOnce = function completeOnce() {\n      _this.doneListeners.delete(completeOnce);\n\n      _this.stopListeners.delete(completeOnce);\n\n      observer.complete();\n    };\n\n    if (this.status === InterpreterStatus.Stopped) {\n      observer.complete();\n    } else {\n      this.onDone(completeOnce);\n      this.onStop(completeOnce);\n    }\n\n    return {\n      unsubscribe: function unsubscribe() {\n        _this.listeners.delete(observer.next);\n\n        _this.doneListeners.delete(completeOnce);\n\n        _this.stopListeners.delete(completeOnce);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n\n    this.machine._init();\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n\n  Interpreter.prototype._stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n\n    try {\n      // we are going to stop within the current sync frame\n      // so we can safely just cancel this here as nothing async should be fired anyway\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    } // clear everything that might be enqueued\n\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    // TODO: add warning for stopping non-root interpreters\n    var _this = this; // grab the current scheduler as it will be replaced in _stop\n\n\n    var scheduler = this.scheduler;\n\n    this._stop(); // let what is currently processed to be finished\n\n\n    scheduler.schedule(function () {\n      // it feels weird to handle this here but we need to handle this even slightly \"out of band\"\n      var _event = toSCXMLEvent({\n        type: 'xstate.stop'\n      });\n\n      var nextState = provide(_this, function () {\n        var exitActions = flatten(__spreadArray([], __read(_this.state.configuration), false).sort(function (a, b) {\n          return b.order - a.order;\n        }).map(function (stateNode) {\n          return toActionObjects(stateNode.onExit, _this.machine.options.actions);\n        }));\n\n        var _a = __read(resolveActions(_this.machine, _this.state, _this.state.context, _event, exitActions, _this.machine.config.predictableActionArguments ? _this._exec : undefined, _this.machine.config.predictableActionArguments || _this.machine.config.preserveActionOrder), 2),\n            resolvedActions = _a[0],\n            updatedContext = _a[1];\n\n        var newState = new State({\n          value: _this.state.value,\n          context: updatedContext,\n          _event: _event,\n          _sessionid: _this.sessionId,\n          historyValue: undefined,\n          history: _this.state,\n          actions: resolvedActions.filter(function (action) {\n            return action.type !== raise && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n          }),\n          activities: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {},\n          done: _this.state.done,\n          tags: _this.state.tags,\n          machine: _this.machine\n        });\n        newState.changed = true;\n        return newState;\n      });\n\n      _this.update(nextState, _event); // TODO: think about converting those to actions\n      // Stop all children\n\n\n      _this.children.forEach(function (child) {\n        if (isFunction(child.stop)) {\n          child.stop();\n        }\n      });\n\n      _this.children.clear();\n\n      registry.free(_this.sessionId);\n    });\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function _loop_1(event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n\n  Interpreter.prototype._nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event, undefined, _this.machine.config.predictableActionArguments ? _this._exec : undefined);\n    });\n    return nextState;\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    return this._nextState(event);\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    this._exec(action, state.context, state._event, actionFunctionMap);\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (this.status !== InterpreterStatus.Running) {\n      return createDeferredActor(entity, name);\n    }\n\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function send() {\n        return void 0;\n      },\n      subscribe: function subscribe(next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function unsubscribe() {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function stop() {\n        canceled = true;\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function getSnapshot() {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function receive(e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = (_a = {\n      id: id,\n      send: function send(event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function subscribe(next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function unsubscribe() {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function stop() {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function getSnapshot() {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function send() {\n        return void 0;\n      },\n      subscribe: function subscribe(next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function stop() {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function getSnapshot() {\n        return emitted;\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n\n    this.children.set(id, (_a = {\n      id: id,\n      send: function send() {\n        return void 0;\n      },\n      subscribe: function subscribe() {\n        return {\n          unsubscribe: function unsubscribe() {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function getSnapshot() {\n        return undefined;\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function stateSanitizer(state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (_setTimeout) {\n        function setTimeout(_x, _x2) {\n          return _setTimeout.apply(this, arguments);\n        }\n\n        setTimeout.toString = function () {\n          return _setTimeout.toString();\n        };\n\n        return setTimeout;\n      }(function (fn, ms) {\n        return setTimeout(fn, ms);\n      }),\n      clearTimeout: function (_clearTimeout) {\n        function clearTimeout(_x3) {\n          return _clearTimeout.apply(this, arguments);\n        }\n\n        clearTimeout.toString = function () {\n          return _clearTimeout.toString();\n        };\n\n        return clearTimeout;\n      }(function (id) {\n        return clearTimeout(id);\n      })\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function resolveSpawnOptions(nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };","map":{"version":3,"names":["__values","__spreadArray","__read","__assign","SpecialTargets","ActionTypes","isStateConfig","State","bindActionToState","raise","send","errorPlatform","update","error","error$1","log","stop","start","cancel","initEvent","doneInvoke","toActionObjects","resolveActions","getActionFunction","IS_PRODUCTION","warn","mapContext","toObserver","toSCXMLEvent","flatten","isFunction","isPromiseLike","isObservable","isMachine","isBehavior","reportUnhandledExceptionOnInvocation","symbolObservable","isArray","toEventObject","isString","isActor","toInvokeSource","uniqueId","Scheduler","createDeferredActor","isSpawnedActor","registry","getGlobal","registerService","provide","consume","spawnBehavior","DEFAULT_SPAWN_OPTIONS","sync","autoForward","InterpreterStatus","Interpreter","machine","options","_this","defaultOptions","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","status","NotStarted","children","Map","forwardTo","init","event","payload","batch","state","_event","Stopped","concat","name","id","JSON","stringify","data","Running","deferEvents","Error","scheduler","schedule","forward","nextState","_state","sendTo","to","isParent","parent","Parent","target","get","undefined","type","done","origin","sessionId","_exec","action","context","actionFunctionMap","actions","actionOrExec","exec","config","predictableActionArguments","err","sendAction","delay","defer","sendId","activity","activities","Invoke","invokeSource","src","serviceCreator","services","resolvedData","source","meta","withContext","spawn","spawnActivity","stopChild","label","value","logger","resolvedOptions","clock","resolvedId","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","_c","next","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","forEach","child","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","history","e_4_1","finalChildStateNode","configuration","find","sn","doneData","_l","_m","e_5_1","_stop","onTransition","add","subscribe","nextListenerOrObserver","_","completeListener","observer","completeOnce","delete","complete","onDone","onStop","unsubscribe","onEvent","onSend","onChange","off","_init","register","resolvedState","resolveState","from","attachDev","initialize","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","_p","keys","_q","key","clearTimeout","e_10_1","clear","exitActions","sort","a","b","order","map","stateNode","onExit","preserveActionOrder","resolvedActions","updatedContext","newState","historyValue","filter","Internal","events","transitions","tags","changed","free","length","e_11","batchChanged","batchedActions","_loop_1","event_1","transition","push","apply","events_1","events_1_1","e_11_1","sender","bind","_nextState","indexOf","nextEvents","some","nextEvent","e_12","e_12_1","setTimeout","removeChild","childId","entity","spawnPromise","Promise","resolve","spawnCallback","spawnActor","spawnObservable","spawnMachine","childService","actor","set","doneEvent","behavior","actorRef","promise","canceled","then","response","errorData","errorEvent","strict","handleError","unsubscribed","toJSON","getSnapshot","callback","receivers","emitted","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","global","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","fn","ms","console","interpret","resolveSpawnOptions","nameOrOptions","service","isLazyEntity","interpreter"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/xstate/es/interpreter.js"],"sourcesContent":["import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { raise, send, errorPlatform, update, error as error$1, log, stop, start, cancel } from './actionTypes.js';\nimport { initEvent, doneInvoke, toActionObjects, resolveActions, error, getActionFunction } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, toObserver, toSCXMLEvent, flatten, isFunction, isPromiseLike, isObservable, isMachine, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, toInvokeSource, uniqueId } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { createDeferredActor, isSpawnedActor } from './Actor.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\n\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // perhaps those events should be rejected in the parent\n        // but atm it doesn't have easy access to all of the information that is required to do it reliably\n        if (_this.status !== InterpreterStatus.Stopped || _this.parent !== target || // we need to send events to the parent from exit handlers of a machine that reached its final state\n        _this.state.done) {\n          // Send SCXML events to machines\n          target.send(__assign(__assign({}, event), {\n            name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n            origin: _this.sessionId\n          }));\n        }\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    this._exec = function (action, context, _event, actionFunctionMap) {\n      if (actionFunctionMap === void 0) {\n        actionFunctionMap = _this.machine.options.actions;\n      }\n\n      var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n      var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n      if (exec) {\n        try {\n          return exec(context, _event.data, !_this.machine.config.predictableActionArguments ? {\n            action: action,\n            state: _this.state,\n            _event: _event\n          } : {\n            action: action,\n            _event: _event\n          });\n        } catch (err) {\n          if (_this.parent) {\n            _this.parent.send({\n              type: 'xstate.error',\n              data: err\n            });\n          }\n\n          throw err;\n        }\n      }\n\n      switch (action.type) {\n        case send:\n          var sendAction = action;\n\n          if (typeof sendAction.delay === 'number') {\n            _this.defer(sendAction);\n\n            return;\n          } else {\n            if (sendAction.to) {\n              _this.sendTo(sendAction._event, sendAction.to);\n            } else {\n              _this.send(sendAction._event);\n            }\n          }\n\n          break;\n\n        case cancel:\n          _this.cancel(action.sendId);\n\n          break;\n\n        case start:\n          {\n            if (_this.status !== InterpreterStatus.Running) {\n              return;\n            }\n\n            var activity = action.activity; // If the activity will be stopped right after it's started\n            // (such as in transient states)\n            // don't bother starting the activity.\n\n            if ( // in v4 with `predictableActionArguments` invokes are called eagerly when the `this.state` still points to the previous state\n            !_this.machine.config.predictableActionArguments && !_this.state.activities[activity.id || activity.type]) {\n              break;\n            } // Invoked services\n\n\n            if (activity.type === ActionTypes.Invoke) {\n              var invokeSource = toInvokeSource(activity.src);\n              var serviceCreator = _this.machine.options.services ? _this.machine.options.services[invokeSource.type] : undefined;\n              var id = activity.id,\n                  data = activity.data;\n\n              if (!IS_PRODUCTION) {\n                warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n                \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(_this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n              }\n\n              var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n              if (!serviceCreator) {\n                // tslint:disable-next-line:no-console\n                if (!IS_PRODUCTION) {\n                  warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(_this.machine.id, \"'.\"));\n                }\n\n                return;\n              }\n\n              var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n              if (typeof serviceCreator === 'string') {\n                // TODO: warn\n                return;\n              }\n\n              var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n                data: resolvedData,\n                src: invokeSource,\n                meta: activity.meta\n              }) : serviceCreator;\n\n              if (!source) {\n                // TODO: warn?\n                return;\n              }\n\n              var options = void 0;\n\n              if (isMachine(source)) {\n                source = resolvedData ? source.withContext(resolvedData) : source;\n                options = {\n                  autoForward: autoForward\n                };\n              }\n\n              _this.spawn(source, id, options);\n            } else {\n              _this.spawnActivity(activity);\n            }\n\n            break;\n          }\n\n        case stop:\n          {\n            _this.stopChild(action.activity.id);\n\n            break;\n          }\n\n        case log:\n          var label = action.label,\n              value = action.value;\n\n          if (label) {\n            _this.logger(label, value);\n          } else {\n            _this.logger(value);\n          }\n\n          break;\n\n        default:\n          if (!IS_PRODUCTION) {\n            warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n          }\n\n          break;\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if ((!this.machine.config.predictableActionArguments || // this is currently required to execute initial actions as the `initialState` gets cached\n    // we can't just recompute it (and execute actions while doing so) because we try to preserve identity of actors created within initial assigns\n    _event === initEvent) && this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    if (this.state.done) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this._stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    var observer = toObserver(nextListenerOrObserver, _, completeListener);\n    this.listeners.add(observer.next); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      observer.next(this.state);\n    }\n\n    var completeOnce = function () {\n      _this.doneListeners.delete(completeOnce);\n\n      _this.stopListeners.delete(completeOnce);\n\n      observer.complete();\n    };\n\n    if (this.status === InterpreterStatus.Stopped) {\n      observer.complete();\n    } else {\n      this.onDone(completeOnce);\n      this.onStop(completeOnce);\n    }\n\n    return {\n      unsubscribe: function () {\n        _this.listeners.delete(observer.next);\n\n        _this.doneListeners.delete(completeOnce);\n\n        _this.stopListeners.delete(completeOnce);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n\n    this.machine._init();\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n\n  Interpreter.prototype._stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n\n    try {\n      // we are going to stop within the current sync frame\n      // so we can safely just cancel this here as nothing async should be fired anyway\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    } // clear everything that might be enqueued\n\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    // TODO: add warning for stopping non-root interpreters\n    var _this = this; // grab the current scheduler as it will be replaced in _stop\n\n\n    var scheduler = this.scheduler;\n\n    this._stop(); // let what is currently processed to be finished\n\n\n    scheduler.schedule(function () {\n      // it feels weird to handle this here but we need to handle this even slightly \"out of band\"\n      var _event = toSCXMLEvent({\n        type: 'xstate.stop'\n      });\n\n      var nextState = provide(_this, function () {\n        var exitActions = flatten(__spreadArray([], __read(_this.state.configuration), false).sort(function (a, b) {\n          return b.order - a.order;\n        }).map(function (stateNode) {\n          return toActionObjects(stateNode.onExit, _this.machine.options.actions);\n        }));\n\n        var _a = __read(resolveActions(_this.machine, _this.state, _this.state.context, _event, exitActions, _this.machine.config.predictableActionArguments ? _this._exec : undefined, _this.machine.config.predictableActionArguments || _this.machine.config.preserveActionOrder), 2),\n            resolvedActions = _a[0],\n            updatedContext = _a[1];\n\n        var newState = new State({\n          value: _this.state.value,\n          context: updatedContext,\n          _event: _event,\n          _sessionid: _this.sessionId,\n          historyValue: undefined,\n          history: _this.state,\n          actions: resolvedActions.filter(function (action) {\n            return action.type !== raise && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n          }),\n          activities: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {},\n          done: _this.state.done,\n          tags: _this.state.tags,\n          machine: _this.machine\n        });\n        newState.changed = true;\n        return newState;\n      });\n\n      _this.update(nextState, _event); // TODO: think about converting those to actions\n      // Stop all children\n\n\n      _this.children.forEach(function (child) {\n        if (isFunction(child.stop)) {\n          child.stop();\n        }\n      });\n\n      _this.children.clear();\n\n      registry.free(_this.sessionId);\n    });\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n\n  Interpreter.prototype._nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event, undefined, _this.machine.config.predictableActionArguments ? _this._exec : undefined);\n    });\n    return nextState;\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    return this._nextState(event);\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    this._exec(action, state.context, state._event, actionFunctionMap);\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (this.status !== InterpreterStatus.Running) {\n      return createDeferredActor(entity, name);\n    }\n\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = (_a = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n\n    this.children.set(id, (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (fn, ms) {\n        return setTimeout(fn, ms);\n      },\n      clearTimeout: function (id) {\n        return clearTimeout(id);\n      }\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}