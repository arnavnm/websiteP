{"ast":null,"code":"import React, { useState, useCallback, useEffect } from 'react';\nimport Calendar, { Skeleton } from 'react-activity-calendar';\nexport { createCalendarTheme } from 'react-activity-calendar';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n} // GitHub theme\n\n\nconst API_URL = 'https://github-contributions-api.jogruber.de/v4/';\nconst DEFAULT_THEME = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0'\n};\n\nconst transformData = (data, transformFn) => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  const transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(`Required property \"count: number\" missing or invalid. Got: ${testObj.count}`);\n    }\n\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(`Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`);\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(`Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`);\n    }\n  }\n\n  return transformedData;\n};\n\nasync function fetchCalendarData(username, year) {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.error);\n  }\n\n  return data;\n}\n\nconst GitHubCalendar = _ref => {\n  var _props$theme;\n\n  let {\n    username,\n    year = 'last',\n    transformData: transformDataProp,\n    ...props\n  } = _ref;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const transformDataCallback = useCallback(contributions => transformData(contributions, transformDataProp), [transformDataProp]);\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year).then(_ref2 => {\n      let {\n        contributions\n      } = _ref2;\n      return setData(transformDataCallback(contributions));\n    }).catch(setError).finally(() => setLoading(false));\n  }, [username, year, transformDataCallback]);\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"i\", null, \"Unable to fetch contribution data. See console.\"));\n  }\n\n  if (loading || !data) {\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({}, props, {\n      loading: true\n    }));\n  }\n\n  const theme = props.color ? undefined : (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : DEFAULT_THEME;\n  const labels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`\n  };\n  return /*#__PURE__*/React.createElement(Calendar, _extends({\n    data: data,\n    theme: theme,\n    labels: labels\n  }, props));\n};\n\nexport { GitHubCalendar as default };","map":{"version":3,"mappings":"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","names":["API_URL","DEFAULT_THEME","level4","level3","level2","level1","level0","transformData","data","transformFn","transformedData","Array","isArray","Error","length","testObj","count","date","test","level","fetchCalendarData","username","year","response","fetch","json","ok","error","GitHubCalendar","_ref","transformDataProp","props","setData","useState","loading","setLoading","setError","transformDataCallback","useCallback","contributions","fetchData","then","_ref2","catch","finally","useEffect","React","Skeleton","theme","color","undefined","labels","totalCount","Calendar"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/react-github-calendar/src/constants.ts","/Users/arnavmisra/Desktop/Portfolio-main/node_modules/react-github-calendar/src/utils.ts","/Users/arnavmisra/Desktop/Portfolio-main/node_modules/react-github-calendar/src/index.tsx"],"sourcesContent":["// GitHub theme\nimport { Theme } from 'react-activity-calendar';\n\nexport const API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\nexport const DEFAULT_THEME: Theme = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0',\n};\n","import { CalendarData } from 'react-activity-calendar';\n\nimport { Props } from './index';\n\nexport const transformData = (\n  data: CalendarData,\n  transformFn?: Props['transformData'],\n): CalendarData => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  const transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(\n        `Required property \"count: number\" missing or invalid. Got: ${testObj.count}`,\n      );\n    }\n\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(\n        `Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`,\n      );\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(\n        `Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`,\n      );\n    }\n  }\n\n  return transformedData;\n};\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport Calendar, {\n  CalendarData,\n  createCalendarTheme,\n  Props as CalendarProps,\n  Skeleton,\n} from 'react-activity-calendar';\n\nimport { API_URL, DEFAULT_THEME } from './constants';\nimport { ApiErrorResponse, ApiResponse, Year } from './types';\nimport { transformData } from './utils';\n\nexport interface Props extends Omit<CalendarProps, 'data'> {\n  username: string;\n  year?: Year;\n  transformData?: (data: CalendarData) => CalendarData;\n}\n\nasync function fetchCalendarData(username: string, year: Year): Promise<ApiResponse> {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data: ApiResponse | ApiErrorResponse = await response.json();\n\n  if (!response.ok) {\n    throw new Error((data as ApiErrorResponse).error);\n  }\n\n  return data as ApiResponse;\n}\n\nconst GitHubCalendar: FunctionComponent<Props> = ({\n  username,\n  year = 'last',\n  transformData: transformDataProp,\n  ...props\n}) => {\n  const [data, setData] = useState<CalendarData | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const transformDataCallback = useCallback(\n    (contributions: CalendarData) => transformData(contributions, transformDataProp),\n    [transformDataProp],\n  );\n\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year)\n      .then(({ contributions }) => setData(transformDataCallback(contributions)))\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [username, year, transformDataCallback]);\n\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return (\n      <div>\n        <i>Unable to fetch contribution data. See console.</i>\n      </div>\n    );\n  }\n\n  if (loading || !data) {\n    return <Skeleton {...props} loading />;\n  }\n\n  const theme = props.color ? undefined : props.theme ?? DEFAULT_THEME;\n\n  const labels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`,\n  };\n\n  return <Calendar data={data} theme={theme} labels={labels} {...props} />;\n};\n\nexport { createCalendarTheme };\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module"}