{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString, extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1DeleteSessionCommand = function serializeAws_restJson1DeleteSessionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSessionCommand = function serializeAws_restJson1GetSessionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          query = __assign({}, input.checkpointLabelFilter !== undefined && {\n            checkpointLabelFilter: input.checkpointLabelFilter\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PostContentCommand = function serializeAws_restJson1PostContentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\",\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n          }, isSerializableHeaderValue(input.sessionAttributes) && {\n            \"x-amz-lex-session-attributes\": Buffer.from(__LazyJsonString.fromObject(input.sessionAttributes)).toString(\"base64\")\n          }), isSerializableHeaderValue(input.requestAttributes) && {\n            \"x-amz-lex-request-attributes\": Buffer.from(__LazyJsonString.fromObject(input.requestAttributes)).toString(\"base64\")\n          }), isSerializableHeaderValue(input.contentType) && {\n            \"content-type\": input.contentType\n          }), isSerializableHeaderValue(input.accept) && {\n            accept: input.accept\n          }), isSerializableHeaderValue(input.activeContexts) && {\n            \"x-amz-lex-active-contexts\": Buffer.from(__LazyJsonString.fromObject(input.activeContexts)).toString(\"base64\")\n          });\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/content\";\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          if (input.inputStream !== undefined) {\n            body = input.inputStream;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PostTextCommand = function serializeAws_restJson1PostTextCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/text\";\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.activeContexts !== undefined && input.activeContexts !== null && {\n            activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n          }), input.inputText !== undefined && input.inputText !== null && {\n            inputText: input.inputText\n          }), input.requestAttributes !== undefined && input.requestAttributes !== null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionAttributes !== undefined && input.sessionAttributes !== null && {\n            sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSessionCommand = function serializeAws_restJson1PutSessionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/json\"\n          }, isSerializableHeaderValue(input.accept) && {\n            accept: input.accept\n          });\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.activeContexts !== undefined && input.activeContexts !== null && {\n            activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n          }), input.dialogAction !== undefined && input.dialogAction !== null && {\n            dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context)\n          }), input.recentIntentSummaryView !== undefined && input.recentIntentSummaryView !== null && {\n            recentIntentSummaryView: serializeAws_restJson1IntentSummaryList(input.recentIntentSummaryView, context)\n          }), input.sessionAttributes !== undefined && input.sessionAttributes !== null && {\n            sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSessionCommand = function deserializeAws_restJson1DeleteSessionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            botAlias: undefined,\n            botName: undefined,\n            sessionId: undefined,\n            userId: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.botAlias !== undefined && data.botAlias !== null) {\n            contents.botAlias = data.botAlias;\n          }\n\n          if (data.botName !== undefined && data.botName !== null) {\n            contents.botName = data.botName;\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = data.sessionId;\n          }\n\n          if (data.userId !== undefined && data.userId !== null) {\n            contents.userId = data.userId;\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSessionCommandError = function deserializeAws_restJson1DeleteSessionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSessionCommand = function deserializeAws_restJson1GetSessionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            activeContexts: undefined,\n            dialogAction: undefined,\n            recentIntentSummaryView: undefined,\n            sessionAttributes: undefined,\n            sessionId: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.activeContexts !== undefined && data.activeContexts !== null) {\n            contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n          }\n\n          if (data.dialogAction !== undefined && data.dialogAction !== null) {\n            contents.dialogAction = deserializeAws_restJson1DialogAction(data.dialogAction, context);\n          }\n\n          if (data.recentIntentSummaryView !== undefined && data.recentIntentSummaryView !== null) {\n            contents.recentIntentSummaryView = deserializeAws_restJson1IntentSummaryList(data.recentIntentSummaryView, context);\n          }\n\n          if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n            contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = data.sessionId;\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSessionCommandError = function deserializeAws_restJson1GetSessionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PostContentCommand = function deserializeAws_restJson1PostContentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1PostContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        activeContexts: undefined,\n        alternativeIntents: undefined,\n        audioStream: undefined,\n        botVersion: undefined,\n        contentType: undefined,\n        dialogState: undefined,\n        inputTranscript: undefined,\n        intentName: undefined,\n        message: undefined,\n        messageFormat: undefined,\n        nluIntentConfidence: undefined,\n        sentimentResponse: undefined,\n        sessionAttributes: undefined,\n        sessionId: undefined,\n        slotToElicit: undefined,\n        slots: undefined\n      };\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n        contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n      }\n\n      if (output.headers[\"x-amz-lex-nlu-intent-confidence\"] !== undefined) {\n        contents.nluIntentConfidence = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-nlu-intent-confidence\"], \"base64\").toString(\"ascii\"));\n      }\n\n      if (output.headers[\"x-amz-lex-alternative-intents\"] !== undefined) {\n        contents.alternativeIntents = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-alternative-intents\"], \"base64\").toString(\"ascii\"));\n      }\n\n      if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n        contents.slots = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-slots\"], \"base64\").toString(\"ascii\"));\n      }\n\n      if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n        contents.sessionAttributes = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-session-attributes\"], \"base64\").toString(\"ascii\"));\n      }\n\n      if (output.headers[\"x-amz-lex-sentiment\"] !== undefined) {\n        contents.sentimentResponse = output.headers[\"x-amz-lex-sentiment\"];\n      }\n\n      if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n        contents.message = output.headers[\"x-amz-lex-message\"];\n      }\n\n      if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n        contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n      }\n\n      if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n        contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n        contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n      }\n\n      if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n        contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n      }\n\n      if (output.headers[\"x-amz-lex-bot-version\"] !== undefined) {\n        contents.botVersion = output.headers[\"x-amz-lex-bot-version\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      if (output.headers[\"x-amz-lex-active-contexts\"] !== undefined) {\n        contents.activeContexts = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-active-contexts\"], \"base64\").toString(\"ascii\"));\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PostContentCommandError = function deserializeAws_restJson1PostContentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n\n    var _p;\n\n    return __generator(this, function (_q) {\n      switch (_q.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _p = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_p.body = _q.sent(), _p)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"NotAcceptableException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"RequestTimeoutException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.lexruntimeservice#RequestTimeoutException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"UnsupportedMediaTypeException\":\n              return [3\n              /*break*/\n              , 22];\n\n            case \"com.amazonaws.lexruntimeservice#UnsupportedMediaTypeException\":\n              return [3\n              /*break*/\n              , 22];\n          }\n\n          return [3\n          /*break*/\n          , 24];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 22:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)];\n\n        case 23:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 24:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _q.label = 25;\n\n        case 25:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PostTextCommand = function deserializeAws_restJson1PostTextCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PostTextCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            activeContexts: undefined,\n            alternativeIntents: undefined,\n            botVersion: undefined,\n            dialogState: undefined,\n            intentName: undefined,\n            message: undefined,\n            messageFormat: undefined,\n            nluIntentConfidence: undefined,\n            responseCard: undefined,\n            sentimentResponse: undefined,\n            sessionAttributes: undefined,\n            sessionId: undefined,\n            slotToElicit: undefined,\n            slots: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.activeContexts !== undefined && data.activeContexts !== null) {\n            contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n          }\n\n          if (data.alternativeIntents !== undefined && data.alternativeIntents !== null) {\n            contents.alternativeIntents = deserializeAws_restJson1IntentList(data.alternativeIntents, context);\n          }\n\n          if (data.botVersion !== undefined && data.botVersion !== null) {\n            contents.botVersion = data.botVersion;\n          }\n\n          if (data.dialogState !== undefined && data.dialogState !== null) {\n            contents.dialogState = data.dialogState;\n          }\n\n          if (data.intentName !== undefined && data.intentName !== null) {\n            contents.intentName = data.intentName;\n          }\n\n          if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n          }\n\n          if (data.messageFormat !== undefined && data.messageFormat !== null) {\n            contents.messageFormat = data.messageFormat;\n          }\n\n          if (data.nluIntentConfidence !== undefined && data.nluIntentConfidence !== null) {\n            contents.nluIntentConfidence = deserializeAws_restJson1IntentConfidence(data.nluIntentConfidence, context);\n          }\n\n          if (data.responseCard !== undefined && data.responseCard !== null) {\n            contents.responseCard = deserializeAws_restJson1ResponseCard(data.responseCard, context);\n          }\n\n          if (data.sentimentResponse !== undefined && data.sentimentResponse !== null) {\n            contents.sentimentResponse = deserializeAws_restJson1SentimentResponse(data.sentimentResponse, context);\n          }\n\n          if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n            contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = data.sessionId;\n          }\n\n          if (data.slotToElicit !== undefined && data.slotToElicit !== null) {\n            contents.slotToElicit = data.slotToElicit;\n          }\n\n          if (data.slots !== undefined && data.slots !== null) {\n            contents.slots = deserializeAws_restJson1StringMap(data.slots, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PostTextCommandError = function deserializeAws_restJson1PostTextCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutSessionCommand = function deserializeAws_restJson1PutSessionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1PutSessionCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        activeContexts: undefined,\n        audioStream: undefined,\n        contentType: undefined,\n        dialogState: undefined,\n        intentName: undefined,\n        message: undefined,\n        messageFormat: undefined,\n        sessionAttributes: undefined,\n        sessionId: undefined,\n        slotToElicit: undefined,\n        slots: undefined\n      };\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n        contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n        contents.slots = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-slots\"], \"base64\").toString(\"ascii\"));\n      }\n\n      if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n        contents.sessionAttributes = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-session-attributes\"], \"base64\").toString(\"ascii\"));\n      }\n\n      if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n        contents.message = output.headers[\"x-amz-lex-message\"];\n      }\n\n      if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n        contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n      }\n\n      if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n        contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n        contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      if (output.headers[\"x-amz-lex-active-contexts\"] !== undefined) {\n        contents.activeContexts = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-active-contexts\"], \"base64\").toString(\"ascii\"));\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutSessionCommandError = function deserializeAws_restJson1PutSessionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"NotAcceptableException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadGatewayException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadRequestExceptionResponse = function deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"DependencyFailedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalFailureExceptionResponse = function deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalFailureException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n        retryAfterSeconds: undefined\n      };\n\n      if (parsedOutput.headers[\"retry-after\"] !== undefined) {\n        contents.retryAfterSeconds = parsedOutput.headers[\"retry-after\"];\n      }\n\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LoopDetectedExceptionResponse = function deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LoopDetectedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotAcceptableExceptionResponse = function deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotAcceptableException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotFoundExceptionResponse = function deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1RequestTimeoutExceptionResponse = function deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"RequestTimeoutException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = function deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"UnsupportedMediaTypeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1ActiveContext = function serializeAws_restJson1ActiveContext(input, context) {\n  return __assign(__assign(__assign({}, input.name !== undefined && input.name !== null && {\n    name: input.name\n  }), input.parameters !== undefined && input.parameters !== null && {\n    parameters: serializeAws_restJson1ActiveContextParametersMap(input.parameters, context)\n  }), input.timeToLive !== undefined && input.timeToLive !== null && {\n    timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context)\n  });\n};\n\nvar serializeAws_restJson1ActiveContextParametersMap = function serializeAws_restJson1ActiveContextParametersMap(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1ActiveContextsList = function serializeAws_restJson1ActiveContextsList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1ActiveContext(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ActiveContextTimeToLive = function serializeAws_restJson1ActiveContextTimeToLive(input, context) {\n  return __assign(__assign({}, input.timeToLiveInSeconds !== undefined && input.timeToLiveInSeconds !== null && {\n    timeToLiveInSeconds: input.timeToLiveInSeconds\n  }), input.turnsToLive !== undefined && input.turnsToLive !== null && {\n    turnsToLive: input.turnsToLive\n  });\n};\n\nvar serializeAws_restJson1DialogAction = function serializeAws_restJson1DialogAction(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.fulfillmentState !== undefined && input.fulfillmentState !== null && {\n    fulfillmentState: input.fulfillmentState\n  }), input.intentName !== undefined && input.intentName !== null && {\n    intentName: input.intentName\n  }), input.message !== undefined && input.message !== null && {\n    message: input.message\n  }), input.messageFormat !== undefined && input.messageFormat !== null && {\n    messageFormat: input.messageFormat\n  }), input.slotToElicit !== undefined && input.slotToElicit !== null && {\n    slotToElicit: input.slotToElicit\n  }), input.slots !== undefined && input.slots !== null && {\n    slots: serializeAws_restJson1StringMap(input.slots, context)\n  }), input.type !== undefined && input.type !== null && {\n    type: input.type\n  });\n};\n\nvar serializeAws_restJson1IntentSummary = function serializeAws_restJson1IntentSummary(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.checkpointLabel !== undefined && input.checkpointLabel !== null && {\n    checkpointLabel: input.checkpointLabel\n  }), input.confirmationStatus !== undefined && input.confirmationStatus !== null && {\n    confirmationStatus: input.confirmationStatus\n  }), input.dialogActionType !== undefined && input.dialogActionType !== null && {\n    dialogActionType: input.dialogActionType\n  }), input.fulfillmentState !== undefined && input.fulfillmentState !== null && {\n    fulfillmentState: input.fulfillmentState\n  }), input.intentName !== undefined && input.intentName !== null && {\n    intentName: input.intentName\n  }), input.slotToElicit !== undefined && input.slotToElicit !== null && {\n    slotToElicit: input.slotToElicit\n  }), input.slots !== undefined && input.slots !== null && {\n    slots: serializeAws_restJson1StringMap(input.slots, context)\n  });\n};\n\nvar serializeAws_restJson1IntentSummaryList = function serializeAws_restJson1IntentSummaryList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1IntentSummary(entry, context);\n  });\n};\n\nvar serializeAws_restJson1StringMap = function serializeAws_restJson1StringMap(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ActiveContext = function deserializeAws_restJson1ActiveContext(output, context) {\n  return {\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    parameters: output.parameters !== undefined && output.parameters !== null ? deserializeAws_restJson1ActiveContextParametersMap(output.parameters, context) : undefined,\n    timeToLive: output.timeToLive !== undefined && output.timeToLive !== null ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ActiveContextParametersMap = function deserializeAws_restJson1ActiveContextParametersMap(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ActiveContextsList = function deserializeAws_restJson1ActiveContextsList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ActiveContext(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ActiveContextTimeToLive = function deserializeAws_restJson1ActiveContextTimeToLive(output, context) {\n  return {\n    timeToLiveInSeconds: output.timeToLiveInSeconds !== undefined && output.timeToLiveInSeconds !== null ? output.timeToLiveInSeconds : undefined,\n    turnsToLive: output.turnsToLive !== undefined && output.turnsToLive !== null ? output.turnsToLive : undefined\n  };\n};\n\nvar deserializeAws_restJson1Button = function deserializeAws_restJson1Button(output, context) {\n  return {\n    text: output.text !== undefined && output.text !== null ? output.text : undefined,\n    value: output.value !== undefined && output.value !== null ? output.value : undefined\n  };\n};\n\nvar deserializeAws_restJson1DialogAction = function deserializeAws_restJson1DialogAction(output, context) {\n  return {\n    fulfillmentState: output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    messageFormat: output.messageFormat !== undefined && output.messageFormat !== null ? output.messageFormat : undefined,\n    slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined,\n    type: output.type !== undefined && output.type !== null ? output.type : undefined\n  };\n};\n\nvar deserializeAws_restJson1GenericAttachment = function deserializeAws_restJson1GenericAttachment(output, context) {\n  return {\n    attachmentLinkUrl: output.attachmentLinkUrl !== undefined && output.attachmentLinkUrl !== null ? output.attachmentLinkUrl : undefined,\n    buttons: output.buttons !== undefined && output.buttons !== null ? deserializeAws_restJson1listOfButtons(output.buttons, context) : undefined,\n    imageUrl: output.imageUrl !== undefined && output.imageUrl !== null ? output.imageUrl : undefined,\n    subTitle: output.subTitle !== undefined && output.subTitle !== null ? output.subTitle : undefined,\n    title: output.title !== undefined && output.title !== null ? output.title : undefined\n  };\n};\n\nvar deserializeAws_restJson1genericAttachmentList = function deserializeAws_restJson1genericAttachmentList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1GenericAttachment(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1IntentConfidence = function deserializeAws_restJson1IntentConfidence(output, context) {\n  return {\n    score: output.score !== undefined && output.score !== null ? output.score : undefined\n  };\n};\n\nvar deserializeAws_restJson1IntentList = function deserializeAws_restJson1IntentList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1PredictedIntent(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1IntentSummary = function deserializeAws_restJson1IntentSummary(output, context) {\n  return {\n    checkpointLabel: output.checkpointLabel !== undefined && output.checkpointLabel !== null ? output.checkpointLabel : undefined,\n    confirmationStatus: output.confirmationStatus !== undefined && output.confirmationStatus !== null ? output.confirmationStatus : undefined,\n    dialogActionType: output.dialogActionType !== undefined && output.dialogActionType !== null ? output.dialogActionType : undefined,\n    fulfillmentState: output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1IntentSummaryList = function deserializeAws_restJson1IntentSummaryList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1IntentSummary(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1listOfButtons = function deserializeAws_restJson1listOfButtons(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Button(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1PredictedIntent = function deserializeAws_restJson1PredictedIntent(output, context) {\n  return {\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    nluIntentConfidence: output.nluIntentConfidence !== undefined && output.nluIntentConfidence !== null ? deserializeAws_restJson1IntentConfidence(output.nluIntentConfidence, context) : undefined,\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResponseCard = function deserializeAws_restJson1ResponseCard(output, context) {\n  return {\n    contentType: output.contentType !== undefined && output.contentType !== null ? output.contentType : undefined,\n    genericAttachments: output.genericAttachments !== undefined && output.genericAttachments !== null ? deserializeAws_restJson1genericAttachmentList(output.genericAttachments, context) : undefined,\n    version: output.version !== undefined && output.version !== null ? output.version : undefined\n  };\n};\n\nvar deserializeAws_restJson1SentimentResponse = function deserializeAws_restJson1SentimentResponse(output, context) {\n  return {\n    sentimentLabel: output.sentimentLabel !== undefined && output.sentimentLabel !== null ? output.sentimentLabel : undefined,\n    sentimentScore: output.sentimentScore !== undefined && output.sentimentScore !== null ? output.sentimentScore : undefined\n  };\n};\n\nvar deserializeAws_restJson1StringMap = function deserializeAws_restJson1StringMap(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function isSerializableHeaderValue(value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {\n  var findKey = function findKey(object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","LazyJsonString","__LazyJsonString","extendedEncodeURIComponent","__extendedEncodeURIComponent","serializeAws_restJson1DeleteSessionCommand","input","context","headers","resolvedPath","botName","undefined","labelValue","length","Error","replace","botAlias","userId","endpoint","_a","_c","hostname","_b","protocol","port","method","path","body","serializeAws_restJson1GetSessionCommand","query","checkpointLabelFilter","serializeAws_restJson1PostContentCommand","isSerializableHeaderValue","sessionAttributes","Buffer","from","fromObject","toString","requestAttributes","contentType","accept","activeContexts","inputStream","serializeAws_restJson1PostTextCommand","JSON","stringify","__assign","serializeAws_restJson1ActiveContextsList","inputText","serializeAws_restJson1StringMap","serializeAws_restJson1PutSessionCommand","dialogAction","serializeAws_restJson1DialogAction","recentIntentSummaryView","serializeAws_restJson1IntentSummaryList","deserializeAws_restJson1DeleteSessionCommand","output","statusCode","deserializeAws_restJson1DeleteSessionCommandError","contents","$metadata","deserializeMetadata","sessionId","parseBody","data","Promise","resolve","parsedOutput","_h","_j","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1BadRequestExceptionResponse","response","name","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1InternalFailureExceptionResponse","deserializeAws_restJson1LimitExceededExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","parsedBody","code","Code","message","Message","$fault","reject","Object","assign","deserializeAws_restJson1GetSessionCommand","deserializeAws_restJson1GetSessionCommandError","deserializeAws_restJson1ActiveContextsList","deserializeAws_restJson1DialogAction","deserializeAws_restJson1IntentSummaryList","deserializeAws_restJson1StringMap","_g","deserializeAws_restJson1PostContentCommand","deserializeAws_restJson1PostContentCommandError","alternativeIntents","audioStream","botVersion","dialogState","inputTranscript","intentName","messageFormat","nluIntentConfidence","sentimentResponse","slotToElicit","slots","_p","_q","deserializeAws_restJson1BadGatewayExceptionResponse","deserializeAws_restJson1DependencyFailedExceptionResponse","deserializeAws_restJson1LoopDetectedExceptionResponse","deserializeAws_restJson1NotAcceptableExceptionResponse","deserializeAws_restJson1RequestTimeoutExceptionResponse","deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse","deserializeAws_restJson1PostTextCommand","deserializeAws_restJson1PostTextCommandError","responseCard","deserializeAws_restJson1IntentList","deserializeAws_restJson1IntentConfidence","deserializeAws_restJson1ResponseCard","deserializeAws_restJson1SentimentResponse","_l","_m","deserializeAws_restJson1PutSessionCommand","deserializeAws_restJson1PutSessionCommandError","retryAfterSeconds","serializeAws_restJson1ActiveContext","parameters","serializeAws_restJson1ActiveContextParametersMap","timeToLive","serializeAws_restJson1ActiveContextTimeToLive","entries","reduce","acc","key","value","filter","e","map","entry","timeToLiveInSeconds","turnsToLive","fulfillmentState","type","serializeAws_restJson1IntentSummary","checkpointLabel","confirmationStatus","dialogActionType","deserializeAws_restJson1ActiveContext","deserializeAws_restJson1ActiveContextParametersMap","deserializeAws_restJson1ActiveContextTimeToLive","deserializeAws_restJson1Button","text","deserializeAws_restJson1GenericAttachment","attachmentLinkUrl","buttons","deserializeAws_restJson1listOfButtons","imageUrl","subTitle","title","deserializeAws_restJson1genericAttachmentList","score","deserializeAws_restJson1PredictedIntent","deserializeAws_restJson1IntentSummary","genericAttachments","version","sentimentLabel","sentimentScore","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","getOwnPropertyNames","includes","size","encoded","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/client-lex-runtime-service/protocols/Aws_restJson1.ts"],"sourcesContent":["import { DeleteSessionCommandInput, DeleteSessionCommandOutput } from \"../commands/DeleteSessionCommand\";\nimport { GetSessionCommandInput, GetSessionCommandOutput } from \"../commands/GetSessionCommand\";\nimport { PostContentCommandInput, PostContentCommandOutput } from \"../commands/PostContentCommand\";\nimport { PostTextCommandInput, PostTextCommandOutput } from \"../commands/PostTextCommand\";\nimport { PutSessionCommandInput, PutSessionCommandOutput } from \"../commands/PutSessionCommand\";\nimport {\n  ActiveContext,\n  ActiveContextTimeToLive,\n  BadGatewayException,\n  BadRequestException,\n  Button,\n  ConflictException,\n  DependencyFailedException,\n  DialogAction,\n  GenericAttachment,\n  IntentConfidence,\n  IntentSummary,\n  InternalFailureException,\n  LimitExceededException,\n  LoopDetectedException,\n  NotAcceptableException,\n  NotFoundException,\n  PredictedIntent,\n  RequestTimeoutException,\n  ResponseCard,\n  SentimentResponse,\n  UnsupportedMediaTypeException,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  LazyJsonString as __LazyJsonString,\n  SmithyException as __SmithyException,\n  extendedEncodeURIComponent as __extendedEncodeURIComponent,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_restJson1DeleteSessionCommand = async (\n  input: DeleteSessionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n  if (input.botName !== undefined) {\n    const labelValue: string = input.botName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botName.\");\n  }\n  if (input.botAlias !== undefined) {\n    const labelValue: string = input.botAlias;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n  }\n  if (input.userId !== undefined) {\n    const labelValue: string = input.userId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: userId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: userId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSessionCommand = async (\n  input: GetSessionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n  if (input.botName !== undefined) {\n    const labelValue: string = input.botName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botName.\");\n  }\n  if (input.botAlias !== undefined) {\n    const labelValue: string = input.botAlias;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n  }\n  if (input.userId !== undefined) {\n    const labelValue: string = input.userId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: userId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: userId.\");\n  }\n  const query: any = {\n    ...(input.checkpointLabelFilter !== undefined && { checkpointLabelFilter: input.checkpointLabelFilter }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PostContentCommand = async (\n  input: PostContentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/octet-stream\",\n    \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n    ...(isSerializableHeaderValue(input.sessionAttributes) && {\n      \"x-amz-lex-session-attributes\": Buffer.from(__LazyJsonString.fromObject(input.sessionAttributes!)).toString(\n        \"base64\"\n      ),\n    }),\n    ...(isSerializableHeaderValue(input.requestAttributes) && {\n      \"x-amz-lex-request-attributes\": Buffer.from(__LazyJsonString.fromObject(input.requestAttributes!)).toString(\n        \"base64\"\n      ),\n    }),\n    ...(isSerializableHeaderValue(input.contentType) && { \"content-type\": input.contentType! }),\n    ...(isSerializableHeaderValue(input.accept) && { accept: input.accept! }),\n    ...(isSerializableHeaderValue(input.activeContexts) && {\n      \"x-amz-lex-active-contexts\": Buffer.from(__LazyJsonString.fromObject(input.activeContexts!)).toString(\"base64\"),\n    }),\n  };\n  let resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/content\";\n  if (input.botName !== undefined) {\n    const labelValue: string = input.botName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botName.\");\n  }\n  if (input.botAlias !== undefined) {\n    const labelValue: string = input.botAlias;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n  }\n  if (input.userId !== undefined) {\n    const labelValue: string = input.userId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: userId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: userId.\");\n  }\n  let body: any;\n  if (input.inputStream !== undefined) {\n    body = input.inputStream;\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PostTextCommand = async (\n  input: PostTextCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/text\";\n  if (input.botName !== undefined) {\n    const labelValue: string = input.botName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botName.\");\n  }\n  if (input.botAlias !== undefined) {\n    const labelValue: string = input.botAlias;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n  }\n  if (input.userId !== undefined) {\n    const labelValue: string = input.userId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: userId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: userId.\");\n  }\n  let body: any;\n  body = JSON.stringify({\n    ...(input.activeContexts !== undefined &&\n      input.activeContexts !== null && {\n        activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context),\n      }),\n    ...(input.inputText !== undefined && input.inputText !== null && { inputText: input.inputText }),\n    ...(input.requestAttributes !== undefined &&\n      input.requestAttributes !== null && {\n        requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context),\n      }),\n    ...(input.sessionAttributes !== undefined &&\n      input.sessionAttributes !== null && {\n        sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n      }),\n  });\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutSessionCommand = async (\n  input: PutSessionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n    ...(isSerializableHeaderValue(input.accept) && { accept: input.accept! }),\n  };\n  let resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n  if (input.botName !== undefined) {\n    const labelValue: string = input.botName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botName.\");\n  }\n  if (input.botAlias !== undefined) {\n    const labelValue: string = input.botAlias;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n  }\n  if (input.userId !== undefined) {\n    const labelValue: string = input.userId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: userId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: userId.\");\n  }\n  let body: any;\n  body = JSON.stringify({\n    ...(input.activeContexts !== undefined &&\n      input.activeContexts !== null && {\n        activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context),\n      }),\n    ...(input.dialogAction !== undefined &&\n      input.dialogAction !== null && { dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context) }),\n    ...(input.recentIntentSummaryView !== undefined &&\n      input.recentIntentSummaryView !== null && {\n        recentIntentSummaryView: serializeAws_restJson1IntentSummaryList(input.recentIntentSummaryView, context),\n      }),\n    ...(input.sessionAttributes !== undefined &&\n      input.sessionAttributes !== null && {\n        sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n      }),\n  });\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const deserializeAws_restJson1DeleteSessionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSessionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSessionCommandError(output, context);\n  }\n  const contents: DeleteSessionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    botAlias: undefined,\n    botName: undefined,\n    sessionId: undefined,\n    userId: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.botAlias !== undefined && data.botAlias !== null) {\n    contents.botAlias = data.botAlias;\n  }\n  if (data.botName !== undefined && data.botName !== null) {\n    contents.botName = data.botName;\n  }\n  if (data.sessionId !== undefined && data.sessionId !== null) {\n    contents.sessionId = data.sessionId;\n  }\n  if (data.userId !== undefined && data.userId !== null) {\n    contents.userId = data.userId;\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSessionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSessionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimeservice#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalFailureException\":\n    case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSessionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSessionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSessionCommandError(output, context);\n  }\n  const contents: GetSessionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    activeContexts: undefined,\n    dialogAction: undefined,\n    recentIntentSummaryView: undefined,\n    sessionAttributes: undefined,\n    sessionId: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.activeContexts !== undefined && data.activeContexts !== null) {\n    contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n  }\n  if (data.dialogAction !== undefined && data.dialogAction !== null) {\n    contents.dialogAction = deserializeAws_restJson1DialogAction(data.dialogAction, context);\n  }\n  if (data.recentIntentSummaryView !== undefined && data.recentIntentSummaryView !== null) {\n    contents.recentIntentSummaryView = deserializeAws_restJson1IntentSummaryList(data.recentIntentSummaryView, context);\n  }\n  if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n    contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n  }\n  if (data.sessionId !== undefined && data.sessionId !== null) {\n    contents.sessionId = data.sessionId;\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSessionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSessionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalFailureException\":\n    case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PostContentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PostContentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PostContentCommandError(output, context);\n  }\n  const contents: PostContentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    activeContexts: undefined,\n    alternativeIntents: undefined,\n    audioStream: undefined,\n    botVersion: undefined,\n    contentType: undefined,\n    dialogState: undefined,\n    inputTranscript: undefined,\n    intentName: undefined,\n    message: undefined,\n    messageFormat: undefined,\n    nluIntentConfidence: undefined,\n    sentimentResponse: undefined,\n    sessionAttributes: undefined,\n    sessionId: undefined,\n    slotToElicit: undefined,\n    slots: undefined,\n  };\n  if (output.headers[\"content-type\"] !== undefined) {\n    contents.contentType = output.headers[\"content-type\"];\n  }\n  if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n    contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n  }\n  if (output.headers[\"x-amz-lex-nlu-intent-confidence\"] !== undefined) {\n    contents.nluIntentConfidence = new __LazyJsonString(\n      Buffer.from(output.headers[\"x-amz-lex-nlu-intent-confidence\"], \"base64\").toString(\"ascii\")\n    );\n  }\n  if (output.headers[\"x-amz-lex-alternative-intents\"] !== undefined) {\n    contents.alternativeIntents = new __LazyJsonString(\n      Buffer.from(output.headers[\"x-amz-lex-alternative-intents\"], \"base64\").toString(\"ascii\")\n    );\n  }\n  if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n    contents.slots = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-slots\"], \"base64\").toString(\"ascii\"));\n  }\n  if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n    contents.sessionAttributes = new __LazyJsonString(\n      Buffer.from(output.headers[\"x-amz-lex-session-attributes\"], \"base64\").toString(\"ascii\")\n    );\n  }\n  if (output.headers[\"x-amz-lex-sentiment\"] !== undefined) {\n    contents.sentimentResponse = output.headers[\"x-amz-lex-sentiment\"];\n  }\n  if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n    contents.message = output.headers[\"x-amz-lex-message\"];\n  }\n  if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n    contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n  }\n  if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n    contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n  }\n  if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n    contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n  }\n  if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n    contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n  }\n  if (output.headers[\"x-amz-lex-bot-version\"] !== undefined) {\n    contents.botVersion = output.headers[\"x-amz-lex-bot-version\"];\n  }\n  if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n    contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n  }\n  if (output.headers[\"x-amz-lex-active-contexts\"] !== undefined) {\n    contents.activeContexts = new __LazyJsonString(\n      Buffer.from(output.headers[\"x-amz-lex-active-contexts\"], \"base64\").toString(\"ascii\")\n    );\n  }\n  const data: any = output.body;\n  contents.audioStream = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PostContentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PostContentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadGatewayException\":\n    case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n      response = {\n        ...(await deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadRequestException\":\n    case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimeservice#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DependencyFailedException\":\n    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n      response = {\n        ...(await deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalFailureException\":\n    case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LoopDetectedException\":\n    case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n      response = {\n        ...(await deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAcceptableException\":\n    case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n      response = {\n        ...(await deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"RequestTimeoutException\":\n    case \"com.amazonaws.lexruntimeservice#RequestTimeoutException\":\n      response = {\n        ...(await deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedMediaTypeException\":\n    case \"com.amazonaws.lexruntimeservice#UnsupportedMediaTypeException\":\n      response = {\n        ...(await deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PostTextCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PostTextCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PostTextCommandError(output, context);\n  }\n  const contents: PostTextCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    activeContexts: undefined,\n    alternativeIntents: undefined,\n    botVersion: undefined,\n    dialogState: undefined,\n    intentName: undefined,\n    message: undefined,\n    messageFormat: undefined,\n    nluIntentConfidence: undefined,\n    responseCard: undefined,\n    sentimentResponse: undefined,\n    sessionAttributes: undefined,\n    sessionId: undefined,\n    slotToElicit: undefined,\n    slots: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.activeContexts !== undefined && data.activeContexts !== null) {\n    contents.activeContexts = deserializeAws_restJson1ActiveContextsList(data.activeContexts, context);\n  }\n  if (data.alternativeIntents !== undefined && data.alternativeIntents !== null) {\n    contents.alternativeIntents = deserializeAws_restJson1IntentList(data.alternativeIntents, context);\n  }\n  if (data.botVersion !== undefined && data.botVersion !== null) {\n    contents.botVersion = data.botVersion;\n  }\n  if (data.dialogState !== undefined && data.dialogState !== null) {\n    contents.dialogState = data.dialogState;\n  }\n  if (data.intentName !== undefined && data.intentName !== null) {\n    contents.intentName = data.intentName;\n  }\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  if (data.messageFormat !== undefined && data.messageFormat !== null) {\n    contents.messageFormat = data.messageFormat;\n  }\n  if (data.nluIntentConfidence !== undefined && data.nluIntentConfidence !== null) {\n    contents.nluIntentConfidence = deserializeAws_restJson1IntentConfidence(data.nluIntentConfidence, context);\n  }\n  if (data.responseCard !== undefined && data.responseCard !== null) {\n    contents.responseCard = deserializeAws_restJson1ResponseCard(data.responseCard, context);\n  }\n  if (data.sentimentResponse !== undefined && data.sentimentResponse !== null) {\n    contents.sentimentResponse = deserializeAws_restJson1SentimentResponse(data.sentimentResponse, context);\n  }\n  if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n    contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n  }\n  if (data.sessionId !== undefined && data.sessionId !== null) {\n    contents.sessionId = data.sessionId;\n  }\n  if (data.slotToElicit !== undefined && data.slotToElicit !== null) {\n    contents.slotToElicit = data.slotToElicit;\n  }\n  if (data.slots !== undefined && data.slots !== null) {\n    contents.slots = deserializeAws_restJson1StringMap(data.slots, context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PostTextCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PostTextCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadGatewayException\":\n    case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n      response = {\n        ...(await deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadRequestException\":\n    case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimeservice#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DependencyFailedException\":\n    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n      response = {\n        ...(await deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalFailureException\":\n    case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LoopDetectedException\":\n    case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n      response = {\n        ...(await deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutSessionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSessionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutSessionCommandError(output, context);\n  }\n  const contents: PutSessionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    activeContexts: undefined,\n    audioStream: undefined,\n    contentType: undefined,\n    dialogState: undefined,\n    intentName: undefined,\n    message: undefined,\n    messageFormat: undefined,\n    sessionAttributes: undefined,\n    sessionId: undefined,\n    slotToElicit: undefined,\n    slots: undefined,\n  };\n  if (output.headers[\"content-type\"] !== undefined) {\n    contents.contentType = output.headers[\"content-type\"];\n  }\n  if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n    contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n  }\n  if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n    contents.slots = new __LazyJsonString(Buffer.from(output.headers[\"x-amz-lex-slots\"], \"base64\").toString(\"ascii\"));\n  }\n  if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n    contents.sessionAttributes = new __LazyJsonString(\n      Buffer.from(output.headers[\"x-amz-lex-session-attributes\"], \"base64\").toString(\"ascii\")\n    );\n  }\n  if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n    contents.message = output.headers[\"x-amz-lex-message\"];\n  }\n  if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n    contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n  }\n  if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n    contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n  }\n  if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n    contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n  }\n  if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n    contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n  }\n  if (output.headers[\"x-amz-lex-active-contexts\"] !== undefined) {\n    contents.activeContexts = new __LazyJsonString(\n      Buffer.from(output.headers[\"x-amz-lex-active-contexts\"], \"base64\").toString(\"ascii\")\n    );\n  }\n  const data: any = output.body;\n  contents.audioStream = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutSessionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSessionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadGatewayException\":\n    case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n      response = {\n        ...(await deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadRequestException\":\n    case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.lexruntimeservice#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DependencyFailedException\":\n    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n      response = {\n        ...(await deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalFailureException\":\n    case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAcceptableException\":\n    case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n      response = {\n        ...(await deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_restJson1BadGatewayExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadGatewayException> => {\n  const contents: BadGatewayException = {\n    name: \"BadGatewayException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1BadRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadRequestException> => {\n  const contents: BadRequestException = {\n    name: \"BadRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1DependencyFailedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DependencyFailedException> => {\n  const contents: DependencyFailedException = {\n    name: \"DependencyFailedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1InternalFailureExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalFailureException> => {\n  const contents: InternalFailureException = {\n    name: \"InternalFailureException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n    retryAfterSeconds: undefined,\n  };\n  if (parsedOutput.headers[\"retry-after\"] !== undefined) {\n    contents.retryAfterSeconds = parsedOutput.headers[\"retry-after\"];\n  }\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1LoopDetectedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LoopDetectedException> => {\n  const contents: LoopDetectedException = {\n    name: \"LoopDetectedException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1NotAcceptableExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotAcceptableException> => {\n  const contents: NotAcceptableException = {\n    name: \"NotAcceptableException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1NotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotFoundException> => {\n  const contents: NotFoundException = {\n    name: \"NotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1RequestTimeoutExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<RequestTimeoutException> => {\n  const contents: RequestTimeoutException = {\n    name: \"RequestTimeoutException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnsupportedMediaTypeException> => {\n  const contents: UnsupportedMediaTypeException = {\n    name: \"UnsupportedMediaTypeException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst serializeAws_restJson1ActiveContext = (input: ActiveContext, context: __SerdeContext): any => {\n  return {\n    ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    ...(input.parameters !== undefined &&\n      input.parameters !== null && {\n        parameters: serializeAws_restJson1ActiveContextParametersMap(input.parameters, context),\n      }),\n    ...(input.timeToLive !== undefined &&\n      input.timeToLive !== null && {\n        timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1ActiveContextParametersMap = (\n  input: { [key: string]: string },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1ActiveContextsList = (input: ActiveContext[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1ActiveContext(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ActiveContextTimeToLive = (\n  input: ActiveContextTimeToLive,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.timeToLiveInSeconds !== undefined &&\n      input.timeToLiveInSeconds !== null && { timeToLiveInSeconds: input.timeToLiveInSeconds }),\n    ...(input.turnsToLive !== undefined && input.turnsToLive !== null && { turnsToLive: input.turnsToLive }),\n  };\n};\n\nconst serializeAws_restJson1DialogAction = (input: DialogAction, context: __SerdeContext): any => {\n  return {\n    ...(input.fulfillmentState !== undefined &&\n      input.fulfillmentState !== null && { fulfillmentState: input.fulfillmentState }),\n    ...(input.intentName !== undefined && input.intentName !== null && { intentName: input.intentName }),\n    ...(input.message !== undefined && input.message !== null && { message: input.message }),\n    ...(input.messageFormat !== undefined && input.messageFormat !== null && { messageFormat: input.messageFormat }),\n    ...(input.slotToElicit !== undefined && input.slotToElicit !== null && { slotToElicit: input.slotToElicit }),\n    ...(input.slots !== undefined &&\n      input.slots !== null && { slots: serializeAws_restJson1StringMap(input.slots, context) }),\n    ...(input.type !== undefined && input.type !== null && { type: input.type }),\n  };\n};\n\nconst serializeAws_restJson1IntentSummary = (input: IntentSummary, context: __SerdeContext): any => {\n  return {\n    ...(input.checkpointLabel !== undefined &&\n      input.checkpointLabel !== null && { checkpointLabel: input.checkpointLabel }),\n    ...(input.confirmationStatus !== undefined &&\n      input.confirmationStatus !== null && { confirmationStatus: input.confirmationStatus }),\n    ...(input.dialogActionType !== undefined &&\n      input.dialogActionType !== null && { dialogActionType: input.dialogActionType }),\n    ...(input.fulfillmentState !== undefined &&\n      input.fulfillmentState !== null && { fulfillmentState: input.fulfillmentState }),\n    ...(input.intentName !== undefined && input.intentName !== null && { intentName: input.intentName }),\n    ...(input.slotToElicit !== undefined && input.slotToElicit !== null && { slotToElicit: input.slotToElicit }),\n    ...(input.slots !== undefined &&\n      input.slots !== null && { slots: serializeAws_restJson1StringMap(input.slots, context) }),\n  };\n};\n\nconst serializeAws_restJson1IntentSummaryList = (input: IntentSummary[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1IntentSummary(entry, context);\n    });\n};\n\nconst serializeAws_restJson1StringMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1ActiveContext = (output: any, context: __SerdeContext): ActiveContext => {\n  return {\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    parameters:\n      output.parameters !== undefined && output.parameters !== null\n        ? deserializeAws_restJson1ActiveContextParametersMap(output.parameters, context)\n        : undefined,\n    timeToLive:\n      output.timeToLive !== undefined && output.timeToLive !== null\n        ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ActiveContextParametersMap = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1ActiveContextsList = (output: any, context: __SerdeContext): ActiveContext[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ActiveContext(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ActiveContextTimeToLive = (\n  output: any,\n  context: __SerdeContext\n): ActiveContextTimeToLive => {\n  return {\n    timeToLiveInSeconds:\n      output.timeToLiveInSeconds !== undefined && output.timeToLiveInSeconds !== null\n        ? output.timeToLiveInSeconds\n        : undefined,\n    turnsToLive: output.turnsToLive !== undefined && output.turnsToLive !== null ? output.turnsToLive : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Button = (output: any, context: __SerdeContext): Button => {\n  return {\n    text: output.text !== undefined && output.text !== null ? output.text : undefined,\n    value: output.value !== undefined && output.value !== null ? output.value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1DialogAction = (output: any, context: __SerdeContext): DialogAction => {\n  return {\n    fulfillmentState:\n      output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    messageFormat:\n      output.messageFormat !== undefined && output.messageFormat !== null ? output.messageFormat : undefined,\n    slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n    slots:\n      output.slots !== undefined && output.slots !== null\n        ? deserializeAws_restJson1StringMap(output.slots, context)\n        : undefined,\n    type: output.type !== undefined && output.type !== null ? output.type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GenericAttachment = (output: any, context: __SerdeContext): GenericAttachment => {\n  return {\n    attachmentLinkUrl:\n      output.attachmentLinkUrl !== undefined && output.attachmentLinkUrl !== null\n        ? output.attachmentLinkUrl\n        : undefined,\n    buttons:\n      output.buttons !== undefined && output.buttons !== null\n        ? deserializeAws_restJson1listOfButtons(output.buttons, context)\n        : undefined,\n    imageUrl: output.imageUrl !== undefined && output.imageUrl !== null ? output.imageUrl : undefined,\n    subTitle: output.subTitle !== undefined && output.subTitle !== null ? output.subTitle : undefined,\n    title: output.title !== undefined && output.title !== null ? output.title : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1genericAttachmentList = (output: any, context: __SerdeContext): GenericAttachment[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1GenericAttachment(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1IntentConfidence = (output: any, context: __SerdeContext): IntentConfidence => {\n  return {\n    score: output.score !== undefined && output.score !== null ? output.score : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1IntentList = (output: any, context: __SerdeContext): PredictedIntent[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1PredictedIntent(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1IntentSummary = (output: any, context: __SerdeContext): IntentSummary => {\n  return {\n    checkpointLabel:\n      output.checkpointLabel !== undefined && output.checkpointLabel !== null ? output.checkpointLabel : undefined,\n    confirmationStatus:\n      output.confirmationStatus !== undefined && output.confirmationStatus !== null\n        ? output.confirmationStatus\n        : undefined,\n    dialogActionType:\n      output.dialogActionType !== undefined && output.dialogActionType !== null ? output.dialogActionType : undefined,\n    fulfillmentState:\n      output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n    slots:\n      output.slots !== undefined && output.slots !== null\n        ? deserializeAws_restJson1StringMap(output.slots, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1IntentSummaryList = (output: any, context: __SerdeContext): IntentSummary[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1IntentSummary(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1listOfButtons = (output: any, context: __SerdeContext): Button[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1Button(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1PredictedIntent = (output: any, context: __SerdeContext): PredictedIntent => {\n  return {\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    nluIntentConfidence:\n      output.nluIntentConfidence !== undefined && output.nluIntentConfidence !== null\n        ? deserializeAws_restJson1IntentConfidence(output.nluIntentConfidence, context)\n        : undefined,\n    slots:\n      output.slots !== undefined && output.slots !== null\n        ? deserializeAws_restJson1StringMap(output.slots, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResponseCard = (output: any, context: __SerdeContext): ResponseCard => {\n  return {\n    contentType: output.contentType !== undefined && output.contentType !== null ? output.contentType : undefined,\n    genericAttachments:\n      output.genericAttachments !== undefined && output.genericAttachments !== null\n        ? deserializeAws_restJson1genericAttachmentList(output.genericAttachments, context)\n        : undefined,\n    version: output.version !== undefined && output.version !== null ? output.version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SentimentResponse = (output: any, context: __SerdeContext): SentimentResponse => {\n  return {\n    sentimentLabel:\n      output.sentimentLabel !== undefined && output.sentimentLabel !== null ? output.sentimentLabel : undefined,\n    sentimentScore:\n      output.sentimentScore !== undefined && output.sentimentScore !== null ? output.sentimentScore : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1StringMap = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}