{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport API from '@aws-amplify/api';\nimport { Amplify, ConsoleLogger as Logger, Hub, JS } from '@aws-amplify/core';\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { immerable, produce, setAutoFreeze, enablePatches } from 'immer';\nimport { v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { defaultAuthStrategy, multiAuthStrategy } from '../authModeStrategies';\nimport { isPredicatesAll, ModelPredicateCreator, ModelSortPredicateCreator } from '../predicates';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport { ControlMessage, SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType, AuthModeStrategyType, isNonModelFieldType, isModelFieldType } from '../types';\nimport { DATASTORE, establishRelationAndKeys, exhaustiveCheck, isModelConstructor, monotonicUlidFactory, STORAGE, SYNC, USER, isNullOrUndefined, registerNonModelClass, sortCompareFunction, DeferredCallbackResolver, validatePredicate, mergePatches } from '../util';\nsetAutoFreeze(true);\nenablePatches();\nvar logger = new Logger('DataStore');\nvar ulid = monotonicUlidFactory(Date.now());\nvar isNode = JS.browserOrNode().isNode;\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar schema;\nvar modelNamespaceMap = new WeakMap(); // stores data for crafting the correct update mutation input for a model\n// Patch[] - array of changed fields and metadata\n// PersistentModel - the source model, used for diffing object-type fields\n\nvar modelPatchesMap = new WeakMap();\n\nvar getModelDefinition = function (modelConstructor) {\n  var namespace = modelNamespaceMap.get(modelConstructor);\n  return schema.namespaces[namespace].models[modelConstructor.name];\n};\n\nvar isValidModelConstructor = function (obj) {\n  return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\n\nvar namespaceResolver = function (modelConstructor) {\n  return modelNamespaceMap.get(modelConstructor);\n}; // exporting syncClasses for testing outbox.test.ts\n\n\nexport var syncClasses;\nvar userClasses;\nvar dataStoreClasses;\nvar storageClasses;\n\nvar initSchema = function (userSchema) {\n  var _a;\n\n  if (schema !== undefined) {\n    console.warn('The schema has already been initialized');\n    return userClasses;\n  }\n\n  logger.log('validating schema', {\n    schema: userSchema\n  });\n\n  var internalUserNamespace = __assign({\n    name: USER\n  }, userSchema);\n\n  logger.log('DataStore', 'Init models');\n  userClasses = createTypeClasses(internalUserNamespace);\n  logger.log('DataStore', 'Models initialized');\n  var dataStoreNamespace = getNamespace();\n  var storageNamespace = Storage.getNamespace();\n  var syncNamespace = SyncEngine.getNamespace();\n  dataStoreClasses = createTypeClasses(dataStoreNamespace);\n  storageClasses = createTypeClasses(storageNamespace);\n  syncClasses = createTypeClasses(syncNamespace);\n  schema = {\n    namespaces: (_a = {}, _a[dataStoreNamespace.name] = dataStoreNamespace, _a[internalUserNamespace.name] = internalUserNamespace, _a[storageNamespace.name] = storageNamespace, _a[syncNamespace.name] = syncNamespace, _a),\n    version: userSchema.version\n  };\n  Object.keys(schema.namespaces).forEach(function (namespace) {\n    var e_1, _a;\n\n    var _b = __read(establishRelationAndKeys(schema.namespaces[namespace]), 2),\n        relations = _b[0],\n        keys = _b[1];\n\n    schema.namespaces[namespace].relationships = relations;\n    schema.namespaces[namespace].keys = keys;\n    var modelAssociations = new Map();\n    Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n      var connectedModels = [];\n      Object.values(model.fields).filter(function (field) {\n        return field.association && field.association.connectionType === 'BELONGS_TO' && field.type.model !== model.name;\n      }).forEach(function (field) {\n        return connectedModels.push(field.type.model);\n      });\n      modelAssociations.set(model.name, connectedModels);\n    });\n    var result = new Map();\n    var count = 1000;\n\n    while (true && count > 0) {\n      if (modelAssociations.size === 0) {\n        break;\n      }\n\n      count--;\n\n      if (count === 0) {\n        throw new Error('Models are not topologically sortable. Please verify your schema.');\n      }\n\n      try {\n        for (var _c = (e_1 = void 0, __values(Array.from(modelAssociations.keys()))), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var modelName = _d.value;\n          var parents = modelAssociations.get(modelName);\n\n          if (parents.every(function (x) {\n            return result.has(x);\n          })) {\n            result.set(modelName, parents);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      Array.from(result.keys()).forEach(function (x) {\n        return modelAssociations.delete(x);\n      });\n    }\n\n    schema.namespaces[namespace].modelTopologicalOrdering = result;\n  });\n  return userClasses;\n};\n/* Checks if the schema has been initialized by initSchema().\n *\n * Call this function before accessing schema.\n * Currently this only needs to be called in start() and clear() because all other functions will call start first.\n */\n\n\nvar checkSchemaInitialized = function () {\n  if (schema === undefined) {\n    var message = 'Schema is not initialized. DataStore will not function as expected. This could happen if you have multiple versions of DataStore installed. Please see https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js/#check-for-duplicate-versions';\n    logger.error(message);\n    throw new Error(message);\n  }\n};\n\nvar createTypeClasses = function (namespace) {\n  var classes = {};\n  Object.entries(namespace.models).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        modelName = _b[0],\n        modelDefinition = _b[1];\n\n    var clazz = createModelClass(modelDefinition);\n    classes[modelName] = clazz;\n    modelNamespaceMap.set(clazz, namespace.name);\n  });\n  Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        typeName = _b[0],\n        typeDefinition = _b[1];\n\n    var clazz = createNonModelClass(typeDefinition);\n    classes[typeName] = clazz;\n  });\n  return classes;\n};\n\nvar instancesMetadata = new WeakSet();\n\nfunction modelInstanceCreator(modelConstructor, init) {\n  instancesMetadata.add(init);\n  return new modelConstructor(init);\n}\n\nvar validateModelFields = function (modelDefinition) {\n  return function (k, v) {\n    var fieldDefinition = modelDefinition.fields[k];\n\n    if (fieldDefinition !== undefined) {\n      var type = fieldDefinition.type,\n          isRequired_1 = fieldDefinition.isRequired,\n          isArrayNullable = fieldDefinition.isArrayNullable,\n          name_1 = fieldDefinition.name,\n          isArray = fieldDefinition.isArray;\n\n      if ((!isArray && isRequired_1 || isArray && !isArrayNullable) && (v === null || v === undefined)) {\n        throw new Error(\"Field \" + name_1 + \" is required\");\n      }\n\n      if (isGraphQLScalarType(type)) {\n        var jsType_1 = GraphQLScalarType.getJSType(type);\n        var validateScalar_1 = GraphQLScalarType.getValidationFunction(type);\n\n        if (type === 'AWSJSON') {\n          if (typeof v === jsType_1) {\n            return;\n          }\n\n          if (typeof v === 'string') {\n            try {\n              JSON.parse(v);\n              return;\n            } catch (error) {\n              throw new Error(\"Field \" + name_1 + \" is an invalid JSON object. \" + v);\n            }\n          }\n        }\n\n        if (isArray) {\n          var errorTypeText = jsType_1;\n\n          if (!isRequired_1) {\n            errorTypeText = jsType_1 + \" | null | undefined\";\n          }\n\n          if (!Array.isArray(v) && !isArrayNullable) {\n            throw new Error(\"Field \" + name_1 + \" should be of type [\" + errorTypeText + \"], \" + typeof v + \" received. \" + v);\n          }\n\n          if (!isNullOrUndefined(v) && v.some(function (e) {\n            return isNullOrUndefined(e) ? isRequired_1 : typeof e !== jsType_1;\n          })) {\n            var elemTypes = v.map(function (e) {\n              return e === null ? 'null' : typeof e;\n            }).join(',');\n            throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + errorTypeText + \", [\" + elemTypes + \"] received. \" + v);\n          }\n\n          if (validateScalar_1 && !isNullOrUndefined(v)) {\n            var validationStatus = v.map(function (e) {\n              if (!isNullOrUndefined(e)) {\n                return validateScalar_1(e);\n              } else if (isNullOrUndefined(e) && !isRequired_1) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n\n            if (!validationStatus.every(function (s) {\n              return s;\n            })) {\n              throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + type + \", validation failed for one or more elements. \" + v);\n            }\n          }\n        } else if (!isRequired_1 && v === undefined) {\n          return;\n        } else if (typeof v !== jsType_1 && v !== null) {\n          throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n        } else if (!isNullOrUndefined(v) && validateScalar_1 && !validateScalar_1(v)) {\n          throw new Error(\"Field \" + name_1 + \" should be of type \" + type + \", validation failed. \" + v);\n        }\n      }\n    }\n  };\n};\n\nvar castInstanceType = function (modelDefinition, k, v) {\n  var _a = modelDefinition.fields[k] || {},\n      isArray = _a.isArray,\n      type = _a.type; // attempt to parse stringified JSON\n\n\n  if (typeof v === 'string' && (isArray || type === 'AWSJSON' || isNonModelFieldType(type) || isModelFieldType(type))) {\n    try {\n      return JSON.parse(v);\n    } catch (_b) {// if JSON is invalid, don't throw and let modelValidator handle it\n    }\n  } // cast from numeric representation of boolean to JS boolean\n\n\n  if (typeof v === 'number' && type === 'Boolean') {\n    return Boolean(v);\n  }\n\n  return v;\n};\n\nvar initializeInstance = function (init, modelDefinition, draft) {\n  var modelValidator = validateModelFields(modelDefinition);\n  Object.entries(init).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        k = _b[0],\n        v = _b[1];\n\n    var parsedValue = castInstanceType(modelDefinition, k, v);\n    modelValidator(k, parsedValue);\n    draft[k] = parsedValue;\n  });\n};\n\nvar createModelClass = function (modelDefinition) {\n  var clazz =\n  /** @class */\n  function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, modelDefinition, draft);\n        var modelInstanceMetadata = instancesMetadata.has(init) ? init : {};\n        var _id = modelInstanceMetadata.id,\n            _version = modelInstanceMetadata._version,\n            _lastChangedAt = modelInstanceMetadata._lastChangedAt,\n            _deleted = modelInstanceMetadata._deleted; // instancesIds are set by modelInstanceCreator, it is accessible only internally\n\n        var isInternal = _id !== null && _id !== undefined;\n        var id = isInternal ? _id : modelDefinition.syncable ? uuid4() : ulid();\n\n        if (!isInternal) {\n          checkReadOnlyPropertyOnCreate(draft, modelDefinition);\n        }\n\n        draft.id = id;\n\n        if (modelDefinition.syncable) {\n          draft._version = _version;\n          draft._lastChangedAt = _lastChangedAt;\n          draft._deleted = _deleted;\n        }\n      });\n      return instance;\n    }\n\n    Model.copyOf = function (source, fn) {\n      var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n\n      if (!isValidModelConstructor(modelConstructor)) {\n        var msg = 'The source object is not a valid model';\n        logger.error(msg, {\n          source: source\n        });\n        throw new Error(msg);\n      }\n\n      var patches;\n      var model = produce(source, function (draft) {\n        fn(draft);\n        draft.id = source.id;\n        var modelValidator = validateModelFields(modelDefinition);\n        Object.entries(draft).forEach(function (_a) {\n          var _b = __read(_a, 2),\n              k = _b[0],\n              v = _b[1];\n\n          var parsedValue = castInstanceType(modelDefinition, k, v);\n          modelValidator(k, parsedValue);\n        });\n      }, function (p) {\n        return patches = p;\n      });\n      var hasExistingPatches = modelPatchesMap.has(source);\n\n      if (patches.length || hasExistingPatches) {\n        if (hasExistingPatches) {\n          var _a = __read(modelPatchesMap.get(source), 2),\n              existingPatches = _a[0],\n              existingSource = _a[1];\n\n          var mergedPatches = mergePatches(existingSource, existingPatches, patches);\n          modelPatchesMap.set(model, [mergedPatches, existingSource]);\n          checkReadOnlyPropertyOnUpdate(mergedPatches, modelDefinition);\n        } else {\n          modelPatchesMap.set(model, [patches, source]);\n          checkReadOnlyPropertyOnUpdate(patches, modelDefinition);\n        }\n      }\n\n      return model;\n    }; // \"private\" method (that's hidden via `Setting`) for `withSSRContext` to use\n    // to gain access to `modelInstanceCreator` and `clazz` for persisting IDs from server to client.\n\n\n    Model.fromJSON = function (json) {\n      var _this = this;\n\n      if (Array.isArray(json)) {\n        return json.map(function (init) {\n          return _this.fromJSON(init);\n        });\n      }\n\n      var instance = modelInstanceCreator(clazz, json);\n      var modelValidator = validateModelFields(modelDefinition);\n      Object.entries(instance).forEach(function (_a) {\n        var _b = __read(_a, 2),\n            k = _b[0],\n            v = _b[1];\n\n        modelValidator(k, v);\n      });\n      return instance;\n    };\n\n    return Model;\n  }();\n\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: modelDefinition.name\n  });\n  return clazz;\n};\n\nvar checkReadOnlyPropertyOnCreate = function (draft, modelDefinition) {\n  var modelKeys = Object.keys(draft);\n  var fields = modelDefinition.fields;\n  modelKeys.forEach(function (key) {\n    if (fields[key] && fields[key].isReadOnly) {\n      throw new Error(key + \" is read-only.\");\n    }\n  });\n};\n\nvar checkReadOnlyPropertyOnUpdate = function (patches, modelDefinition) {\n  var patchArray = patches.map(function (p) {\n    return [p.path[0], p.value];\n  });\n  var fields = modelDefinition.fields;\n  patchArray.forEach(function (_a) {\n    var _b = __read(_a, 2),\n        key = _b[0],\n        val = _b[1];\n\n    if (!val || !fields[key]) return;\n\n    if (fields[key].isReadOnly) {\n      throw new Error(key + \" is read-only.\");\n    }\n  });\n};\n\nvar createNonModelClass = function (typeDefinition) {\n  var clazz =\n  /** @class */\n  function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, typeDefinition, draft);\n      });\n      return instance;\n    }\n\n    return Model;\n  }();\n\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: typeDefinition.name\n  });\n  registerNonModelClass(clazz);\n  return clazz;\n};\n\nfunction isQueryOne(obj) {\n  return typeof obj === 'string';\n}\n\nfunction defaultConflictHandler(conflictData) {\n  var localModel = conflictData.localModel,\n      modelConstructor = conflictData.modelConstructor,\n      remoteModel = conflictData.remoteModel;\n  var _version = remoteModel._version;\n  return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), {\n    _version: _version\n  }));\n}\n\nfunction defaultErrorHandler(error) {\n  logger.warn(error);\n}\n\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n  var result;\n\n  switch (namespaceName) {\n    case DATASTORE:\n      result = dataStoreClasses[modelName];\n      break;\n\n    case USER:\n      result = userClasses[modelName];\n      break;\n\n    case SYNC:\n      result = syncClasses[modelName];\n      break;\n\n    case STORAGE:\n      result = storageClasses[modelName];\n      break;\n\n    default:\n      exhaustiveCheck(namespaceName);\n      break;\n  }\n\n  if (isValidModelConstructor(result)) {\n    return result;\n  } else {\n    var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n    logger.error(msg);\n    throw new Error(msg);\n  }\n}\n\nfunction checkSchemaVersion(storage, version) {\n  return __awaiter(this, void 0, void 0, function () {\n    var Setting, modelDefinition;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          Setting = dataStoreClasses.Setting;\n          modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n          return [4\n          /*yield*/\n          , storage.runExclusive(function (s) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var _a, schemaVersionSetting, storedValue;\n\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                      // @ts-ignore Argument of type '\"eq\"' is not assignable to parameter of type 'never'.\n                      return c.key('eq', SETTING_SCHEMA_VERSION);\n                    }), {\n                      page: 0,\n                      limit: 1\n                    })];\n\n                  case 1:\n                    _a = __read.apply(void 0, [_b.sent(), 1]), schemaVersionSetting = _a[0];\n                    if (!(schemaVersionSetting !== undefined && schemaVersionSetting.value !== undefined)) return [3\n                    /*break*/\n                    , 4];\n                    storedValue = JSON.parse(schemaVersionSetting.value);\n                    if (!(storedValue !== version)) return [3\n                    /*break*/\n                    , 3];\n                    return [4\n                    /*yield*/\n                    , s.clear(false)];\n\n                  case 2:\n                    _b.sent();\n\n                    _b.label = 3;\n\n                  case 3:\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 4:\n                    return [4\n                    /*yield*/\n                    , s.save(modelInstanceCreator(Setting, {\n                      key: SETTING_SCHEMA_VERSION,\n                      value: JSON.stringify(version)\n                    }))];\n\n                  case 5:\n                    _b.sent();\n\n                    _b.label = 6;\n\n                  case 6:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          })];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nvar syncSubscription;\n\nfunction getNamespace() {\n  var namespace = {\n    name: DATASTORE,\n    relationships: {},\n    enums: {},\n    nonModels: {},\n    models: {\n      Setting: {\n        name: 'Setting',\n        pluralName: 'Settings',\n        syncable: false,\n        fields: {\n          id: {\n            name: 'id',\n            type: 'ID',\n            isRequired: true,\n            isArray: false\n          },\n          key: {\n            name: 'key',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          },\n          value: {\n            name: 'value',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          }\n        }\n      }\n    }\n  };\n  return namespace;\n}\n\nvar DataStore =\n/** @class */\nfunction () {\n  function DataStore() {\n    var _this = this; // reference to configured category instances. Used for preserving SSR context\n\n\n    this.Auth = Auth;\n    this.API = API;\n    this.Cache = Cache;\n    this.amplifyConfig = {};\n    this.syncPredicates = new WeakMap(); // object that gets passed to descendent classes. Allows us to pass these down by reference\n\n    this.amplifyContext = {\n      Auth: this.Auth,\n      API: this.API,\n      Cache: this.Cache\n    };\n\n    this.start = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var aws_appsync_graphqlEndpoint, _a, fullSyncIntervalInMilliseconds;\n\n        var _this = this;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!(this.initialized === undefined)) return [3\n              /*break*/\n              , 1];\n              logger.debug('Starting DataStore');\n              this.initialized = new Promise(function (res, rej) {\n                _this.initResolve = res;\n                _this.initReject = rej;\n              });\n              return [3\n              /*break*/\n              , 3];\n\n            case 1:\n              return [4\n              /*yield*/\n              , this.initialized];\n\n            case 2:\n              _b.sent();\n\n              return [2\n              /*return*/\n              ];\n\n            case 3:\n              this.storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, this.storageAdapter, this.sessionId);\n              return [4\n              /*yield*/\n              , this.storage.init()];\n\n            case 4:\n              _b.sent();\n\n              checkSchemaInitialized();\n              return [4\n              /*yield*/\n              , checkSchemaVersion(this.storage, schema.version)];\n\n            case 5:\n              _b.sent();\n\n              aws_appsync_graphqlEndpoint = this.amplifyConfig.aws_appsync_graphqlEndpoint;\n              if (!aws_appsync_graphqlEndpoint) return [3\n              /*break*/\n              , 7];\n              logger.debug('GraphQL endpoint available', aws_appsync_graphqlEndpoint);\n              _a = this;\n              return [4\n              /*yield*/\n              , this.processSyncExpressions()];\n\n            case 6:\n              _a.syncPredicates = _b.sent();\n              this.sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, this.storage, modelInstanceCreator, this.conflictHandler, this.errorHandler, this.syncPredicates, this.amplifyConfig, this.authModeStrategy, this.amplifyContext);\n              fullSyncIntervalInMilliseconds = this.fullSyncInterval * 1000 * 60;\n              syncSubscription = this.sync.start({\n                fullSyncInterval: fullSyncIntervalInMilliseconds\n              }).subscribe({\n                next: function (_a) {\n                  var type = _a.type,\n                      data = _a.data; // In Node, we need to wait for queries to be synced to prevent returning empty arrays.\n                  // In the Browser, we can begin returning data once subscriptions are in place.\n\n                  var readyType = isNode ? ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY : ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED;\n\n                  if (type === readyType) {\n                    _this.initResolve();\n                  }\n\n                  Hub.dispatch('datastore', {\n                    event: type,\n                    data: data\n                  });\n                },\n                error: function (err) {\n                  logger.warn('Sync error', err);\n\n                  _this.initReject();\n                }\n              });\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              logger.warn(\"Data won't be synchronized. No GraphQL endpoint configured. Did you forget `Amplify.configure(awsconfig)`?\", {\n                config: this.amplifyConfig\n              });\n              this.initResolve();\n              _b.label = 8;\n\n            case 8:\n              return [4\n              /*yield*/\n              , this.initialized];\n\n            case 9:\n              _b.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.query = function (modelConstructor, idOrCriteria, paginationProducer) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var msg, modelDefinition, predicate, pagination, result;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _a.sent(); //#region Input validation\n\n\n              if (!isValidModelConstructor(modelConstructor)) {\n                msg = 'Constructor is not for a valid model';\n                logger.error(msg, {\n                  modelConstructor: modelConstructor\n                });\n                throw new Error(msg);\n              }\n\n              if (typeof idOrCriteria === 'string') {\n                if (paginationProducer !== undefined) {\n                  logger.warn('Pagination is ignored when querying by id');\n                }\n              }\n\n              modelDefinition = getModelDefinition(modelConstructor);\n\n              if (isQueryOne(idOrCriteria)) {\n                predicate = ModelPredicateCreator.createForId(modelDefinition, idOrCriteria);\n              } else {\n                if (isPredicatesAll(idOrCriteria)) {\n                  // Predicates.ALL means \"all records\", so no predicate (undefined)\n                  predicate = undefined;\n                } else {\n                  predicate = ModelPredicateCreator.createFromExisting(modelDefinition, idOrCriteria);\n                }\n              }\n\n              pagination = this.processPagination(modelDefinition, paginationProducer); //#endregion\n\n              logger.debug('params ready', {\n                modelConstructor: modelConstructor,\n                predicate: ModelPredicateCreator.getPredicates(predicate, false),\n                pagination: __assign(__assign({}, pagination), {\n                  sort: ModelSortPredicateCreator.getPredicates(pagination && pagination.sort, false)\n                })\n              });\n              return [4\n              /*yield*/\n              , this.storage.query(modelConstructor, predicate, pagination)];\n\n            case 2:\n              result = _a.sent();\n              return [2\n              /*return*/\n              , isQueryOne(idOrCriteria) ? result[0] : result];\n          }\n        });\n      });\n    };\n\n    this.save = function (model, condition) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var patchesTuple, modelConstructor, msg, modelDefinition, producedCondition, _a, savedModel;\n\n        var _this = this;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _b.sent();\n\n              patchesTuple = modelPatchesMap.get(model);\n              modelConstructor = model ? model.constructor : undefined;\n\n              if (!isValidModelConstructor(modelConstructor)) {\n                msg = 'Object is not an instance of a valid model';\n                logger.error(msg, {\n                  model: model\n                });\n                throw new Error(msg);\n              }\n\n              modelDefinition = getModelDefinition(modelConstructor);\n              producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n              return [4\n              /*yield*/\n              , this.storage.runExclusive(function (s) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , s.save(model, producedCondition, undefined, patchesTuple)];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        , s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                    }\n                  });\n                });\n              })];\n\n            case 2:\n              _a = __read.apply(void 0, [_b.sent(), 1]), savedModel = _a[0];\n              return [2\n              /*return*/\n              , savedModel];\n          }\n        });\n      });\n    };\n\n    this.setConflictHandler = function (config) {\n      var configDataStore = config.DataStore;\n\n      var conflictHandlerIsDefault = function () {\n        return _this.conflictHandler === defaultConflictHandler;\n      };\n\n      if (configDataStore && configDataStore.conflictHandler) {\n        return configDataStore.conflictHandler;\n      }\n\n      if (conflictHandlerIsDefault() && config.conflictHandler) {\n        return config.conflictHandler;\n      }\n\n      return _this.conflictHandler || defaultConflictHandler;\n    };\n\n    this.setErrorHandler = function (config) {\n      var configDataStore = config.DataStore;\n\n      var errorHandlerIsDefault = function () {\n        return _this.errorHandler === defaultErrorHandler;\n      };\n\n      if (configDataStore && configDataStore.errorHandler) {\n        return configDataStore.errorHandler;\n      }\n\n      if (errorHandlerIsDefault() && config.errorHandler) {\n        return config.errorHandler;\n      }\n\n      return _this.errorHandler || defaultErrorHandler;\n    };\n\n    this.delete = function (modelOrConstructor, idOrCriteria) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var condition, msg, modelConstructor, msg, msg, _a, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, _b, _c, deleted;\n\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _d.sent();\n\n              if (!modelOrConstructor) {\n                msg = 'Model or Model Constructor required';\n                logger.error(msg, {\n                  modelOrConstructor: modelOrConstructor\n                });\n                throw new Error(msg);\n              }\n\n              if (!isValidModelConstructor(modelOrConstructor)) return [3\n              /*break*/\n              , 3];\n              modelConstructor = modelOrConstructor;\n\n              if (!idOrCriteria) {\n                msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n                logger.error(msg, {\n                  idOrCriteria: idOrCriteria\n                });\n                throw new Error(msg);\n              }\n\n              if (typeof idOrCriteria === 'string') {\n                condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n              } else {\n                condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor),\n                /**\n                 * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n                 * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n                 */\n                idOrCriteria);\n\n                if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n                  msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n                  logger.error(msg, {\n                    condition: condition\n                  });\n                  throw new Error(msg);\n                }\n              }\n\n              return [4\n              /*yield*/\n              , this.storage.delete(modelConstructor, condition)];\n\n            case 2:\n              _a = __read.apply(void 0, [_d.sent(), 1]), deleted = _a[0];\n              return [2\n              /*return*/\n              , deleted];\n\n            case 3:\n              model = modelOrConstructor;\n              modelConstructor = Object.getPrototypeOf(model || {}).constructor;\n\n              if (!isValidModelConstructor(modelConstructor)) {\n                msg = 'Object is not an instance of a valid model';\n                logger.error(msg, {\n                  model: model\n                });\n                throw new Error(msg);\n              }\n\n              modelDefinition = getModelDefinition(modelConstructor);\n              idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n\n              if (idOrCriteria) {\n                if (typeof idOrCriteria !== 'function') {\n                  msg = 'Invalid criteria';\n                  logger.error(msg, {\n                    idOrCriteria: idOrCriteria\n                  });\n                  throw new Error(msg);\n                }\n\n                condition = idOrCriteria(idPredicate);\n              } else {\n                condition = idPredicate;\n              }\n\n              return [4\n              /*yield*/\n              , this.storage.delete(model, condition)];\n\n            case 4:\n              _b = __read.apply(void 0, [_d.sent(), 1]), _c = __read(_b[0], 1), deleted = _c[0];\n              return [2\n              /*return*/\n              , deleted];\n          }\n        });\n      });\n    };\n\n    this.observe = function (modelOrConstructor, idOrCriteria) {\n      var predicate;\n      var modelConstructor = modelOrConstructor && isValidModelConstructor(modelOrConstructor) ? modelOrConstructor : undefined;\n\n      if (modelOrConstructor && modelConstructor === undefined) {\n        var model = modelOrConstructor;\n        var modelConstructor_1 = model && Object.getPrototypeOf(model).constructor;\n\n        if (isValidModelConstructor(modelConstructor_1)) {\n          if (idOrCriteria) {\n            logger.warn('idOrCriteria is ignored when using a model instance', {\n              model: model,\n              idOrCriteria: idOrCriteria\n            });\n          }\n\n          return _this.observe(modelConstructor_1, model.id);\n        } else {\n          var msg = 'The model is not an instance of a PersistentModelConstructor';\n          logger.error(msg, {\n            model: model\n          });\n          throw new Error(msg);\n        }\n      }\n\n      if (idOrCriteria !== undefined && modelConstructor === undefined) {\n        var msg = 'Cannot provide criteria without a modelConstructor';\n        logger.error(msg, idOrCriteria);\n        throw new Error(msg);\n      }\n\n      if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n        var msg = 'Constructor is not for a valid model';\n        logger.error(msg, {\n          modelConstructor: modelConstructor\n        });\n        throw new Error(msg);\n      }\n\n      if (typeof idOrCriteria === 'string') {\n        predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n      } else {\n        predicate = modelConstructor && ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n      }\n\n      return new Observable(function (observer) {\n        var handle;\n\n        (function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.start()];\n\n                case 1:\n                  _a.sent(); // Filter the events returned by Storage according to namespace,\n                  // append original element data, and subscribe to the observable\n\n\n                  handle = this.storage.observe(modelConstructor, predicate).filter(function (_a) {\n                    var model = _a.model;\n                    return namespaceResolver(model) === USER;\n                  }).subscribe({\n                    next: function (item) {\n                      return __awaiter(_this, void 0, void 0, function () {\n                        var message, freshElement;\n                        return __generator(this, function (_a) {\n                          switch (_a.label) {\n                            case 0:\n                              message = item;\n                              if (!(item.opType !== 'DELETE')) return [3\n                              /*break*/\n                              , 2];\n                              return [4\n                              /*yield*/\n                              , this.query(item.model, item.element.id)];\n\n                            case 1:\n                              freshElement = _a.sent();\n                              message = __assign(__assign({}, message), {\n                                element: freshElement\n                              });\n                              _a.label = 2;\n\n                            case 2:\n                              observer.next(message);\n                              return [2\n                              /*return*/\n                              ];\n                          }\n                        });\n                      });\n                    },\n                    error: function (err) {\n                      return observer.error(err);\n                    },\n                    complete: function () {\n                      return observer.complete();\n                    }\n                  });\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })();\n\n        return function () {\n          if (handle) {\n            handle.unsubscribe();\n          }\n        };\n      });\n    };\n\n    this.observeQuery = function (model, criteria, options) {\n      return new Observable(function (observer) {\n        var items = new Map();\n        var itemsChanged = new Map();\n        var deletedItemIds = [];\n        var handle;\n        var predicate;\n        /**\n         * As the name suggests, this geneates a snapshot in the form of\n         * \t`{items: T[], isSynced: boolean}`\n         * and sends it to the observer.\n         *\n         * SIDE EFFECT: The underlying generation and emission methods may touch:\n         * `items`, `itemsChanged`, and `deletedItemIds`.\n         *\n         * Refer to `generateSnapshot` and `emitSnapshot` for more details.\n         */\n\n        var generateAndEmitSnapshot = function () {\n          var snapshot = generateSnapshot();\n          emitSnapshot(snapshot);\n        }; // a mechanism to return data after X amount of seconds OR after the\n        // \"limit\" (itemsChanged >= this.syncPageSize) has been reached, whichever comes first\n\n\n        var limitTimerRace = new DeferredCallbackResolver({\n          callback: generateAndEmitSnapshot,\n          errorHandler: observer.error,\n          maxInterval: 2000\n        });\n        var sort = (options || {}).sort;\n        var sortOptions = sort ? {\n          sort: sort\n        } : undefined;\n        var modelDefinition = getModelDefinition(model);\n\n        if (isQueryOne(criteria)) {\n          predicate = ModelPredicateCreator.createForId(modelDefinition, criteria);\n        } else {\n          if (isPredicatesAll(criteria)) {\n            // Predicates.ALL means \"all records\", so no predicate (undefined)\n            predicate = undefined;\n          } else {\n            predicate = ModelPredicateCreator.createFromExisting(modelDefinition, criteria);\n          }\n        }\n\n        var _a = ModelPredicateCreator.getPredicates(predicate, false) || {},\n            predicates = _a.predicates,\n            predicateGroupType = _a.type;\n\n        var hasPredicate = !!predicates;\n\n        (function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var err_1;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n\n                  return [4\n                  /*yield*/\n                  , this.query(model, criteria, sortOptions)];\n\n                case 1:\n                  // first, query and return any locally-available records\n                  _a.sent().forEach(function (item) {\n                    return items.set(item.id, item);\n                  }); // Observe the model and send a stream of updates (debounced).\n                  // We need to post-filter results instead of passing criteria through\n                  // to have visibility into items that move from in-set to out-of-set.\n                  // We need to explicitly remove those items from the existing snapshot.\n\n\n                  handle = this.observe(model).subscribe(function (_a) {\n                    var element = _a.element,\n                        model = _a.model,\n                        opType = _a.opType;\n\n                    var _b, _c;\n\n                    if (hasPredicate && !validatePredicate(element, predicateGroupType, predicates)) {\n                      if (opType === 'UPDATE' && (items.has(element.id) || itemsChanged.has(element.id))) {\n                        // tracking as a \"deleted item\" will include the item in\n                        // page limit calculations and ensure it is removed from the\n                        // final items collection, regardless of which collection(s)\n                        // it is currently in. (I mean, it could be in both, right!?)\n                        deletedItemIds.push(element.id);\n                      } else {\n                        // ignore updates for irrelevant/filtered items.\n                        return;\n                      }\n                    } // Flag items which have been recently deleted\n                    // NOTE: Merging of separate operations to the same model instance is handled upstream\n                    // in the `mergePage` method within src/sync/merger.ts. The final state of a model instance\n                    // depends on the LATEST record (for a given id).\n\n\n                    if (opType === 'DELETE') {\n                      deletedItemIds.push(element.id);\n                    } else {\n                      itemsChanged.set(element.id, element);\n                    }\n\n                    var isSynced = (_c = (_b = _this.sync) === null || _b === void 0 ? void 0 : _b.getModelSyncedStatus(model)) !== null && _c !== void 0 ? _c : false;\n                    var limit = itemsChanged.size - deletedItemIds.length >= _this.syncPageSize;\n\n                    if (limit || isSynced) {\n                      limitTimerRace.resolve();\n                    } // kicks off every subsequent race as results sync down\n\n\n                    limitTimerRace.start();\n                  }); // returns a set of initial/locally-available results\n\n                  generateAndEmitSnapshot();\n                  return [3\n                  /*break*/\n                  , 3];\n\n                case 2:\n                  err_1 = _a.sent();\n                  observer.error(err_1);\n                  return [3\n                  /*break*/\n                  , 3];\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })();\n        /**\n         * Combines the `items`, `itemsChanged`, and `deletedItemIds` collections into\n         * a snapshot in the form of `{ items: T[], isSynced: boolean}`.\n         *\n         * SIDE EFFECT: The shared `items` collection is recreated.\n         */\n\n\n        var generateSnapshot = function () {\n          var _a, _b;\n\n          var isSynced = (_b = (_a = _this.sync) === null || _a === void 0 ? void 0 : _a.getModelSyncedStatus(model)) !== null && _b !== void 0 ? _b : false;\n\n          var itemsArray = __spread(Array.from(items.values()), Array.from(itemsChanged.values()));\n\n          if (options === null || options === void 0 ? void 0 : options.sort) {\n            sortItems(itemsArray);\n          }\n\n          items.clear();\n          itemsArray.forEach(function (item) {\n            return items.set(item.id, item);\n          }); // remove deleted items from the final result set\n\n          deletedItemIds.forEach(function (id) {\n            return items.delete(id);\n          });\n          return {\n            items: Array.from(items.values()),\n            isSynced: isSynced\n          };\n        };\n        /**\n         * Emits the list of items to the observer.\n         *\n         * SIDE EFFECT: `itemsChanged` and `deletedItemIds` are cleared to prepare\n         * for the next snapshot.\n         *\n         * @param snapshot The generated items data to emit.\n         */\n\n\n        var emitSnapshot = function (snapshot) {\n          // send the generated snapshot to the primary subscription\n          observer.next(snapshot); // reset the changed items sets\n\n          itemsChanged.clear();\n          deletedItemIds = [];\n        };\n        /**\n         * Sorts an `Array` of `T` according to the sort instructions given in the\n         * original  `observeQuery()` call.\n         *\n         * @param itemsToSort A array of model type.\n         */\n\n\n        var sortItems = function (itemsToSort) {\n          var modelDefinition = getModelDefinition(model);\n\n          var pagination = _this.processPagination(modelDefinition, options);\n\n          var sortPredicates = ModelSortPredicateCreator.getPredicates(pagination.sort);\n\n          if (sortPredicates.length) {\n            var compareFn = sortCompareFunction(sortPredicates);\n            itemsToSort.sort(compareFn);\n          }\n        };\n        /**\n         * Force one last snapshot when the model is fully synced.\n         *\n         * This reduces latency for that last snapshot, which will otherwise\n         * wait for the configured timeout.\n         *\n         * @param payload The payload from the Hub event.\n         */\n\n\n        var hubCallback = function (_a) {\n          var payload = _a.payload;\n\n          var _b;\n\n          var event = payload.event,\n              data = payload.data;\n\n          if (event === ControlMessage.SYNC_ENGINE_MODEL_SYNCED && ((_b = data === null || data === void 0 ? void 0 : data.model) === null || _b === void 0 ? void 0 : _b.name) === model.name) {\n            generateAndEmitSnapshot();\n            Hub.remove('api', hubCallback);\n          }\n        };\n\n        Hub.listen('datastore', hubCallback);\n        return function () {\n          if (handle) {\n            handle.unsubscribe();\n          }\n        };\n      });\n    };\n\n    this.configure = function (config) {\n      if (config === void 0) {\n        config = {};\n      }\n\n      _this.amplifyContext.Auth = _this.Auth;\n      _this.amplifyContext.API = _this.API;\n      _this.amplifyContext.Cache = _this.Cache;\n\n      var configDataStore = config.DataStore,\n          configAuthModeStrategyType = config.authModeStrategyType,\n          configConflictHandler = config.conflictHandler,\n          configErrorHandler = config.errorHandler,\n          configMaxRecordsToSync = config.maxRecordsToSync,\n          configSyncPageSize = config.syncPageSize,\n          configFullSyncInterval = config.fullSyncInterval,\n          configSyncExpressions = config.syncExpressions,\n          configAuthProviders = config.authProviders,\n          configStorageAdapter = config.storageAdapter,\n          configFromAmplify = __rest(config, [\"DataStore\", \"authModeStrategyType\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\", \"syncExpressions\", \"authProviders\", \"storageAdapter\"]);\n\n      _this.amplifyConfig = __assign(__assign({}, configFromAmplify), _this.amplifyConfig);\n      _this.conflictHandler = _this.setConflictHandler(config);\n      _this.errorHandler = _this.setErrorHandler(config);\n      var authModeStrategyType = configDataStore && configDataStore.authModeStrategyType || configAuthModeStrategyType || AuthModeStrategyType.DEFAULT;\n\n      switch (authModeStrategyType) {\n        case AuthModeStrategyType.MULTI_AUTH:\n          _this.authModeStrategy = multiAuthStrategy(_this.amplifyContext);\n          break;\n\n        case AuthModeStrategyType.DEFAULT:\n          _this.authModeStrategy = defaultAuthStrategy;\n          break;\n\n        default:\n          _this.authModeStrategy = defaultAuthStrategy;\n          break;\n      } // store on config object, so that Sync, Subscription, and Mutation processors can have access\n\n\n      _this.amplifyConfig.authProviders = configDataStore && configDataStore.authProviders || configAuthProviders;\n      _this.syncExpressions = configDataStore && configDataStore.syncExpressions || configSyncExpressions || _this.syncExpressions;\n      _this.maxRecordsToSync = configDataStore && configDataStore.maxRecordsToSync || configMaxRecordsToSync || _this.maxRecordsToSync || 10000; // store on config object, so that Sync, Subscription, and Mutation processors can have access\n\n      _this.amplifyConfig.maxRecordsToSync = _this.maxRecordsToSync;\n      _this.syncPageSize = configDataStore && configDataStore.syncPageSize || configSyncPageSize || _this.syncPageSize || 1000; // store on config object, so that Sync, Subscription, and Mutation processors can have access\n\n      _this.amplifyConfig.syncPageSize = _this.syncPageSize;\n      _this.fullSyncInterval = configDataStore && configDataStore.fullSyncInterval || configFullSyncInterval || _this.fullSyncInterval || 24 * 60; // 1 day\n\n      _this.storageAdapter = configDataStore && configDataStore.storageAdapter || configStorageAdapter || _this.storageAdapter || undefined;\n      _this.sessionId = _this.retrieveSessionId();\n    };\n\n    this.clear = function clear() {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              checkSchemaInitialized();\n              if (!(this.storage === undefined)) return [3\n              /*break*/\n              , 2]; // connect to storage so that it can be cleared without fully starting DataStore\n\n              this.storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, this.storageAdapter, this.sessionId);\n              return [4\n              /*yield*/\n              , this.storage.init()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              if (syncSubscription && !syncSubscription.closed) {\n                syncSubscription.unsubscribe();\n              }\n\n              return [4\n              /*yield*/\n              , this.storage.clear()];\n\n            case 3:\n              _a.sent();\n\n              if (this.sync) {\n                this.sync.unsubscribeConnectivity();\n              }\n\n              this.initialized = undefined; // Should re-initialize when start() is called.\n\n              this.storage = undefined;\n              this.sync = undefined;\n              this.syncPredicates = new WeakMap();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.stop = function stop() {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(this.initialized !== undefined)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.start()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              if (syncSubscription && !syncSubscription.closed) {\n                syncSubscription.unsubscribe();\n              }\n\n              if (this.sync) {\n                this.sync.unsubscribeConnectivity();\n              }\n\n              this.initialized = undefined; // Should re-initialize when start() is called.\n\n              this.sync = undefined;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  }\n\n  DataStore.prototype.getModuleName = function () {\n    return 'DataStore';\n  };\n\n  DataStore.prototype.processPagination = function (modelDefinition, paginationProducer) {\n    var sortPredicate;\n\n    var _a = paginationProducer || {},\n        limit = _a.limit,\n        page = _a.page,\n        sort = _a.sort;\n\n    if (limit === undefined && page === undefined && sort === undefined) {\n      return undefined;\n    }\n\n    if (page !== undefined && limit === undefined) {\n      throw new Error('Limit is required when requesting a page');\n    }\n\n    if (page !== undefined) {\n      if (typeof page !== 'number') {\n        throw new Error('Page should be a number');\n      }\n\n      if (page < 0) {\n        throw new Error(\"Page can't be negative\");\n      }\n    }\n\n    if (limit !== undefined) {\n      if (typeof limit !== 'number') {\n        throw new Error('Limit should be a number');\n      }\n\n      if (limit < 0) {\n        throw new Error(\"Limit can't be negative\");\n      }\n    }\n\n    if (sort) {\n      sortPredicate = ModelSortPredicateCreator.createFromExisting(modelDefinition, paginationProducer.sort);\n    }\n\n    return {\n      limit: limit,\n      page: page,\n      sort: sortPredicate\n    };\n  };\n\n  DataStore.prototype.processSyncExpressions = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var syncPredicates;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.syncExpressions || !this.syncExpressions.length) {\n              return [2\n              /*return*/\n              , new WeakMap()];\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(this.syncExpressions.map(function (syncExpression) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, modelConstructor, conditionProducer, modelDefinition, condition, predicate;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , syncExpression];\n\n                    case 1:\n                      _a = _b.sent(), modelConstructor = _a.modelConstructor, conditionProducer = _a.conditionProducer;\n                      modelDefinition = getModelDefinition(modelConstructor);\n                      return [4\n                      /*yield*/\n                      , this.unwrapPromise(conditionProducer)];\n\n                    case 2:\n                      condition = _b.sent();\n\n                      if (isPredicatesAll(condition)) {\n                        return [2\n                        /*return*/\n                        , [modelDefinition, null]];\n                      }\n\n                      predicate = this.createFromCondition(modelDefinition, condition);\n                      return [2\n                      /*return*/\n                      , [modelDefinition, predicate]];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            syncPredicates = _a.sent();\n            return [2\n            /*return*/\n            , this.weakMapFromEntries(syncPredicates)];\n        }\n      });\n    });\n  };\n\n  DataStore.prototype.createFromCondition = function (modelDefinition, condition) {\n    try {\n      return ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n    } catch (error) {\n      logger.error('Error creating Sync Predicate');\n      throw error;\n    }\n  };\n\n  DataStore.prototype.unwrapPromise = function (conditionProducer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var condition, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , conditionProducer()];\n\n          case 1:\n            condition = _a.sent();\n            return [2\n            /*return*/\n            , condition];\n\n          case 2:\n            error_1 = _a.sent();\n\n            if (error_1 instanceof TypeError) {\n              return [2\n              /*return*/\n              , conditionProducer];\n            }\n\n            throw error_1;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DataStore.prototype.weakMapFromEntries = function (entries) {\n    return entries.reduce(function (map, _a) {\n      var _b = __read(_a, 2),\n          modelDefinition = _b[0],\n          predicate = _b[1];\n\n      if (map.has(modelDefinition)) {\n        var name_2 = modelDefinition.name;\n        logger.warn(\"You can only utilize one Sync Expression per model.\\n          Subsequent sync expressions for the \" + name_2 + \" model will be ignored.\");\n        return map;\n      }\n\n      if (predicate) {\n        map.set(modelDefinition, predicate);\n      }\n\n      return map;\n    }, new WeakMap());\n  }; // database separation for Amplify Console. Not a public API\n\n\n  DataStore.prototype.retrieveSessionId = function () {\n    try {\n      var sessionId = sessionStorage.getItem('datastoreSessionId');\n\n      if (sessionId) {\n        var aws_appsync_graphqlEndpoint = this.amplifyConfig.aws_appsync_graphqlEndpoint;\n        var appSyncUrl = aws_appsync_graphqlEndpoint.split('/')[2];\n\n        var _a = __read(appSyncUrl.split('.'), 1),\n            appSyncId = _a[0];\n\n        return sessionId + \"-\" + appSyncId;\n      }\n    } catch (_b) {\n      return undefined;\n    }\n  };\n\n  return DataStore;\n}();\n\nvar instance = new DataStore();\nAmplify.register(instance);\nexport { DataStore as DataStoreClass, initSchema, instance as DataStore };","map":{"version":3,"mappings":"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","names":["API","Amplify","ConsoleLogger","Logger","Hub","JS","Auth","Cache","immerable","produce","setAutoFreeze","enablePatches","v4","uuid4","Observable","defaultAuthStrategy","multiAuthStrategy","isPredicatesAll","ModelPredicateCreator","ModelSortPredicateCreator","ExclusiveStorage","Storage","ControlMessage","SyncEngine","GraphQLScalarType","isGraphQLScalarType","AuthModeStrategyType","isNonModelFieldType","isModelFieldType","DATASTORE","establishRelationAndKeys","exhaustiveCheck","isModelConstructor","monotonicUlidFactory","STORAGE","SYNC","USER","isNullOrUndefined","registerNonModelClass","sortCompareFunction","DeferredCallbackResolver","validatePredicate","mergePatches","logger","ulid","Date","now","SETTING_SCHEMA_VERSION","schema","modelNamespaceMap","WeakMap","modelPatchesMap","getModelDefinition","modelConstructor","namespace","get","namespaces","models","name","isValidModelConstructor","obj","has","namespaceResolver","syncClasses","userClasses","dataStoreClasses","storageClasses","initSchema","userSchema","undefined","console","warn","log","internalUserNamespace","createTypeClasses","dataStoreNamespace","getNamespace","storageNamespace","syncNamespace","_a","version","Object","keys","forEach","relations","relationships","modelAssociations","Map","values","connectedModels","model","fields","filter","association","field","connectionType","type","push","set","result","count","size","Error","from","_d","modelName","parents","every","x","Array","delete","modelTopologicalOrdering","checkSchemaInitialized","message","error","classes","entries","_b","modelDefinition","clazz","createModelClass","nonModels","typeName","typeDefinition","createNonModelClass","instancesMetadata","WeakSet","modelInstanceCreator","init","add","validateModelFields","k","v","fieldDefinition","isRequired_1","isArrayNullable","name_1","isArray","jsType_1","getJSType","validateScalar_1","getValidationFunction","JSON","parse","errorTypeText","some","e","elemTypes","map","join","validationStatus","castInstanceType","Boolean","initializeInstance","draft","modelValidator","parsedValue","instance","modelInstanceMetadata","_version","_lastChangedAt","_deleted","isInternal","_id","id","syncable","checkReadOnlyPropertyOnCreate","Model","source","fn","getPrototypeOf","constructor","msg","patches","p","hasExistingPatches","length","existingPatches","existingSource","mergedPatches","checkReadOnlyPropertyOnUpdate","json","fromJSON","defineProperty","value","modelKeys","key","isReadOnly","patchArray","path","val","isQueryOne","defaultConflictHandler","conflictData","remoteModel","__assign","localModel","defaultErrorHandler","getModelConstructorByModelName","namespaceName","checkSchemaVersion","storage","Setting","runExclusive","s","query","createFromExisting","page","limit","schemaVersionSetting","storedValue","clear","save","stringify","syncSubscription","enums","pluralName","isRequired","initialized","debug","Promise","res","rej","_this","initResolve","initReject","storageAdapter","sessionId","aws_appsync_graphqlEndpoint","amplifyConfig","processSyncExpressions","syncPredicates","sync","conflictHandler","errorHandler","authModeStrategy","amplifyContext","fullSyncIntervalInMilliseconds","fullSyncInterval","start","subscribe","next","data","readyType","isNode","SYNC_ENGINE_SYNC_QUERIES_READY","SYNC_ENGINE_STORAGE_SUBSCRIBED","dispatch","event","err","config","idOrCriteria","paginationProducer","predicate","createForId","pagination","processPagination","getPredicates","sort","condition","patchesTuple","producedCondition","savedModel","conflictHandlerIsDefault","configDataStore","errorHandlerIsDefault","modelOrConstructor","isValidPredicate","deleted","idPredicate","_c","modelConstructor_1","observe","handle","item","opType","element","freshElement","observer","complete","unsubscribe","criteria","options","items","itemsChanged","deletedItemIds","generateAndEmitSnapshot","snapshot","generateSnapshot","emitSnapshot","limitTimerRace","callback","maxInterval","sortOptions","predicates","predicateGroupType","hasPredicate","isSynced","getModelSyncedStatus","syncPageSize","resolve","err_1","itemsArray","sortItems","itemsToSort","sortPredicates","compareFn","hubCallback","payload","SYNC_ENGINE_MODEL_SYNCED","remove","listen","configAuthModeStrategyType","configConflictHandler","configErrorHandler","configMaxRecordsToSync","configSyncPageSize","configFullSyncInterval","configSyncExpressions","configAuthProviders","configStorageAdapter","configFromAmplify","setConflictHandler","setErrorHandler","authModeStrategyType","DEFAULT","MULTI_AUTH","authProviders","syncExpressions","maxRecordsToSync","retrieveSessionId","closed","unsubscribeConnectivity","stop","DataStore","sortPredicate","all","syncExpression","conditionProducer","unwrapPromise","createFromCondition","weakMapFromEntries","error_1","TypeError","reduce","name_2","sessionStorage","getItem","appSyncUrl","split","appSyncId","register","DataStoreClass"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/datastore/src/datastore/datastore.ts"],"sourcesContent":["import API from '@aws-amplify/api';\nimport { Amplify, ConsoleLogger as Logger, Hub, JS } from '@aws-amplify/core';\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport {\n\tDraft,\n\timmerable,\n\tproduce,\n\tsetAutoFreeze,\n\tenablePatches,\n\tPatch,\n} from 'immer';\nimport { v4 as uuid4 } from 'uuid';\nimport Observable, { ZenObservable } from 'zen-observable-ts';\nimport { defaultAuthStrategy, multiAuthStrategy } from '../authModeStrategies';\nimport {\n\tisPredicatesAll,\n\tModelPredicateCreator,\n\tModelSortPredicateCreator,\n\tPredicateAll,\n} from '../predicates';\nimport { Adapter } from '../storage/adapter';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport { ControlMessage, SyncEngine } from '../sync';\nimport {\n\tAuthModeStrategy,\n\tConflictHandler,\n\tDataStoreConfig,\n\tGraphQLScalarType,\n\tInternalSchema,\n\tisGraphQLScalarType,\n\tModelFieldType,\n\tModelInit,\n\tModelInstanceMetadata,\n\tModelPredicate,\n\tSortPredicate,\n\tMutableModel,\n\tNamespaceResolver,\n\tNonModelTypeConstructor,\n\tProducerPaginationInput,\n\tPaginationInput,\n\tPersistentModel,\n\tPersistentModelConstructor,\n\tProducerModelPredicate,\n\tSchema,\n\tSchemaModel,\n\tSchemaNamespace,\n\tSchemaNonModel,\n\tSubscriptionMessage,\n\tDataStoreSnapshot,\n\tSyncConflict,\n\tSyncError,\n\tTypeConstructorMap,\n\tErrorHandler,\n\tSyncExpression,\n\tAuthModeStrategyType,\n\tisNonModelFieldType,\n\tisModelFieldType,\n\tObserveQueryOptions,\n\tAmplifyContext,\n} from '../types';\nimport {\n\tDATASTORE,\n\testablishRelationAndKeys,\n\texhaustiveCheck,\n\tisModelConstructor,\n\tmonotonicUlidFactory,\n\tNAMESPACES,\n\tSTORAGE,\n\tSYNC,\n\tUSER,\n\tisNullOrUndefined,\n\tregisterNonModelClass,\n\tsortCompareFunction,\n\tDeferredCallbackResolver,\n\tvalidatePredicate,\n\tmergePatches,\n} from '../util';\n\nsetAutoFreeze(true);\nenablePatches();\n\nconst logger = new Logger('DataStore');\n\nconst ulid = monotonicUlidFactory(Date.now());\nconst { isNode } = JS.browserOrNode();\n\ndeclare class Setting {\n\tconstructor(init: ModelInit<Setting>);\n\tstatic copyOf(\n\t\tsrc: Setting,\n\t\tmutator: (draft: MutableModel<Setting>) => void | Setting\n\t): Setting;\n\tpublic readonly id: string;\n\tpublic readonly key: string;\n\tpublic readonly value: string;\n}\n\nconst SETTING_SCHEMA_VERSION = 'schemaVersion';\n\nlet schema: InternalSchema;\nconst modelNamespaceMap = new WeakMap<\n\tPersistentModelConstructor<any>,\n\tstring\n>();\n// stores data for crafting the correct update mutation input for a model\n// Patch[] - array of changed fields and metadata\n// PersistentModel - the source model, used for diffing object-type fields\nconst modelPatchesMap = new WeakMap<\n\tPersistentModel,\n\t[Patch[], PersistentModel]\n>();\n\nconst getModelDefinition = (\n\tmodelConstructor: PersistentModelConstructor<any>\n) => {\n\tconst namespace = modelNamespaceMap.get(modelConstructor);\n\n\treturn schema.namespaces[namespace].models[modelConstructor.name];\n};\n\nconst isValidModelConstructor = <T extends PersistentModel>(\n\tobj: any\n): obj is PersistentModelConstructor<T> => {\n\treturn isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\n\nconst namespaceResolver: NamespaceResolver = modelConstructor =>\n\tmodelNamespaceMap.get(modelConstructor);\n\n// exporting syncClasses for testing outbox.test.ts\nexport let syncClasses: TypeConstructorMap;\nlet userClasses: TypeConstructorMap;\nlet dataStoreClasses: TypeConstructorMap;\nlet storageClasses: TypeConstructorMap;\n\nconst initSchema = (userSchema: Schema) => {\n\tif (schema !== undefined) {\n\t\tconsole.warn('The schema has already been initialized');\n\n\t\treturn userClasses;\n\t}\n\n\tlogger.log('validating schema', { schema: userSchema });\n\n\tconst internalUserNamespace: SchemaNamespace = {\n\t\tname: USER,\n\t\t...userSchema,\n\t};\n\n\tlogger.log('DataStore', 'Init models');\n\tuserClasses = createTypeClasses(internalUserNamespace);\n\tlogger.log('DataStore', 'Models initialized');\n\n\tconst dataStoreNamespace = getNamespace();\n\tconst storageNamespace = Storage.getNamespace();\n\tconst syncNamespace = SyncEngine.getNamespace();\n\n\tdataStoreClasses = createTypeClasses(dataStoreNamespace);\n\tstorageClasses = createTypeClasses(storageNamespace);\n\tsyncClasses = createTypeClasses(syncNamespace);\n\n\tschema = {\n\t\tnamespaces: {\n\t\t\t[dataStoreNamespace.name]: dataStoreNamespace,\n\t\t\t[internalUserNamespace.name]: internalUserNamespace,\n\t\t\t[storageNamespace.name]: storageNamespace,\n\t\t\t[syncNamespace.name]: syncNamespace,\n\t\t},\n\t\tversion: userSchema.version,\n\t};\n\n\tObject.keys(schema.namespaces).forEach(namespace => {\n\t\tconst [relations, keys] = establishRelationAndKeys(\n\t\t\tschema.namespaces[namespace]\n\t\t);\n\n\t\tschema.namespaces[namespace].relationships = relations;\n\t\tschema.namespaces[namespace].keys = keys;\n\n\t\tconst modelAssociations = new Map<string, string[]>();\n\n\t\tObject.values(schema.namespaces[namespace].models).forEach(model => {\n\t\t\tconst connectedModels: string[] = [];\n\n\t\t\tObject.values(model.fields)\n\t\t\t\t.filter(\n\t\t\t\t\tfield =>\n\t\t\t\t\t\tfield.association &&\n\t\t\t\t\t\tfield.association.connectionType === 'BELONGS_TO' &&\n\t\t\t\t\t\t(<ModelFieldType>field.type).model !== model.name\n\t\t\t\t)\n\t\t\t\t.forEach(field =>\n\t\t\t\t\tconnectedModels.push((<ModelFieldType>field.type).model)\n\t\t\t\t);\n\n\t\t\tmodelAssociations.set(model.name, connectedModels);\n\t\t});\n\n\t\tconst result = new Map<string, string[]>();\n\n\t\tlet count = 1000;\n\t\twhile (true && count > 0) {\n\t\t\tif (modelAssociations.size === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount--;\n\t\t\tif (count === 0) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Models are not topologically sortable. Please verify your schema.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfor (const modelName of Array.from(modelAssociations.keys())) {\n\t\t\t\tconst parents = modelAssociations.get(modelName);\n\n\t\t\t\tif (parents.every(x => result.has(x))) {\n\t\t\t\t\tresult.set(modelName, parents);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tArray.from(result.keys()).forEach(x => modelAssociations.delete(x));\n\t\t}\n\n\t\tschema.namespaces[namespace].modelTopologicalOrdering = result;\n\t});\n\n\treturn userClasses;\n};\n\n/* Checks if the schema has been initialized by initSchema().\n *\n * Call this function before accessing schema.\n * Currently this only needs to be called in start() and clear() because all other functions will call start first.\n */\nconst checkSchemaInitialized = () => {\n\tif (schema === undefined) {\n\t\tconst message =\n\t\t\t'Schema is not initialized. DataStore will not function as expected. This could happen if you have multiple versions of DataStore installed. Please see https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js/#check-for-duplicate-versions';\n\t\tlogger.error(message);\n\t\tthrow new Error(message);\n\t}\n};\n\nconst createTypeClasses: (\n\tnamespace: SchemaNamespace\n) => TypeConstructorMap = namespace => {\n\tconst classes: TypeConstructorMap = {};\n\n\tObject.entries(namespace.models).forEach(([modelName, modelDefinition]) => {\n\t\tconst clazz = createModelClass(modelDefinition);\n\t\tclasses[modelName] = clazz;\n\n\t\tmodelNamespaceMap.set(clazz, namespace.name);\n\t});\n\n\tObject.entries(namespace.nonModels || {}).forEach(\n\t\t([typeName, typeDefinition]) => {\n\t\t\tconst clazz = createNonModelClass(typeDefinition);\n\t\t\tclasses[typeName] = clazz;\n\t\t}\n\t);\n\n\treturn classes;\n};\n\nexport declare type ModelInstanceCreator = typeof modelInstanceCreator;\n\nconst instancesMetadata = new WeakSet<\n\tModelInit<PersistentModel & Partial<ModelInstanceMetadata>>\n>();\nfunction modelInstanceCreator<T extends PersistentModel = PersistentModel>(\n\tmodelConstructor: PersistentModelConstructor<T>,\n\tinit: ModelInit<T> & Partial<ModelInstanceMetadata>\n): T {\n\tinstancesMetadata.add(init);\n\n\treturn <T>new modelConstructor(init);\n}\n\nconst validateModelFields =\n\t(modelDefinition: SchemaModel | SchemaNonModel) => (k: string, v: any) => {\n\t\tconst fieldDefinition = modelDefinition.fields[k];\n\n\t\tif (fieldDefinition !== undefined) {\n\t\t\tconst { type, isRequired, isArrayNullable, name, isArray } =\n\t\t\t\tfieldDefinition;\n\n\t\t\tif (\n\t\t\t\t((!isArray && isRequired) || (isArray && !isArrayNullable)) &&\n\t\t\t\t(v === null || v === undefined)\n\t\t\t) {\n\t\t\t\tthrow new Error(`Field ${name} is required`);\n\t\t\t}\n\n\t\t\tif (isGraphQLScalarType(type)) {\n\t\t\t\tconst jsType = GraphQLScalarType.getJSType(type);\n\t\t\t\tconst validateScalar = GraphQLScalarType.getValidationFunction(type);\n\n\t\t\t\tif (type === 'AWSJSON') {\n\t\t\t\t\tif (typeof v === jsType) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof v === 'string') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tJSON.parse(v);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new Error(`Field ${name} is an invalid JSON object. ${v}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isArray) {\n\t\t\t\t\tlet errorTypeText: string = jsType;\n\t\t\t\t\tif (!isRequired) {\n\t\t\t\t\t\terrorTypeText = `${jsType} | null | undefined`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!Array.isArray(v) && !isArrayNullable) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Field ${name} should be of type [${errorTypeText}], ${typeof v} received. ${v}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isNullOrUndefined(v) &&\n\t\t\t\t\t\t(<[]>v).some(e =>\n\t\t\t\t\t\t\tisNullOrUndefined(e) ? isRequired : typeof e !== jsType\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst elemTypes = (<[]>v)\n\t\t\t\t\t\t\t.map(e => (e === null ? 'null' : typeof e))\n\t\t\t\t\t\t\t.join(',');\n\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`All elements in the ${name} array should be of type ${errorTypeText}, [${elemTypes}] received. ${v}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (validateScalar && !isNullOrUndefined(v)) {\n\t\t\t\t\t\tconst validationStatus = (<[]>v).map(e => {\n\t\t\t\t\t\t\tif (!isNullOrUndefined(e)) {\n\t\t\t\t\t\t\t\treturn validateScalar(e);\n\t\t\t\t\t\t\t} else if (isNullOrUndefined(e) && !isRequired) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (!validationStatus.every(s => s)) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`All elements in the ${name} array should be of type ${type}, validation failed for one or more elements. ${v}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (!isRequired && v === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof v !== jsType && v !== null) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Field ${name} should be of type ${jsType}, ${typeof v} received. ${v}`\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\t!isNullOrUndefined(v) &&\n\t\t\t\t\tvalidateScalar &&\n\t\t\t\t\t!validateScalar(v)\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Field ${name} should be of type ${type}, validation failed. ${v}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\nconst castInstanceType = (\n\tmodelDefinition: SchemaModel | SchemaNonModel,\n\tk: string,\n\tv: any\n) => {\n\tconst { isArray, type } = modelDefinition.fields[k] || {};\n\t// attempt to parse stringified JSON\n\tif (\n\t\ttypeof v === 'string' &&\n\t\t(isArray ||\n\t\t\ttype === 'AWSJSON' ||\n\t\t\tisNonModelFieldType(type) ||\n\t\t\tisModelFieldType(type))\n\t) {\n\t\ttry {\n\t\t\treturn JSON.parse(v);\n\t\t} catch {\n\t\t\t// if JSON is invalid, don't throw and let modelValidator handle it\n\t\t}\n\t}\n\n\t// cast from numeric representation of boolean to JS boolean\n\tif (typeof v === 'number' && type === 'Boolean') {\n\t\treturn Boolean(v);\n\t}\n\n\treturn v;\n};\n\nconst initializeInstance = <T>(\n\tinit: ModelInit<T>,\n\tmodelDefinition: SchemaModel | SchemaNonModel,\n\tdraft: Draft<T & ModelInstanceMetadata>\n) => {\n\tconst modelValidator = validateModelFields(modelDefinition);\n\tObject.entries(init).forEach(([k, v]) => {\n\t\tconst parsedValue = castInstanceType(modelDefinition, k, v);\n\n\t\tmodelValidator(k, parsedValue);\n\t\t(<any>draft)[k] = parsedValue;\n\t});\n};\n\nconst createModelClass = <T extends PersistentModel>(\n\tmodelDefinition: SchemaModel\n) => {\n\tconst clazz = <PersistentModelConstructor<T>>(<unknown>class Model {\n\t\tconstructor(init: ModelInit<T>) {\n\t\t\tconst instance = produce(\n\t\t\t\tthis,\n\t\t\t\t(draft: Draft<T & ModelInstanceMetadata>) => {\n\t\t\t\t\tinitializeInstance(init, modelDefinition, draft);\n\n\t\t\t\t\tconst modelInstanceMetadata: ModelInstanceMetadata =\n\t\t\t\t\t\tinstancesMetadata.has(init)\n\t\t\t\t\t\t\t? <ModelInstanceMetadata>(<unknown>init)\n\t\t\t\t\t\t\t: <ModelInstanceMetadata>{};\n\t\t\t\t\tconst {\n\t\t\t\t\t\tid: _id,\n\t\t\t\t\t\t_version,\n\t\t\t\t\t\t_lastChangedAt,\n\t\t\t\t\t\t_deleted,\n\t\t\t\t\t} = modelInstanceMetadata;\n\n\t\t\t\t\t// instancesIds are set by modelInstanceCreator, it is accessible only internally\n\t\t\t\t\tconst isInternal = _id !== null && _id !== undefined;\n\n\t\t\t\t\tconst id = isInternal\n\t\t\t\t\t\t? _id\n\t\t\t\t\t\t: modelDefinition.syncable\n\t\t\t\t\t\t? uuid4()\n\t\t\t\t\t\t: ulid();\n\n\t\t\t\t\tif (!isInternal) {\n\t\t\t\t\t\tcheckReadOnlyPropertyOnCreate(draft, modelDefinition);\n\t\t\t\t\t}\n\n\t\t\t\t\tdraft.id = id;\n\n\t\t\t\t\tif (modelDefinition.syncable) {\n\t\t\t\t\t\tdraft._version = _version;\n\t\t\t\t\t\tdraft._lastChangedAt = _lastChangedAt;\n\t\t\t\t\t\tdraft._deleted = _deleted;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn instance;\n\t\t}\n\n\t\tstatic copyOf(source: T, fn: (draft: MutableModel<T>) => T) {\n\t\t\tconst modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n\t\t\tif (!isValidModelConstructor(modelConstructor)) {\n\t\t\t\tconst msg = 'The source object is not a valid model';\n\t\t\t\tlogger.error(msg, { source });\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\n\t\t\tlet patches;\n\t\t\tconst model = produce(\n\t\t\t\tsource,\n\t\t\t\tdraft => {\n\t\t\t\t\tfn(<MutableModel<T>>(draft as unknown));\n\t\t\t\t\tdraft.id = source.id;\n\t\t\t\t\tconst modelValidator = validateModelFields(modelDefinition);\n\t\t\t\t\tObject.entries(draft).forEach(([k, v]) => {\n\t\t\t\t\t\tconst parsedValue = castInstanceType(modelDefinition, k, v);\n\n\t\t\t\t\t\tmodelValidator(k, parsedValue);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tp => (patches = p)\n\t\t\t);\n\n\t\t\tconst hasExistingPatches = modelPatchesMap.has(source);\n\t\t\tif (patches.length || hasExistingPatches) {\n\t\t\t\tif (hasExistingPatches) {\n\t\t\t\t\tconst [existingPatches, existingSource] = modelPatchesMap.get(source);\n\t\t\t\t\tconst mergedPatches = mergePatches(\n\t\t\t\t\t\texistingSource,\n\t\t\t\t\t\texistingPatches,\n\t\t\t\t\t\tpatches\n\t\t\t\t\t);\n\t\t\t\t\tmodelPatchesMap.set(model, [mergedPatches, existingSource]);\n\t\t\t\t\tcheckReadOnlyPropertyOnUpdate(mergedPatches, modelDefinition);\n\t\t\t\t} else {\n\t\t\t\t\tmodelPatchesMap.set(model, [patches, source]);\n\t\t\t\t\tcheckReadOnlyPropertyOnUpdate(patches, modelDefinition);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn model;\n\t\t}\n\n\t\t// \"private\" method (that's hidden via `Setting`) for `withSSRContext` to use\n\t\t// to gain access to `modelInstanceCreator` and `clazz` for persisting IDs from server to client.\n\t\tstatic fromJSON(json: T | T[]) {\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\treturn json.map(init => this.fromJSON(init));\n\t\t\t}\n\n\t\t\tconst instance = modelInstanceCreator(clazz, json);\n\t\t\tconst modelValidator = validateModelFields(modelDefinition);\n\n\t\t\tObject.entries(instance).forEach(([k, v]) => {\n\t\t\t\tmodelValidator(k, v);\n\t\t\t});\n\n\t\t\treturn instance;\n\t\t}\n\t});\n\n\tclazz[immerable] = true;\n\n\tObject.defineProperty(clazz, 'name', { value: modelDefinition.name });\n\n\treturn clazz;\n};\n\nconst checkReadOnlyPropertyOnCreate = <T extends PersistentModel>(\n\tdraft: T,\n\tmodelDefinition: SchemaModel\n) => {\n\tconst modelKeys = Object.keys(draft);\n\tconst { fields } = modelDefinition;\n\n\tmodelKeys.forEach(key => {\n\t\tif (fields[key] && fields[key].isReadOnly) {\n\t\t\tthrow new Error(`${key} is read-only.`);\n\t\t}\n\t});\n};\n\nconst checkReadOnlyPropertyOnUpdate = (\n\tpatches: Patch[],\n\tmodelDefinition: SchemaModel\n) => {\n\tconst patchArray = patches.map(p => [p.path[0], p.value]);\n\tconst { fields } = modelDefinition;\n\n\tpatchArray.forEach(([key, val]) => {\n\t\tif (!val || !fields[key]) return;\n\n\t\tif (fields[key].isReadOnly) {\n\t\t\tthrow new Error(`${key} is read-only.`);\n\t\t}\n\t});\n};\n\nconst createNonModelClass = <T>(typeDefinition: SchemaNonModel) => {\n\tconst clazz = <NonModelTypeConstructor<T>>(<unknown>class Model {\n\t\tconstructor(init: ModelInit<T>) {\n\t\t\tconst instance = produce(\n\t\t\t\tthis,\n\t\t\t\t(draft: Draft<T & ModelInstanceMetadata>) => {\n\t\t\t\t\tinitializeInstance(init, typeDefinition, draft);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn instance;\n\t\t}\n\t});\n\n\tclazz[immerable] = true;\n\n\tObject.defineProperty(clazz, 'name', { value: typeDefinition.name });\n\n\tregisterNonModelClass(clazz);\n\n\treturn clazz;\n};\n\nfunction isQueryOne(obj: any): obj is string {\n\treturn typeof obj === 'string';\n}\n\nfunction defaultConflictHandler(conflictData: SyncConflict): PersistentModel {\n\tconst { localModel, modelConstructor, remoteModel } = conflictData;\n\tconst { _version } = remoteModel;\n\treturn modelInstanceCreator(modelConstructor, { ...localModel, _version });\n}\n\nfunction defaultErrorHandler(error: SyncError<PersistentModel>): void {\n\tlogger.warn(error);\n}\n\nfunction getModelConstructorByModelName(\n\tnamespaceName: NAMESPACES,\n\tmodelName: string\n): PersistentModelConstructor<any> {\n\tlet result: PersistentModelConstructor<any> | NonModelTypeConstructor<any>;\n\n\tswitch (namespaceName) {\n\t\tcase DATASTORE:\n\t\t\tresult = dataStoreClasses[modelName];\n\t\t\tbreak;\n\t\tcase USER:\n\t\t\tresult = userClasses[modelName];\n\t\t\tbreak;\n\t\tcase SYNC:\n\t\t\tresult = syncClasses[modelName];\n\t\t\tbreak;\n\t\tcase STORAGE:\n\t\t\tresult = storageClasses[modelName];\n\t\t\tbreak;\n\t\tdefault:\n\t\t\texhaustiveCheck(namespaceName);\n\t\t\tbreak;\n\t}\n\n\tif (isValidModelConstructor(result)) {\n\t\treturn result;\n\t} else {\n\t\tconst msg = `Model name is not valid for namespace. modelName: ${modelName}, namespace: ${namespaceName}`;\n\t\tlogger.error(msg);\n\n\t\tthrow new Error(msg);\n\t}\n}\n\nasync function checkSchemaVersion(\n\tstorage: Storage,\n\tversion: string\n): Promise<void> {\n\tconst Setting =\n\t\tdataStoreClasses.Setting as PersistentModelConstructor<Setting>;\n\n\tconst modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n\n\tawait storage.runExclusive(async s => {\n\t\tconst [schemaVersionSetting] = await s.query(\n\t\t\tSetting,\n\t\t\tModelPredicateCreator.createFromExisting(modelDefinition, c =>\n\t\t\t\t// @ts-ignore Argument of type '\"eq\"' is not assignable to parameter of type 'never'.\n\t\t\t\tc.key('eq', SETTING_SCHEMA_VERSION)\n\t\t\t),\n\t\t\t{ page: 0, limit: 1 }\n\t\t);\n\n\t\tif (\n\t\t\tschemaVersionSetting !== undefined &&\n\t\t\tschemaVersionSetting.value !== undefined\n\t\t) {\n\t\t\tconst storedValue = JSON.parse(schemaVersionSetting.value);\n\n\t\t\tif (storedValue !== version) {\n\t\t\t\tawait s.clear(false);\n\t\t\t}\n\t\t} else {\n\t\t\tawait s.save(\n\t\t\t\tmodelInstanceCreator(Setting, {\n\t\t\t\t\tkey: SETTING_SCHEMA_VERSION,\n\t\t\t\t\tvalue: JSON.stringify(version),\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t});\n}\n\nlet syncSubscription: ZenObservable.Subscription;\n\nfunction getNamespace(): SchemaNamespace {\n\tconst namespace: SchemaNamespace = {\n\t\tname: DATASTORE,\n\t\trelationships: {},\n\t\tenums: {},\n\t\tnonModels: {},\n\t\tmodels: {\n\t\t\tSetting: {\n\t\t\t\tname: 'Setting',\n\t\t\t\tpluralName: 'Settings',\n\t\t\t\tsyncable: false,\n\t\t\t\tfields: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'ID',\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t},\n\t\t\t\t\tkey: {\n\t\t\t\t\t\tname: 'key',\n\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t},\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\ttype: 'String',\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tisArray: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n\n\treturn namespace;\n}\n\nclass DataStore {\n\t// reference to configured category instances. Used for preserving SSR context\n\tAuth = Auth;\n\tAPI = API;\n\tCache = Cache;\n\n\tprivate amplifyConfig: Record<string, any> = {};\n\tprivate authModeStrategy: AuthModeStrategy;\n\tprivate conflictHandler: ConflictHandler;\n\tprivate errorHandler: (error: SyncError<PersistentModel>) => void;\n\tprivate fullSyncInterval: number;\n\tprivate initialized: Promise<void>;\n\tprivate initReject: Function;\n\tprivate initResolve: Function;\n\tprivate maxRecordsToSync: number;\n\tprivate storage: Storage;\n\tprivate sync: SyncEngine;\n\tprivate syncPageSize: number;\n\tprivate syncExpressions: SyncExpression[];\n\tprivate syncPredicates: WeakMap<SchemaModel, ModelPredicate<any>> =\n\t\tnew WeakMap<SchemaModel, ModelPredicate<any>>();\n\tprivate sessionId: string;\n\tprivate storageAdapter: Adapter;\n\t// object that gets passed to descendent classes. Allows us to pass these down by reference\n\tprivate amplifyContext: AmplifyContext = {\n\t\tAuth: this.Auth,\n\t\tAPI: this.API,\n\t\tCache: this.Cache,\n\t};\n\n\tgetModuleName() {\n\t\treturn 'DataStore';\n\t}\n\n\tstart = async (): Promise<void> => {\n\t\tif (this.initialized === undefined) {\n\t\t\tlogger.debug('Starting DataStore');\n\t\t\tthis.initialized = new Promise((res, rej) => {\n\t\t\t\tthis.initResolve = res;\n\t\t\t\tthis.initReject = rej;\n\t\t\t});\n\t\t} else {\n\t\t\tawait this.initialized;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.storage = new Storage(\n\t\t\tschema,\n\t\t\tnamespaceResolver,\n\t\t\tgetModelConstructorByModelName,\n\t\t\tmodelInstanceCreator,\n\t\t\tthis.storageAdapter,\n\t\t\tthis.sessionId\n\t\t);\n\n\t\tawait this.storage.init();\n\n\t\tcheckSchemaInitialized();\n\t\tawait checkSchemaVersion(this.storage, schema.version);\n\n\t\tconst { aws_appsync_graphqlEndpoint } = this.amplifyConfig;\n\n\t\tif (aws_appsync_graphqlEndpoint) {\n\t\t\tlogger.debug('GraphQL endpoint available', aws_appsync_graphqlEndpoint);\n\n\t\t\tthis.syncPredicates = await this.processSyncExpressions();\n\n\t\t\tthis.sync = new SyncEngine(\n\t\t\t\tschema,\n\t\t\t\tnamespaceResolver,\n\t\t\t\tsyncClasses,\n\t\t\t\tuserClasses,\n\t\t\t\tthis.storage,\n\t\t\t\tmodelInstanceCreator,\n\t\t\t\tthis.conflictHandler,\n\t\t\t\tthis.errorHandler,\n\t\t\t\tthis.syncPredicates,\n\t\t\t\tthis.amplifyConfig,\n\t\t\t\tthis.authModeStrategy,\n\t\t\t\tthis.amplifyContext\n\t\t\t);\n\n\t\t\t// tslint:disable-next-line:max-line-length\n\t\t\tconst fullSyncIntervalInMilliseconds = this.fullSyncInterval * 1000 * 60; // fullSyncInterval from param is in minutes\n\t\t\tsyncSubscription = this.sync\n\t\t\t\t.start({ fullSyncInterval: fullSyncIntervalInMilliseconds })\n\t\t\t\t.subscribe({\n\t\t\t\t\tnext: ({ type, data }) => {\n\t\t\t\t\t\t// In Node, we need to wait for queries to be synced to prevent returning empty arrays.\n\t\t\t\t\t\t// In the Browser, we can begin returning data once subscriptions are in place.\n\t\t\t\t\t\tconst readyType = isNode\n\t\t\t\t\t\t\t? ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY\n\t\t\t\t\t\t\t: ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED;\n\n\t\t\t\t\t\tif (type === readyType) {\n\t\t\t\t\t\t\tthis.initResolve();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tHub.dispatch('datastore', {\n\t\t\t\t\t\t\tevent: type,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\terror: err => {\n\t\t\t\t\t\tlogger.warn('Sync error', err);\n\t\t\t\t\t\tthis.initReject();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t} else {\n\t\t\tlogger.warn(\n\t\t\t\t\"Data won't be synchronized. No GraphQL endpoint configured. Did you forget `Amplify.configure(awsconfig)`?\",\n\t\t\t\t{\n\t\t\t\t\tconfig: this.amplifyConfig,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tthis.initResolve();\n\t\t}\n\n\t\tawait this.initialized;\n\t};\n\n\tquery: {\n\t\t<T extends PersistentModel>(\n\t\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\t\tid: string\n\t\t): Promise<T | undefined>;\n\t\t<T extends PersistentModel>(\n\t\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\t\tcriteria?: ProducerModelPredicate<T> | typeof PredicateAll,\n\t\t\tpaginationProducer?: ProducerPaginationInput<T>\n\t\t): Promise<T[]>;\n\t} = async <T extends PersistentModel>(\n\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\tidOrCriteria?: string | ProducerModelPredicate<T> | typeof PredicateAll,\n\t\tpaginationProducer?: ProducerPaginationInput<T>\n\t): Promise<T | T[] | undefined> => {\n\t\tawait this.start();\n\n\t\t//#region Input validation\n\n\t\tif (!isValidModelConstructor(modelConstructor)) {\n\t\t\tconst msg = 'Constructor is not for a valid model';\n\t\t\tlogger.error(msg, { modelConstructor });\n\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (typeof idOrCriteria === 'string') {\n\t\t\tif (paginationProducer !== undefined) {\n\t\t\t\tlogger.warn('Pagination is ignored when querying by id');\n\t\t\t}\n\t\t}\n\n\t\tconst modelDefinition = getModelDefinition(modelConstructor);\n\t\tlet predicate: ModelPredicate<T>;\n\n\t\tif (isQueryOne(idOrCriteria)) {\n\t\t\tpredicate = ModelPredicateCreator.createForId<T>(\n\t\t\t\tmodelDefinition,\n\t\t\t\tidOrCriteria\n\t\t\t);\n\t\t} else {\n\t\t\tif (isPredicatesAll(idOrCriteria)) {\n\t\t\t\t// Predicates.ALL means \"all records\", so no predicate (undefined)\n\t\t\t\tpredicate = undefined;\n\t\t\t} else {\n\t\t\t\tpredicate = ModelPredicateCreator.createFromExisting(\n\t\t\t\t\tmodelDefinition,\n\t\t\t\t\tidOrCriteria\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst pagination = this.processPagination(\n\t\t\tmodelDefinition,\n\t\t\tpaginationProducer\n\t\t);\n\n\t\t//#endregion\n\n\t\tlogger.debug('params ready', {\n\t\t\tmodelConstructor,\n\t\t\tpredicate: ModelPredicateCreator.getPredicates(predicate, false),\n\t\t\tpagination: {\n\t\t\t\t...pagination,\n\t\t\t\tsort: ModelSortPredicateCreator.getPredicates(\n\t\t\t\t\tpagination && pagination.sort,\n\t\t\t\t\tfalse\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\n\t\tconst result = await this.storage.query(\n\t\t\tmodelConstructor,\n\t\t\tpredicate,\n\t\t\tpagination\n\t\t);\n\n\t\treturn isQueryOne(idOrCriteria) ? result[0] : result;\n\t};\n\n\tsave = async <T extends PersistentModel>(\n\t\tmodel: T,\n\t\tcondition?: ProducerModelPredicate<T>\n\t): Promise<T> => {\n\t\tawait this.start();\n\n\t\t// Immer patches for constructing a correct update mutation input\n\t\t// Allows us to only include changed fields for updates\n\t\tconst patchesTuple = modelPatchesMap.get(model);\n\n\t\tconst modelConstructor: PersistentModelConstructor<T> = model\n\t\t\t? <PersistentModelConstructor<T>>model.constructor\n\t\t\t: undefined;\n\n\t\tif (!isValidModelConstructor(modelConstructor)) {\n\t\t\tconst msg = 'Object is not an instance of a valid model';\n\t\t\tlogger.error(msg, { model });\n\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst modelDefinition = getModelDefinition(modelConstructor);\n\n\t\tconst producedCondition = ModelPredicateCreator.createFromExisting(\n\t\t\tmodelDefinition,\n\t\t\tcondition\n\t\t);\n\n\t\tconst [savedModel] = await this.storage.runExclusive(async s => {\n\t\t\tawait s.save(model, producedCondition, undefined, patchesTuple);\n\n\t\t\treturn s.query(\n\t\t\t\tmodelConstructor,\n\t\t\t\tModelPredicateCreator.createForId(modelDefinition, model.id)\n\t\t\t);\n\t\t});\n\n\t\treturn savedModel;\n\t};\n\n\tsetConflictHandler = (config: DataStoreConfig): ConflictHandler => {\n\t\tconst { DataStore: configDataStore } = config;\n\n\t\tconst conflictHandlerIsDefault: () => boolean = () =>\n\t\t\tthis.conflictHandler === defaultConflictHandler;\n\n\t\tif (configDataStore && configDataStore.conflictHandler) {\n\t\t\treturn configDataStore.conflictHandler;\n\t\t}\n\t\tif (conflictHandlerIsDefault() && config.conflictHandler) {\n\t\t\treturn config.conflictHandler;\n\t\t}\n\n\t\treturn this.conflictHandler || defaultConflictHandler;\n\t};\n\n\tsetErrorHandler = (config: DataStoreConfig): ErrorHandler => {\n\t\tconst { DataStore: configDataStore } = config;\n\n\t\tconst errorHandlerIsDefault: () => boolean = () =>\n\t\t\tthis.errorHandler === defaultErrorHandler;\n\n\t\tif (configDataStore && configDataStore.errorHandler) {\n\t\t\treturn configDataStore.errorHandler;\n\t\t}\n\t\tif (errorHandlerIsDefault() && config.errorHandler) {\n\t\t\treturn config.errorHandler;\n\t\t}\n\n\t\treturn this.errorHandler || defaultErrorHandler;\n\t};\n\n\tdelete: {\n\t\t<T extends PersistentModel>(\n\t\t\tmodel: T,\n\t\t\tcondition?: ProducerModelPredicate<T>\n\t\t): Promise<T>;\n\t\t<T extends PersistentModel>(\n\t\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\t\tid: string\n\t\t): Promise<T[]>;\n\t\t<T extends PersistentModel>(\n\t\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\t\tcondition: ProducerModelPredicate<T> | typeof PredicateAll\n\t\t): Promise<T[]>;\n\t} = async <T extends PersistentModel>(\n\t\tmodelOrConstructor: T | PersistentModelConstructor<T>,\n\t\tidOrCriteria?: string | ProducerModelPredicate<T> | typeof PredicateAll\n\t) => {\n\t\tawait this.start();\n\n\t\tlet condition: ModelPredicate<T>;\n\n\t\tif (!modelOrConstructor) {\n\t\t\tconst msg = 'Model or Model Constructor required';\n\t\t\tlogger.error(msg, { modelOrConstructor });\n\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (isValidModelConstructor(modelOrConstructor)) {\n\t\t\tconst modelConstructor = modelOrConstructor;\n\n\t\t\tif (!idOrCriteria) {\n\t\t\t\tconst msg =\n\t\t\t\t\t'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n\t\t\t\tlogger.error(msg, { idOrCriteria });\n\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\n\t\t\tif (typeof idOrCriteria === 'string') {\n\t\t\t\tcondition = ModelPredicateCreator.createForId<T>(\n\t\t\t\t\tgetModelDefinition(modelConstructor),\n\t\t\t\t\tidOrCriteria\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcondition = ModelPredicateCreator.createFromExisting(\n\t\t\t\t\tgetModelDefinition(modelConstructor),\n\t\t\t\t\t/**\n\t\t\t\t\t * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n\t\t\t\t\t * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n\t\t\t\t\t */\n\t\t\t\t\tidOrCriteria as ProducerModelPredicate<T>\n\t\t\t\t);\n\n\t\t\t\tif (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n\t\t\t\t\tconst msg =\n\t\t\t\t\t\t'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n\t\t\t\t\tlogger.error(msg, { condition });\n\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst [deleted] = await this.storage.delete(modelConstructor, condition);\n\n\t\t\treturn deleted;\n\t\t} else {\n\t\t\tconst model = modelOrConstructor;\n\t\t\tconst modelConstructor = Object.getPrototypeOf(model || {})\n\t\t\t\t.constructor as PersistentModelConstructor<T>;\n\n\t\t\tif (!isValidModelConstructor(modelConstructor)) {\n\t\t\t\tconst msg = 'Object is not an instance of a valid model';\n\t\t\t\tlogger.error(msg, { model });\n\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\n\t\t\tconst modelDefinition = getModelDefinition(modelConstructor);\n\n\t\t\tconst idPredicate = ModelPredicateCreator.createForId<T>(\n\t\t\t\tmodelDefinition,\n\t\t\t\tmodel.id\n\t\t\t);\n\n\t\t\tif (idOrCriteria) {\n\t\t\t\tif (typeof idOrCriteria !== 'function') {\n\t\t\t\t\tconst msg = 'Invalid criteria';\n\t\t\t\t\tlogger.error(msg, { idOrCriteria });\n\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\n\t\t\t\tcondition = idOrCriteria(idPredicate);\n\t\t\t} else {\n\t\t\t\tcondition = idPredicate;\n\t\t\t}\n\n\t\t\tconst [[deleted]] = await this.storage.delete(model, condition);\n\n\t\t\treturn deleted;\n\t\t}\n\t};\n\n\tobserve: {\n\t\t(): Observable<SubscriptionMessage<PersistentModel>>;\n\n\t\t<T extends PersistentModel>(model: T): Observable<SubscriptionMessage<T>>;\n\n\t\t<T extends PersistentModel>(\n\t\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\t\tcriteria?: string | ProducerModelPredicate<T>\n\t\t): Observable<SubscriptionMessage<T>>;\n\t} = <T extends PersistentModel = PersistentModel>(\n\t\tmodelOrConstructor?: T | PersistentModelConstructor<T>,\n\t\tidOrCriteria?: string | ProducerModelPredicate<T>\n\t): Observable<SubscriptionMessage<T>> => {\n\t\tlet predicate: ModelPredicate<T>;\n\n\t\tconst modelConstructor: PersistentModelConstructor<T> =\n\t\t\tmodelOrConstructor && isValidModelConstructor(modelOrConstructor)\n\t\t\t\t? modelOrConstructor\n\t\t\t\t: undefined;\n\n\t\tif (modelOrConstructor && modelConstructor === undefined) {\n\t\t\tconst model = <T>modelOrConstructor;\n\t\t\tconst modelConstructor =\n\t\t\t\tmodel && (<Object>Object.getPrototypeOf(model)).constructor;\n\n\t\t\tif (isValidModelConstructor<T>(modelConstructor)) {\n\t\t\t\tif (idOrCriteria) {\n\t\t\t\t\tlogger.warn('idOrCriteria is ignored when using a model instance', {\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tidOrCriteria,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this.observe(modelConstructor, model.id);\n\t\t\t} else {\n\t\t\t\tconst msg =\n\t\t\t\t\t'The model is not an instance of a PersistentModelConstructor';\n\t\t\t\tlogger.error(msg, { model });\n\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\tif (idOrCriteria !== undefined && modelConstructor === undefined) {\n\t\t\tconst msg = 'Cannot provide criteria without a modelConstructor';\n\t\t\tlogger.error(msg, idOrCriteria);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n\t\t\tconst msg = 'Constructor is not for a valid model';\n\t\t\tlogger.error(msg, { modelConstructor });\n\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (typeof idOrCriteria === 'string') {\n\t\t\tpredicate = ModelPredicateCreator.createForId<T>(\n\t\t\t\tgetModelDefinition(modelConstructor),\n\t\t\t\tidOrCriteria\n\t\t\t);\n\t\t} else {\n\t\t\tpredicate =\n\t\t\t\tmodelConstructor &&\n\t\t\t\tModelPredicateCreator.createFromExisting<T>(\n\t\t\t\t\tgetModelDefinition(modelConstructor),\n\t\t\t\t\tidOrCriteria\n\t\t\t\t);\n\t\t}\n\n\t\treturn new Observable<SubscriptionMessage<T>>(observer => {\n\t\t\tlet handle: ZenObservable.Subscription;\n\n\t\t\t(async () => {\n\t\t\t\tawait this.start();\n\n\t\t\t\t// Filter the events returned by Storage according to namespace,\n\t\t\t\t// append original element data, and subscribe to the observable\n\t\t\t\thandle = this.storage\n\t\t\t\t\t.observe(modelConstructor, predicate)\n\t\t\t\t\t.filter(({ model }) => namespaceResolver(model) === USER)\n\t\t\t\t\t.subscribe({\n\t\t\t\t\t\tnext: async item => {\n\t\t\t\t\t\t\t// the `element` doesn't necessarily contain all item details or\n\t\t\t\t\t\t\t// have related records attached consistently with that of a query()\n\t\t\t\t\t\t\t// result item. for consistency, we attach them here.\n\n\t\t\t\t\t\t\tlet message = item;\n\n\t\t\t\t\t\t\t// as lnog as we're not dealing with a DELETE, we need to fetch a fresh\n\t\t\t\t\t\t\t// item from storage to ensure it's fully populated.\n\t\t\t\t\t\t\tif (item.opType !== 'DELETE') {\n\t\t\t\t\t\t\t\tconst freshElement = await this.query(\n\t\t\t\t\t\t\t\t\titem.model,\n\t\t\t\t\t\t\t\t\titem.element.id\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmessage = {\n\t\t\t\t\t\t\t\t\t...message,\n\t\t\t\t\t\t\t\t\telement: freshElement as T,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tobserver.next(message as SubscriptionMessage<T>);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: err => observer.error(err),\n\t\t\t\t\t\tcomplete: () => observer.complete(),\n\t\t\t\t\t});\n\t\t\t})();\n\n\t\t\treturn () => {\n\t\t\t\tif (handle) {\n\t\t\t\t\thandle.unsubscribe();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tobserveQuery: {\n\t\t<T extends PersistentModel>(\n\t\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\t\tcriteria?: ProducerModelPredicate<T> | typeof PredicateAll,\n\t\t\tpaginationProducer?: ObserveQueryOptions<T>\n\t\t): Observable<DataStoreSnapshot<T>>;\n\t} = <T extends PersistentModel = PersistentModel>(\n\t\tmodel: PersistentModelConstructor<T>,\n\t\tcriteria?: ProducerModelPredicate<T> | typeof PredicateAll,\n\t\toptions?: ObserveQueryOptions<T>\n\t): Observable<DataStoreSnapshot<T>> => {\n\t\treturn new Observable<DataStoreSnapshot<T>>(observer => {\n\t\t\tconst items = new Map<string, T>();\n\t\t\tconst itemsChanged = new Map<string, T>();\n\t\t\tlet deletedItemIds: string[] = [];\n\t\t\tlet handle: ZenObservable.Subscription;\n\t\t\tlet predicate: ModelPredicate<T>;\n\n\t\t\t/**\n\t\t\t * As the name suggests, this geneates a snapshot in the form of\n\t\t\t * \t`{items: T[], isSynced: boolean}`\n\t\t\t * and sends it to the observer.\n\t\t\t *\n\t\t\t * SIDE EFFECT: The underlying generation and emission methods may touch:\n\t\t\t * `items`, `itemsChanged`, and `deletedItemIds`.\n\t\t\t *\n\t\t\t * Refer to `generateSnapshot` and `emitSnapshot` for more details.\n\t\t\t */\n\t\t\tconst generateAndEmitSnapshot = (): void => {\n\t\t\t\tconst snapshot = generateSnapshot();\n\t\t\t\temitSnapshot(snapshot);\n\t\t\t};\n\n\t\t\t// a mechanism to return data after X amount of seconds OR after the\n\t\t\t// \"limit\" (itemsChanged >= this.syncPageSize) has been reached, whichever comes first\n\t\t\tconst limitTimerRace = new DeferredCallbackResolver({\n\t\t\t\tcallback: generateAndEmitSnapshot,\n\t\t\t\terrorHandler: observer.error,\n\t\t\t\tmaxInterval: 2000,\n\t\t\t});\n\n\t\t\tconst { sort } = options || {};\n\t\t\tconst sortOptions = sort ? { sort } : undefined;\n\n\t\t\tconst modelDefinition = getModelDefinition(model);\n\t\t\tif (isQueryOne(criteria)) {\n\t\t\t\tpredicate = ModelPredicateCreator.createForId<T>(\n\t\t\t\t\tmodelDefinition,\n\t\t\t\t\tcriteria\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (isPredicatesAll(criteria)) {\n\t\t\t\t\t// Predicates.ALL means \"all records\", so no predicate (undefined)\n\t\t\t\t\tpredicate = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tpredicate = ModelPredicateCreator.createFromExisting(\n\t\t\t\t\t\tmodelDefinition,\n\t\t\t\t\t\tcriteria\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { predicates, type: predicateGroupType } =\n\t\t\t\tModelPredicateCreator.getPredicates(predicate, false) || {};\n\t\t\tconst hasPredicate = !!predicates;\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\t// first, query and return any locally-available records\n\t\t\t\t\t(await this.query(model, criteria, sortOptions)).forEach(item =>\n\t\t\t\t\t\titems.set(item.id, item)\n\t\t\t\t\t);\n\n\t\t\t\t\t// Observe the model and send a stream of updates (debounced).\n\t\t\t\t\t// We need to post-filter results instead of passing criteria through\n\t\t\t\t\t// to have visibility into items that move from in-set to out-of-set.\n\t\t\t\t\t// We need to explicitly remove those items from the existing snapshot.\n\t\t\t\t\thandle = this.observe(model).subscribe(\n\t\t\t\t\t\t({ element, model, opType }) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\thasPredicate &&\n\t\t\t\t\t\t\t\t!validatePredicate(element, predicateGroupType, predicates)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\topType === 'UPDATE' &&\n\t\t\t\t\t\t\t\t\t(items.has(element.id) || itemsChanged.has(element.id))\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t// tracking as a \"deleted item\" will include the item in\n\t\t\t\t\t\t\t\t\t// page limit calculations and ensure it is removed from the\n\t\t\t\t\t\t\t\t\t// final items collection, regardless of which collection(s)\n\t\t\t\t\t\t\t\t\t// it is currently in. (I mean, it could be in both, right!?)\n\t\t\t\t\t\t\t\t\tdeletedItemIds.push(element.id);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// ignore updates for irrelevant/filtered items.\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Flag items which have been recently deleted\n\t\t\t\t\t\t\t// NOTE: Merging of separate operations to the same model instance is handled upstream\n\t\t\t\t\t\t\t// in the `mergePage` method within src/sync/merger.ts. The final state of a model instance\n\t\t\t\t\t\t\t// depends on the LATEST record (for a given id).\n\t\t\t\t\t\t\tif (opType === 'DELETE') {\n\t\t\t\t\t\t\t\tdeletedItemIds.push(element.id);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titemsChanged.set(element.id, element);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst isSynced = this.sync?.getModelSyncedStatus(model) ?? false;\n\n\t\t\t\t\t\t\tconst limit =\n\t\t\t\t\t\t\t\titemsChanged.size - deletedItemIds.length >= this.syncPageSize;\n\n\t\t\t\t\t\t\tif (limit || isSynced) {\n\t\t\t\t\t\t\t\tlimitTimerRace.resolve();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// kicks off every subsequent race as results sync down\n\t\t\t\t\t\t\tlimitTimerRace.start();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// returns a set of initial/locally-available results\n\t\t\t\t\tgenerateAndEmitSnapshot();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tobserver.error(err);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\t/**\n\t\t\t * Combines the `items`, `itemsChanged`, and `deletedItemIds` collections into\n\t\t\t * a snapshot in the form of `{ items: T[], isSynced: boolean}`.\n\t\t\t *\n\t\t\t * SIDE EFFECT: The shared `items` collection is recreated.\n\t\t\t */\n\t\t\tconst generateSnapshot = (): DataStoreSnapshot<T> => {\n\t\t\t\tconst isSynced = this.sync?.getModelSyncedStatus(model) ?? false;\n\t\t\t\tconst itemsArray = [\n\t\t\t\t\t...Array.from(items.values()),\n\t\t\t\t\t...Array.from(itemsChanged.values()),\n\t\t\t\t];\n\n\t\t\t\tif (options?.sort) {\n\t\t\t\t\tsortItems(itemsArray);\n\t\t\t\t}\n\n\t\t\t\titems.clear();\n\t\t\t\titemsArray.forEach(item => items.set(item.id, item));\n\n\t\t\t\t// remove deleted items from the final result set\n\t\t\t\tdeletedItemIds.forEach(id => items.delete(id));\n\n\t\t\t\treturn {\n\t\t\t\t\titems: Array.from(items.values()),\n\t\t\t\t\tisSynced,\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Emits the list of items to the observer.\n\t\t\t *\n\t\t\t * SIDE EFFECT: `itemsChanged` and `deletedItemIds` are cleared to prepare\n\t\t\t * for the next snapshot.\n\t\t\t *\n\t\t\t * @param snapshot The generated items data to emit.\n\t\t\t */\n\t\t\tconst emitSnapshot = (snapshot: DataStoreSnapshot<T>): void => {\n\t\t\t\t// send the generated snapshot to the primary subscription\n\t\t\t\tobserver.next(snapshot);\n\n\t\t\t\t// reset the changed items sets\n\t\t\t\titemsChanged.clear();\n\t\t\t\tdeletedItemIds = [];\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Sorts an `Array` of `T` according to the sort instructions given in the\n\t\t\t * original  `observeQuery()` call.\n\t\t\t *\n\t\t\t * @param itemsToSort A array of model type.\n\t\t\t */\n\t\t\tconst sortItems = (itemsToSort: T[]): void => {\n\t\t\t\tconst modelDefinition = getModelDefinition(model);\n\t\t\t\tconst pagination = this.processPagination(modelDefinition, options);\n\n\t\t\t\tconst sortPredicates = ModelSortPredicateCreator.getPredicates(\n\t\t\t\t\tpagination.sort\n\t\t\t\t);\n\n\t\t\t\tif (sortPredicates.length) {\n\t\t\t\t\tconst compareFn = sortCompareFunction(sortPredicates);\n\t\t\t\t\titemsToSort.sort(compareFn);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Force one last snapshot when the model is fully synced.\n\t\t\t *\n\t\t\t * This reduces latency for that last snapshot, which will otherwise\n\t\t\t * wait for the configured timeout.\n\t\t\t *\n\t\t\t * @param payload The payload from the Hub event.\n\t\t\t */\n\t\t\tconst hubCallback = ({ payload }): void => {\n\t\t\t\tconst { event, data } = payload;\n\t\t\t\tif (\n\t\t\t\t\tevent === ControlMessage.SYNC_ENGINE_MODEL_SYNCED &&\n\t\t\t\t\tdata?.model?.name === model.name\n\t\t\t\t) {\n\t\t\t\t\tgenerateAndEmitSnapshot();\n\t\t\t\t\tHub.remove('api', hubCallback);\n\t\t\t\t}\n\t\t\t};\n\t\t\tHub.listen('datastore', hubCallback);\n\n\t\t\treturn () => {\n\t\t\t\tif (handle) {\n\t\t\t\t\thandle.unsubscribe();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tconfigure = (config: DataStoreConfig = {}) => {\n\t\tthis.amplifyContext.Auth = this.Auth;\n\t\tthis.amplifyContext.API = this.API;\n\t\tthis.amplifyContext.Cache = this.Cache;\n\n\t\tconst {\n\t\t\tDataStore: configDataStore,\n\t\t\tauthModeStrategyType: configAuthModeStrategyType,\n\t\t\tconflictHandler: configConflictHandler,\n\t\t\terrorHandler: configErrorHandler,\n\t\t\tmaxRecordsToSync: configMaxRecordsToSync,\n\t\t\tsyncPageSize: configSyncPageSize,\n\t\t\tfullSyncInterval: configFullSyncInterval,\n\t\t\tsyncExpressions: configSyncExpressions,\n\t\t\tauthProviders: configAuthProviders,\n\t\t\tstorageAdapter: configStorageAdapter,\n\t\t\t...configFromAmplify\n\t\t} = config;\n\n\t\tthis.amplifyConfig = {\n\t\t\t...configFromAmplify,\n\t\t\t...this.amplifyConfig,\n\t\t};\n\n\t\tthis.conflictHandler = this.setConflictHandler(config);\n\t\tthis.errorHandler = this.setErrorHandler(config);\n\n\t\tconst authModeStrategyType =\n\t\t\t(configDataStore && configDataStore.authModeStrategyType) ||\n\t\t\tconfigAuthModeStrategyType ||\n\t\t\tAuthModeStrategyType.DEFAULT;\n\n\t\tswitch (authModeStrategyType) {\n\t\t\tcase AuthModeStrategyType.MULTI_AUTH:\n\t\t\t\tthis.authModeStrategy = multiAuthStrategy(this.amplifyContext);\n\t\t\t\tbreak;\n\t\t\tcase AuthModeStrategyType.DEFAULT:\n\t\t\t\tthis.authModeStrategy = defaultAuthStrategy;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.authModeStrategy = defaultAuthStrategy;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// store on config object, so that Sync, Subscription, and Mutation processors can have access\n\t\tthis.amplifyConfig.authProviders =\n\t\t\t(configDataStore && configDataStore.authProviders) || configAuthProviders;\n\n\t\tthis.syncExpressions =\n\t\t\t(configDataStore && configDataStore.syncExpressions) ||\n\t\t\tconfigSyncExpressions ||\n\t\t\tthis.syncExpressions;\n\n\t\tthis.maxRecordsToSync =\n\t\t\t(configDataStore && configDataStore.maxRecordsToSync) ||\n\t\t\tconfigMaxRecordsToSync ||\n\t\t\tthis.maxRecordsToSync ||\n\t\t\t10000;\n\n\t\t// store on config object, so that Sync, Subscription, and Mutation processors can have access\n\t\tthis.amplifyConfig.maxRecordsToSync = this.maxRecordsToSync;\n\n\t\tthis.syncPageSize =\n\t\t\t(configDataStore && configDataStore.syncPageSize) ||\n\t\t\tconfigSyncPageSize ||\n\t\t\tthis.syncPageSize ||\n\t\t\t1000;\n\n\t\t// store on config object, so that Sync, Subscription, and Mutation processors can have access\n\t\tthis.amplifyConfig.syncPageSize = this.syncPageSize;\n\n\t\tthis.fullSyncInterval =\n\t\t\t(configDataStore && configDataStore.fullSyncInterval) ||\n\t\t\tconfigFullSyncInterval ||\n\t\t\tthis.fullSyncInterval ||\n\t\t\t24 * 60; // 1 day\n\n\t\tthis.storageAdapter =\n\t\t\t(configDataStore && configDataStore.storageAdapter) ||\n\t\t\tconfigStorageAdapter ||\n\t\t\tthis.storageAdapter ||\n\t\t\tundefined;\n\n\t\tthis.sessionId = this.retrieveSessionId();\n\t};\n\n\tclear = async function clear() {\n\t\tcheckSchemaInitialized();\n\t\tif (this.storage === undefined) {\n\t\t\t// connect to storage so that it can be cleared without fully starting DataStore\n\t\t\tthis.storage = new Storage(\n\t\t\t\tschema,\n\t\t\t\tnamespaceResolver,\n\t\t\t\tgetModelConstructorByModelName,\n\t\t\t\tmodelInstanceCreator,\n\t\t\t\tthis.storageAdapter,\n\t\t\t\tthis.sessionId\n\t\t\t);\n\t\t\tawait this.storage.init();\n\t\t}\n\n\t\tif (syncSubscription && !syncSubscription.closed) {\n\t\t\tsyncSubscription.unsubscribe();\n\t\t}\n\n\t\tawait this.storage.clear();\n\n\t\tif (this.sync) {\n\t\t\tthis.sync.unsubscribeConnectivity();\n\t\t}\n\n\t\tthis.initialized = undefined; // Should re-initialize when start() is called.\n\t\tthis.storage = undefined;\n\t\tthis.sync = undefined;\n\t\tthis.syncPredicates = new WeakMap<SchemaModel, ModelPredicate<any>>();\n\t};\n\n\tstop = async function stop() {\n\t\tif (this.initialized !== undefined) {\n\t\t\tawait this.start();\n\t\t}\n\n\t\tif (syncSubscription && !syncSubscription.closed) {\n\t\t\tsyncSubscription.unsubscribe();\n\t\t}\n\n\t\tif (this.sync) {\n\t\t\tthis.sync.unsubscribeConnectivity();\n\t\t}\n\n\t\tthis.initialized = undefined; // Should re-initialize when start() is called.\n\t\tthis.sync = undefined;\n\t};\n\n\tprivate processPagination<T extends PersistentModel>(\n\t\tmodelDefinition: SchemaModel,\n\t\tpaginationProducer: ProducerPaginationInput<T>\n\t): PaginationInput<T> | undefined {\n\t\tlet sortPredicate: SortPredicate<T>;\n\t\tconst { limit, page, sort } = paginationProducer || {};\n\n\t\tif (limit === undefined && page === undefined && sort === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (page !== undefined && limit === undefined) {\n\t\t\tthrow new Error('Limit is required when requesting a page');\n\t\t}\n\n\t\tif (page !== undefined) {\n\t\t\tif (typeof page !== 'number') {\n\t\t\t\tthrow new Error('Page should be a number');\n\t\t\t}\n\n\t\t\tif (page < 0) {\n\t\t\t\tthrow new Error(\"Page can't be negative\");\n\t\t\t}\n\t\t}\n\n\t\tif (limit !== undefined) {\n\t\t\tif (typeof limit !== 'number') {\n\t\t\t\tthrow new Error('Limit should be a number');\n\t\t\t}\n\n\t\t\tif (limit < 0) {\n\t\t\t\tthrow new Error(\"Limit can't be negative\");\n\t\t\t}\n\t\t}\n\n\t\tif (sort) {\n\t\t\tsortPredicate = ModelSortPredicateCreator.createFromExisting(\n\t\t\t\tmodelDefinition,\n\t\t\t\tpaginationProducer.sort\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\tlimit,\n\t\t\tpage,\n\t\t\tsort: sortPredicate,\n\t\t};\n\t}\n\n\tprivate async processSyncExpressions(): Promise<\n\t\tWeakMap<SchemaModel, ModelPredicate<any>>\n\t> {\n\t\tif (!this.syncExpressions || !this.syncExpressions.length) {\n\t\t\treturn new WeakMap<SchemaModel, ModelPredicate<any>>();\n\t\t}\n\n\t\tconst syncPredicates = await Promise.all(\n\t\t\tthis.syncExpressions.map(\n\t\t\t\tasync (\n\t\t\t\t\tsyncExpression: SyncExpression\n\t\t\t\t): Promise<[SchemaModel, ModelPredicate<any>]> => {\n\t\t\t\t\tconst { modelConstructor, conditionProducer } = await syncExpression;\n\t\t\t\t\tconst modelDefinition = getModelDefinition(modelConstructor);\n\n\t\t\t\t\t// conditionProducer is either a predicate, e.g. (c) => c.field('eq', 1)\n\t\t\t\t\t// OR a function/promise that returns a predicate\n\t\t\t\t\tconst condition = await this.unwrapPromise(conditionProducer);\n\t\t\t\t\tif (isPredicatesAll(condition)) {\n\t\t\t\t\t\treturn [modelDefinition, null];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst predicate = this.createFromCondition(\n\t\t\t\t\t\tmodelDefinition,\n\t\t\t\t\t\tcondition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn [modelDefinition, predicate];\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\treturn this.weakMapFromEntries(syncPredicates);\n\t}\n\n\tprivate createFromCondition(\n\t\tmodelDefinition: SchemaModel,\n\t\tcondition: ProducerModelPredicate<PersistentModel>\n\t) {\n\t\ttry {\n\t\t\treturn ModelPredicateCreator.createFromExisting(\n\t\t\t\tmodelDefinition,\n\t\t\t\tcondition\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tlogger.error('Error creating Sync Predicate');\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async unwrapPromise<T extends PersistentModel>(\n\t\tconditionProducer\n\t): Promise<ProducerModelPredicate<T>> {\n\t\ttry {\n\t\t\tconst condition = await conditionProducer();\n\t\t\treturn condition;\n\t\t} catch (error) {\n\t\t\tif (error instanceof TypeError) {\n\t\t\t\treturn conditionProducer;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate weakMapFromEntries(\n\t\tentries: [SchemaModel, ModelPredicate<any>][]\n\t): WeakMap<SchemaModel, ModelPredicate<any>> {\n\t\treturn entries.reduce((map, [modelDefinition, predicate]) => {\n\t\t\tif (map.has(modelDefinition)) {\n\t\t\t\tconst { name } = modelDefinition;\n\t\t\t\tlogger.warn(\n\t\t\t\t\t`You can only utilize one Sync Expression per model.\n          Subsequent sync expressions for the ${name} model will be ignored.`\n\t\t\t\t);\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\tif (predicate) {\n\t\t\t\tmap.set(modelDefinition, predicate);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}, new WeakMap<SchemaModel, ModelPredicate<any>>());\n\t}\n\n\t// database separation for Amplify Console. Not a public API\n\tprivate retrieveSessionId(): string | undefined {\n\t\ttry {\n\t\t\tconst sessionId = sessionStorage.getItem('datastoreSessionId');\n\n\t\t\tif (sessionId) {\n\t\t\t\tconst { aws_appsync_graphqlEndpoint } = this.amplifyConfig;\n\n\t\t\t\tconst appSyncUrl = aws_appsync_graphqlEndpoint.split('/')[2];\n\t\t\t\tconst [appSyncId] = appSyncUrl.split('.');\n\n\t\t\t\treturn `${sessionId}-${appSyncId}`;\n\t\t\t}\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nconst instance = new DataStore();\nAmplify.register(instance);\n\nexport { DataStore as DataStoreClass, initSchema, instance as DataStore };\n"]},"metadata":{},"sourceType":"module"}