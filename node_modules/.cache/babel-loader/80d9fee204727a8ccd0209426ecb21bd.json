{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as o from \"@radix-ui/react-collapsible\";\nimport { createCollapsibleScope as r } from \"@radix-ui/react-collapsible\";\nimport { Primitive as t } from \"@radix-ui/react-primitive\";\nimport { useControllableState as c } from \"@radix-ui/react-use-controllable-state\";\nimport { composeEventHandlers as n } from \"@radix-ui/primitive\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { createCollection as a } from \"@radix-ui/react-collection\";\nimport { createContextScope as l } from \"@radix-ui/react-context\";\nimport d from \"react\";\nimport p from \"@babel/runtime/helpers/esm/extends\";\nconst s = [\"Home\", \"End\", \"ArrowDown\", \"ArrowUp\"],\n      [u, m, f] = a(\"Accordion\"),\n      [A, g] = l(\"Accordion\", [f, r]);\nexport { g as createAccordionScope };\nconst b = r();\nexport const Accordion = /*#__PURE__*/d.forwardRef((e, o) => {\n  const {\n    type: r,\n    ...t\n  } = e,\n        c = t,\n        n = t;\n  /*#__PURE__*/\n\n  return d.createElement(u.Provider, {\n    scope: e.__scopeAccordion\n  }, \"multiple\" === r ? /*#__PURE__*/d.createElement(I, p({}, n, {\n    ref: o\n  })) : /*#__PURE__*/d.createElement(y, p({}, c, {\n    ref: o\n  })));\n});\n/*#__PURE__*/\n\nAccordion.propTypes = {\n  type(e) {\n    const o = e.value || e.defaultValue;\n    return e.type && ![\"single\", \"multiple\"].includes(e.type) ? new Error(\"Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`.\") : \"multiple\" === e.type && \"string\" == typeof o ? new Error(\"Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`.\") : \"single\" === e.type && Array.isArray(o) ? new Error(\"Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`.\") : null;\n  }\n\n};\nconst [x, v] = A(\"Accordion\"),\n      [E, w] = A(\"Accordion\", {\n  collapsible: !1\n}),\n      y = /*#__PURE__*/d.forwardRef((e, o) => {\n  const {\n    value: r,\n    defaultValue: t,\n    onValueChange: n = () => {},\n    collapsible: i = !1,\n    ...a\n  } = e,\n        [l, s] = c({\n    prop: r,\n    defaultProp: t,\n    onChange: n\n  });\n  /*#__PURE__*/\n\n  return d.createElement(x, {\n    scope: e.__scopeAccordion,\n    value: l ? [l] : [],\n    onItemOpen: s,\n    onItemClose: d.useCallback(() => i && s(\"\"), [i, s])\n  }, /*#__PURE__*/d.createElement(E, {\n    scope: e.__scopeAccordion,\n    collapsible: i\n  }, /*#__PURE__*/d.createElement(C, p({}, a, {\n    ref: o\n  }))));\n}),\n      I = /*#__PURE__*/d.forwardRef((e, o) => {\n  const {\n    value: r,\n    defaultValue: t,\n    onValueChange: n = () => {},\n    ...i\n  } = e,\n        [a = [], l] = c({\n    prop: r,\n    defaultProp: t,\n    onChange: n\n  }),\n        s = d.useCallback(e => l(function () {\n    let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return [...o, e];\n  }), [l]),\n        u = d.useCallback(e => l(function () {\n    let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return o.filter(o => o !== e);\n  }), [l]);\n  /*#__PURE__*/\n\n  return d.createElement(x, {\n    scope: e.__scopeAccordion,\n    value: a,\n    onItemOpen: s,\n    onItemClose: u\n  }, /*#__PURE__*/d.createElement(E, {\n    scope: e.__scopeAccordion,\n    collapsible: !0\n  }, /*#__PURE__*/d.createElement(C, p({}, i, {\n    ref: o\n  }))));\n}),\n      [_, h] = A(\"Accordion\"),\n      C = /*#__PURE__*/d.forwardRef((e, o) => {\n  const {\n    __scopeAccordion: r,\n    disabled: c,\n    ...a\n  } = e,\n        l = d.useRef(null),\n        f = i(l, o),\n        A = m(r),\n        g = n(e.onKeyDown, e => {\n    var o;\n    if (!s.includes(e.key)) return;\n    const r = e.target,\n          t = A().filter(e => {\n      var o;\n      return !(null !== (o = e.ref.current) && void 0 !== o && o.disabled);\n    }),\n          c = t.findIndex(e => e.ref.current === r),\n          n = t.length;\n    if (-1 === c) return;\n    e.preventDefault();\n    let i = c;\n\n    switch (e.key) {\n      case \"Home\":\n        i = 0;\n        break;\n\n      case \"End\":\n        i = n - 1;\n        break;\n\n      case \"ArrowDown\":\n        i = c + 1;\n        break;\n\n      case \"ArrowUp\":\n        i = c - 1, i < 0 && (i = n - 1);\n    }\n\n    null === (o = t[i % n].ref.current) || void 0 === o || o.focus();\n  });\n  /*#__PURE__*/\n\n  return d.createElement(_, {\n    scope: r,\n    disabled: c\n  }, /*#__PURE__*/d.createElement(u.Slot, {\n    scope: r\n  }, /*#__PURE__*/d.createElement(t.div, p({}, a, {\n    ref: f,\n    onKeyDown: c ? void 0 : g\n  }))));\n}),\n      [R, k] = A(\"AccordionItem\");\nexport const AccordionItem = /*#__PURE__*/d.forwardRef((r, t) => {\n  const {\n    __scopeAccordion: c,\n    value: n,\n    ...i\n  } = r,\n        a = h(\"AccordionItem\", c),\n        l = v(\"AccordionItem\", c),\n        s = b(c),\n        u = e(),\n        m = n && l.value.includes(n) || !1,\n        f = a.disabled || r.disabled;\n  /*#__PURE__*/\n\n  return d.createElement(R, {\n    scope: c,\n    open: m,\n    disabled: f,\n    triggerId: u\n  }, /*#__PURE__*/d.createElement(o.Root, p({\n    \"data-state\": m ? \"open\" : \"closed\"\n  }, s, i, {\n    ref: t,\n    disabled: f,\n    open: m,\n    onOpenChange: e => {\n      e ? l.onItemOpen(n) : l.onItemClose(n);\n    }\n  })));\n});\n/*#__PURE__*/\n\nexport const AccordionHeader = /*#__PURE__*/d.forwardRef((e, o) => {\n  const {\n    __scopeAccordion: r,\n    ...c\n  } = e,\n        n = k(\"AccordionHeader\", r);\n  /*#__PURE__*/\n\n  return d.createElement(t.h3, p({\n    \"data-state\": (i = n.open, i ? \"open\" : \"closed\"),\n    \"data-disabled\": n.disabled ? \"\" : void 0\n  }, c, {\n    ref: o\n  }));\n  var i;\n});\n/*#__PURE__*/\n\nexport const AccordionTrigger = /*#__PURE__*/d.forwardRef((e, r) => {\n  const {\n    __scopeAccordion: t,\n    ...c\n  } = e,\n        n = k(\"AccordionTrigger\", t),\n        i = w(\"AccordionTrigger\", t),\n        a = b(t);\n  /*#__PURE__*/\n\n  return d.createElement(u.ItemSlot, {\n    scope: t\n  }, /*#__PURE__*/d.createElement(o.Trigger, p({\n    \"aria-disabled\": n.open && !i.collapsible || void 0,\n    id: n.triggerId\n  }, a, c, {\n    ref: r\n  })));\n});\n/*#__PURE__*/\n\nexport const AccordionContent = /*#__PURE__*/d.forwardRef((e, r) => {\n  const {\n    __scopeAccordion: t,\n    ...c\n  } = e,\n        n = k(\"AccordionContent\", t),\n        i = b(t);\n  /*#__PURE__*/\n\n  return d.createElement(o.Content, p({\n    role: \"region\",\n    \"aria-labelledby\": n.triggerId\n  }, i, c, {\n    ref: r,\n    style: {\n      \"--radix-accordion-content-height\": \"var(--radix-collapsible-content-height)\",\n      \"--radix-accordion-content-width\": \"var(--radix-collapsible-content-width)\",\n      ...e.style\n    }\n  }));\n});\n/*#__PURE__*/\n\nexport const Root = Accordion;\nexport const Item = AccordionItem;\nexport const Header = AccordionHeader;\nexport const Trigger = AccordionTrigger;\nexport const Content = AccordionContent;","map":{"version":3,"mappings":"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","names":["ACCORDION_KEYS","Collection","useCollection","createCollectionScope","createCollection","createAccordionContext","createAccordionScope","createContextScope","createCollapsibleScope","useCollapsibleScope","Accordion","React","forwardRef","props","forwardedRef","type","accordionProps","singleProps","multipleProps","_react","$c2edcd6d640daf5939a1552e1f81c4$var$Collection","Provider","scope","__scopeAccordion","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionImplMultiple","_babelRuntimeHelpersEsmExtends","ref","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionImplSingle","propTypes","value","defaultValue","includes","Error","Array","isArray","AccordionValueProvider","useAccordionValueContext","AccordionCollapsibleProvider","useAccordionCollapsibleContext","collapsible","AccordionImplSingle","valueProp","onValueChange","accordionSingleProps","setValue","useControllableState","prop","defaultProp","onChange","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionValueProvider","onItemOpen","onItemClose","useCallback","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionCollapsibleProvider","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionImpl","AccordionImplMultiple","accordionMultipleProps","handleItemOpen","itemValue","prevValue","handleItemClose","filter","AccordionImplProvider","useAccordionContext","AccordionImpl","disabled","accordionRef","useRef","composedRefs","useComposedRefs","getItems","handleKeyDown","composeEventHandlers","onKeyDown","event","key","target","triggerCollection","item","current","_item$ref$current","triggerIndex","findIndex","triggerCount","length","preventDefault","nextIndex","_triggerCollection$cl","focus","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionImplProvider","Slot","Primitive","div","undefined","AccordionItemProvider","useAccordionItemContext","AccordionItem","accordionItemProps","accordionContext","valueContext","collapsibleScope","triggerId","useId","open","$c2edcd6d640daf5939a1552e1f81c4$var$AccordionItemProvider","_radixUiReactCollapsible","Root","onOpenChange","AccordionHeader","headerProps","itemContext","h3","AccordionTrigger","triggerProps","collapsibleContext","ItemSlot","Trigger","id","AccordionContent","contentProps","Content","role","style","Item","Header"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@radix-ui/react-accordion/dist/packages/react/accordion/src/Accordion.tsx"],"sourcesContent":["import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { createCollapsibleScope } from '@radix-ui/react-collapsible';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACCORDION_NAME = 'Accordion';\nconst ACCORDION_KEYS = ['Home', 'End', 'ArrowDown', 'ArrowUp'];\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<AccordionTriggerElement>(ACCORDION_NAME);\n\ntype ScopedProps<P> = P & { __scopeAccordion?: Scope };\nconst [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope,\n]);\nconst useCollapsibleScope = createCollapsibleScope();\n\ntype AccordionElement = AccordionImplMultipleElement | AccordionImplSingleElement;\ninterface AccordionSingleProps extends AccordionImplSingleProps {\n  type: 'single';\n}\ninterface AccordionMultipleProps extends AccordionImplMultipleProps {\n  type: 'multiple';\n}\n\nconst Accordion = React.forwardRef<AccordionElement, AccordionSingleProps | AccordionMultipleProps>(\n  (props: ScopedProps<AccordionSingleProps | AccordionMultipleProps>, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps as AccordionImplSingleProps;\n    const multipleProps = accordionProps as AccordionImplMultipleProps;\n    return (\n      <Collection.Provider scope={props.__scopeAccordion}>\n        {type === 'multiple' ? (\n          <AccordionImplMultiple {...multipleProps} ref={forwardedRef} />\n        ) : (\n          <AccordionImplSingle {...singleProps} ref={forwardedRef} />\n        )}\n      </Collection.Provider>\n    );\n  }\n);\n\nAccordion.displayName = ACCORDION_NAME;\n\nAccordion.propTypes = {\n  type(props) {\n    const value = props.value || props.defaultValue;\n    if (props.type && !['single', 'multiple'].includes(props.type)) {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`.'\n      );\n    }\n    if (props.type === 'multiple' && typeof value === 'string') {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`.'\n      );\n    }\n    if (props.type === 'single' && Array.isArray(value)) {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`.'\n      );\n    }\n    return null;\n  },\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionValueContextValue = {\n  value: string[];\n  onItemOpen(value: string): void;\n  onItemClose(value: string): void;\n};\n\nconst [AccordionValueProvider, useAccordionValueContext] =\n  createAccordionContext<AccordionValueContextValue>(ACCORDION_NAME);\n\nconst [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\n\ntype AccordionImplSingleElement = AccordionImplElement;\ninterface AccordionImplSingleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion item whose content is expanded.\n   */\n  value?: string;\n  /**\n   * The value of the item whose content is expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string;\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string): void;\n  /**\n   * Whether an accordion item can be collapsed after it has been opened.\n   * @default false\n   */\n  collapsible?: boolean;\n}\n\nconst AccordionImplSingle = React.forwardRef<AccordionImplSingleElement, AccordionImplSingleProps>(\n  (props: ScopedProps<AccordionImplSingleProps>, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {},\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    return (\n      <AccordionValueProvider\n        scope={props.__scopeAccordion}\n        value={value ? [value] : []}\n        onItemOpen={setValue}\n        onItemClose={React.useCallback(() => collapsible && setValue(''), [collapsible, setValue])}\n      >\n        <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={collapsible}>\n          <AccordionImpl {...accordionSingleProps} ref={forwardedRef} />\n        </AccordionCollapsibleProvider>\n      </AccordionValueProvider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplMultipleElement = AccordionImplElement;\ninterface AccordionImplMultipleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion items whose contents are expanded.\n   */\n  value?: string[];\n  /**\n   * The value of the items whose contents are expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string[];\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string[]): void;\n}\n\nconst AccordionImplMultiple = React.forwardRef<\n  AccordionImplMultipleElement,\n  AccordionImplMultipleProps\n>((props: ScopedProps<AccordionImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...accordionMultipleProps\n  } = props;\n\n  const [value = [], setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n\n  const handleItemOpen = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n\n  const handleItemClose = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  );\n\n  return (\n    <AccordionValueProvider\n      scope={props.__scopeAccordion}\n      value={value}\n      onItemOpen={handleItemOpen}\n      onItemClose={handleItemClose}\n    >\n      <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={true}>\n        <AccordionImpl {...accordionMultipleProps} ref={forwardedRef} />\n      </AccordionCollapsibleProvider>\n    </AccordionValueProvider>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplContextValue = {\n  disabled?: boolean;\n};\n\nconst [AccordionImplProvider, useAccordionContext] =\n  createAccordionContext<AccordionImplContextValue>(ACCORDION_NAME);\n\ntype AccordionImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AccordionImplProps extends PrimitiveDivProps {\n  /**\n   * Whether or not an accordion is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n}\n\nconst AccordionImpl = React.forwardRef<AccordionImplElement, AccordionImplProps>(\n  (props: ScopedProps<AccordionImplProps>, forwardedRef) => {\n    const { __scopeAccordion, disabled, ...accordionProps } = props;\n    const accordionRef = React.useRef<AccordionImplElement>(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target as HTMLElement;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n\n      if (triggerIndex === -1) return;\n\n      // Prevents page scroll while user is navigating\n      event.preventDefault();\n\n      let nextIndex = triggerIndex;\n      switch (event.key) {\n        case 'Home':\n          nextIndex = 0;\n          break;\n        case 'End':\n          nextIndex = triggerCount - 1;\n          break;\n        case 'ArrowDown':\n          nextIndex = triggerIndex + 1;\n          break;\n        case 'ArrowUp':\n          nextIndex = triggerIndex - 1;\n          if (nextIndex < 0) {\n            nextIndex = triggerCount - 1;\n          }\n          break;\n      }\n\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex].ref.current?.focus();\n    });\n\n    return (\n      <AccordionImplProvider scope={__scopeAccordion} disabled={disabled}>\n        <Collection.Slot scope={__scopeAccordion}>\n          <Primitive.div\n            {...accordionProps}\n            ref={composedRefs}\n            onKeyDown={disabled ? undefined : handleKeyDown}\n          />\n        </Collection.Slot>\n      </AccordionImplProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'AccordionItem';\n\ntype AccordionItemContextValue = { open?: boolean; disabled?: boolean; triggerId: string };\nconst [AccordionItemProvider, useAccordionItemContext] =\n  createAccordionContext<AccordionItemContextValue>(ITEM_NAME);\n\ntype AccordionItemElement = React.ElementRef<typeof CollapsiblePrimitive.Root>;\ntype CollapsibleProps = Radix.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Root>;\ninterface AccordionItemProps\n  extends Omit<CollapsibleProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string;\n}\n\n/**\n * `AccordionItem` contains all of the parts of a collapsible section inside of an `Accordion`.\n */\nconst AccordionItem = React.forwardRef<AccordionItemElement, AccordionItemProps>(\n  (props: ScopedProps<AccordionItemProps>, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = (value && valueContext.value.includes(value)) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n\n    return (\n      <AccordionItemProvider\n        scope={__scopeAccordion}\n        open={open}\n        disabled={disabled}\n        triggerId={triggerId}\n      >\n        <CollapsiblePrimitive.Root\n          data-state={open ? 'open' : 'closed'}\n          {...collapsibleScope}\n          {...accordionItemProps}\n          ref={forwardedRef}\n          disabled={disabled}\n          open={open}\n          onOpenChange={(open) => {\n            if (open) {\n              valueContext.onItemOpen(value);\n            } else {\n              valueContext.onItemClose(value);\n            }\n          }}\n        />\n      </AccordionItemProvider>\n    );\n  }\n);\n\nAccordionItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionHeader\n * -----------------------------------------------------------------------------------------------*/\n\nconst HEADER_NAME = 'AccordionHeader';\n\ntype AccordionHeaderElement = React.ElementRef<typeof Primitive.h3>;\ntype PrimitiveHeading3Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h3>;\ninterface AccordionHeaderProps extends PrimitiveHeading3Props {}\n\n/**\n * `AccordionHeader` contains the content for the parts of an `AccordionItem` that will be visible\n * whether or not its content is collapsed.\n */\nconst AccordionHeader = React.forwardRef<AccordionHeaderElement, AccordionHeaderProps>(\n  (props: ScopedProps<AccordionHeaderProps>, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return (\n      <Primitive.h3\n        data-state={getState(itemContext.open)}\n        data-disabled={itemContext.disabled ? '' : undefined}\n        {...headerProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nAccordionHeader.displayName = HEADER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'AccordionTrigger';\n\ntype AccordionTriggerElement = React.ElementRef<typeof CollapsiblePrimitive.Trigger>;\ntype CollapsibleTriggerProps = Radix.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Trigger>;\ninterface AccordionTriggerProps extends CollapsibleTriggerProps {}\n\n/**\n * `AccordionTrigger` is the trigger that toggles the collapsed state of an `AccordionItem`. It\n * should always be nested inside of an `AccordionHeader`.\n */\nconst AccordionTrigger = React.forwardRef<AccordionTriggerElement, AccordionTriggerProps>(\n  (props: ScopedProps<AccordionTriggerProps>, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <Collection.ItemSlot scope={__scopeAccordion}>\n        <CollapsiblePrimitive.Trigger\n          aria-disabled={(itemContext.open && !collapsibleContext.collapsible) || undefined}\n          id={itemContext.triggerId}\n          {...collapsibleScope}\n          {...triggerProps}\n          ref={forwardedRef}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nAccordionTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AccordionContent';\n\ntype AccordionContentElement = React.ElementRef<typeof CollapsiblePrimitive.Content>;\ntype CollapsibleContentProps = Radix.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Content>;\ninterface AccordionContentProps extends CollapsibleContentProps {}\n\n/**\n * `AccordionContent` contains the collapsible content for an `AccordionItem`.\n */\nconst AccordionContent = React.forwardRef<AccordionContentElement, AccordionContentProps>(\n  (props: ScopedProps<AccordionContentProps>, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <CollapsiblePrimitive.Content\n        role=\"region\"\n        aria-labelledby={itemContext.triggerId}\n        {...collapsibleScope}\n        {...contentProps}\n        ref={forwardedRef}\n        style={{\n          ['--radix-accordion-content-height' as any]: 'var(--radix-collapsible-content-height)',\n          ['--radix-accordion-content-width' as any]: 'var(--radix-collapsible-content-width)',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nAccordionContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Accordion;\nconst Item = AccordionItem;\nconst Header = AccordionHeader;\nconst Trigger = AccordionTrigger;\nconst Content = AccordionContent;\n\nexport {\n  createAccordionScope,\n  //\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionTrigger,\n  AccordionContent,\n  //\n  Root,\n  Item,\n  Header,\n  Trigger,\n  Content,\n};\nexport type {\n  AccordionSingleProps,\n  AccordionMultipleProps,\n  AccordionItemProps,\n  AccordionHeaderProps,\n  AccordionTriggerProps,\n  AccordionContentProps,\n};\n"]},"metadata":{},"sourceType":"module"}