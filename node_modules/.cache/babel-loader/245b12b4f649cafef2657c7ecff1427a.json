{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutUsersRequest } from \"../models/models_0\";\nimport { deserializeAws_restJson1PutUsersCommand, serializeAws_restJson1PutUsersCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Adds one or more users to a Users dataset. For more information see\n *       <a>importing-users</a>.</p>\n */\n\nvar PutUsersCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutUsersCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutUsersCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutUsersCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PersonalizeEventsClient\";\n    var commandName = \"PutUsersCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutUsersRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutUsersCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1PutUsersCommand(input, context);\n  };\n\n  PutUsersCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1PutUsersCommand(output, context);\n  };\n\n  return PutUsersCommand;\n}($Command);\n\nexport { PutUsersCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,uCAAT,EAAkDC,qCAAlD,QAAgG,4BAAhG;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACnDR,SAAS,CAACO,eAAD,EAAkBC,MAAlB,CAAT,CADmD,CAEnD;EACA;;;EACA,SAASD,eAAT,CAAyBE,KAAzB,EAAgC;IAC5B,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CAL4B,CAM5B;EACH;EACD;AACJ;AACA;;;EACIH,eAAe,CAACK,SAAhB,CAA0BC,iBAA1B,GAA8C,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IACzF,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,IAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,yBAAjB;IACA,IAAIC,WAAW,GAAG,iBAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE1B,eAAe,CAAC2B,kBAJf;MAK1BC,wBAAwB,EAAE,UAAUC,MAAV,EAAkB;QAAE,OAAOA,MAAP;MAAgB;IALpC,CAA9B;IAOA,IAAIC,cAAc,GAAGhB,aAAa,CAACgB,cAAnC;IACA,OAAOV,KAAK,CAACW,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCjB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAjBD;;EAkBAnB,eAAe,CAACK,SAAhB,CAA0BO,SAA1B,GAAsC,UAAUV,KAAV,EAAiB0B,OAAjB,EAA0B;IAC5D,OAAOhC,qCAAqC,CAACM,KAAD,EAAQ0B,OAAR,CAA5C;EACH,CAFD;;EAGA5B,eAAe,CAACK,SAAhB,CAA0BQ,WAA1B,GAAwC,UAAUU,MAAV,EAAkBK,OAAlB,EAA2B;IAC/D,OAAOjC,uCAAuC,CAAC4B,MAAD,EAASK,OAAT,CAA9C;EACH,CAFD;;EAGA,OAAO5B,eAAP;AACH,CAxCoC,CAwCnCD,QAxCmC,CAArC;;AAyCA,SAASC,eAAT","names":["PutUsersRequest","deserializeAws_restJson1PutUsersCommand","serializeAws_restJson1PutUsersCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutUsersCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-personalize-events/commands/PutUsersCommand.ts"],"sourcesContent":["import {\n  PersonalizeEventsClientResolvedConfig,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n} from \"../PersonalizeEventsClient\";\nimport { PutUsersRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restJson1PutUsersCommand,\n  serializeAws_restJson1PutUsersCommand,\n} from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutUsersCommandInput = PutUsersRequest;\nexport type PutUsersCommandOutput = __MetadataBearer;\n\n/**\n * <p>Adds one or more users to a Users dataset. For more information see\n *       <a>importing-users</a>.</p>\n */\nexport class PutUsersCommand extends $Command<\n  PutUsersCommandInput,\n  PutUsersCommandOutput,\n  PersonalizeEventsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutUsersCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: PersonalizeEventsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutUsersCommandInput, PutUsersCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"PersonalizeEventsClient\";\n    const commandName = \"PutUsersCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutUsersRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutUsersCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restJson1PutUsersCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutUsersCommandOutput> {\n    return deserializeAws_restJson1PutUsersCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}