{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nvar LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5\n};\nexport var LOG_TYPE;\n\n(function (LOG_TYPE) {\n  LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n  LOG_TYPE[\"ERROR\"] = \"ERROR\";\n  LOG_TYPE[\"INFO\"] = \"INFO\";\n  LOG_TYPE[\"WARN\"] = \"WARN\";\n  LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\n\n\nvar ConsoleLogger =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  function ConsoleLogger(name, level) {\n    if (level === void 0) {\n      level = LOG_TYPE.WARN;\n    }\n\n    this.name = name;\n    this.level = level;\n    this._pluggables = [];\n  }\n\n  ConsoleLogger.prototype._padding = function (n) {\n    return n < 10 ? '0' + n : '' + n;\n  };\n\n  ConsoleLogger.prototype._ts = function () {\n    var dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  };\n\n  ConsoleLogger.prototype.configure = function (config) {\n    if (!config) return this._config;\n    this._config = config;\n    return this._config;\n  };\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {LOG_TYPE|string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype._log = function (type) {\n    var e_1, _a;\n\n    var msg = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      msg[_i - 1] = arguments[_i];\n    }\n\n    var logger_level_name = this.level;\n\n    if (ConsoleLogger.LOG_LEVEL) {\n      logger_level_name = ConsoleLogger.LOG_LEVEL;\n    }\n\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      logger_level_name = window.LOG_LEVEL;\n    }\n\n    var logger_level = LOG_LEVELS[logger_level_name];\n    var type_level = LOG_LEVELS[type];\n\n    if (!(type_level >= logger_level)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n\n    var log = console.log.bind(console);\n\n    if (type === LOG_TYPE.ERROR && console.error) {\n      log = console.error.bind(console);\n    }\n\n    if (type === LOG_TYPE.WARN && console.warn) {\n      log = console.warn.bind(console);\n    }\n\n    var prefix = \"[\" + type + \"] \" + this._ts() + \" \" + this.name;\n    var message = '';\n\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      message = prefix + \" - \" + msg[0];\n      log(message);\n    } else if (msg.length === 1) {\n      message = prefix + \" \" + msg[0];\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      var obj = msg.slice(1);\n\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n\n      message = prefix + \" - \" + msg[0] + \" \" + obj;\n      log(prefix + \" - \" + msg[0], obj);\n    } else {\n      message = prefix + \" \" + msg;\n      log(prefix, msg);\n    }\n\n    try {\n      for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var plugin = _c.value;\n        var logEvent = {\n          message: message,\n          timestamp: Date.now()\n        };\n        plugin.pushLogs([logEvent]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.log = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n  };\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.info = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n  };\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.warn = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spread([LOG_TYPE.WARN], msg));\n  };\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.error = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spread([LOG_TYPE.ERROR], msg));\n  };\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.debug = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spread([LOG_TYPE.DEBUG], msg));\n  };\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.verbose = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spread([LOG_TYPE.VERBOSE], msg));\n  };\n\n  ConsoleLogger.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n      this._pluggables.push(pluggable);\n\n      pluggable.configure(this._config);\n    }\n  };\n\n  ConsoleLogger.prototype.listPluggables = function () {\n    return this._pluggables;\n  };\n\n  ConsoleLogger.LOG_LEVEL = null;\n  return ConsoleLogger;\n}();\n\nexport { ConsoleLogger };","map":{"version":3,"mappings":"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","names":["AWS_CLOUDWATCH_CATEGORY","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","LOG_TYPE","name","level","_pluggables","ConsoleLogger","n","dt","Date","_padding","getMinutes","getSeconds","join","getMilliseconds","config","_config","type","msg","logger_level_name","LOG_LEVEL","window","logger_level","type_level","log","console","bind","error","warn","prefix","_ts","message","length","obj","slice","_c","plugin","logEvent","timestamp","now","pushLogs","_log","apply","__spread","pluggable","getCategoryName","push","configure"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { InputLogEvent } from '@aws-sdk/client-cloudwatch-logs';\nimport { LoggingProvider } from '../types';\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nimport { Logger } from './logger-interface';\n\nconst LOG_LEVELS = {\n\tVERBOSE: 1,\n\tDEBUG: 2,\n\tINFO: 3,\n\tWARN: 4,\n\tERROR: 5,\n};\n\nexport enum LOG_TYPE {\n\tDEBUG = 'DEBUG',\n\tERROR = 'ERROR',\n\tINFO = 'INFO',\n\tWARN = 'WARN',\n\tVERBOSE = 'VERBOSE',\n}\n\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger implements Logger {\n\tname: string;\n\tlevel: LOG_TYPE | string;\n\tprivate _pluggables: LoggingProvider[];\n\tprivate _config: object;\n\n\t/**\n\t * @constructor\n\t * @param {string} name - Name of the logger\n\t */\n\tconstructor(name: string, level: LOG_TYPE | string = LOG_TYPE.WARN) {\n\t\tthis.name = name;\n\t\tthis.level = level;\n\t\tthis._pluggables = [];\n\t}\n\n\tstatic LOG_LEVEL = null;\n\n\t_padding(n) {\n\t\treturn n < 10 ? '0' + n : '' + n;\n\t}\n\n\t_ts() {\n\t\tconst dt = new Date();\n\t\treturn (\n\t\t\t[this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(\n\t\t\t\t':'\n\t\t\t) +\n\t\t\t'.' +\n\t\t\tdt.getMilliseconds()\n\t\t);\n\t}\n\n\tconfigure(config?: object) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = config;\n\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Write log\n\t * @method\n\t * @memeberof Logger\n\t * @param {LOG_TYPE|string} type - log type, default INFO\n\t * @param {string|object} msg - Logging message or object\n\t */\n\t_log(type: LOG_TYPE | string, ...msg) {\n\t\tlet logger_level_name = this.level;\n\t\tif (ConsoleLogger.LOG_LEVEL) {\n\t\t\tlogger_level_name = ConsoleLogger.LOG_LEVEL;\n\t\t}\n\t\tif (typeof (<any>window) !== 'undefined' && (<any>window).LOG_LEVEL) {\n\t\t\tlogger_level_name = (<any>window).LOG_LEVEL;\n\t\t}\n\t\tconst logger_level = LOG_LEVELS[logger_level_name];\n\t\tconst type_level = LOG_LEVELS[type];\n\t\tif (!(type_level >= logger_level)) {\n\t\t\t// Do nothing if type is not greater than or equal to logger level (handle undefined)\n\t\t\treturn;\n\t\t}\n\n\t\tlet log = console.log.bind(console);\n\t\tif (type === LOG_TYPE.ERROR && console.error) {\n\t\t\tlog = console.error.bind(console);\n\t\t}\n\t\tif (type === LOG_TYPE.WARN && console.warn) {\n\t\t\tlog = console.warn.bind(console);\n\t\t}\n\n\t\tconst prefix = `[${type}] ${this._ts()} ${this.name}`;\n\t\tlet message = '';\n\n\t\tif (msg.length === 1 && typeof msg[0] === 'string') {\n\t\t\tmessage = `${prefix} - ${msg[0]}`;\n\t\t\tlog(message);\n\t\t} else if (msg.length === 1) {\n\t\t\tmessage = `${prefix} ${msg[0]}`;\n\t\t\tlog(prefix, msg[0]);\n\t\t} else if (typeof msg[0] === 'string') {\n\t\t\tlet obj = msg.slice(1);\n\t\t\tif (obj.length === 1) {\n\t\t\t\tobj = obj[0];\n\t\t\t}\n\t\t\tmessage = `${prefix} - ${msg[0]} ${obj}`;\n\t\t\tlog(`${prefix} - ${msg[0]}`, obj);\n\t\t} else {\n\t\t\tmessage = `${prefix} ${msg}`;\n\t\t\tlog(prefix, msg);\n\t\t}\n\n\t\tfor (const plugin of this._pluggables) {\n\t\t\tconst logEvent: InputLogEvent = { message, timestamp: Date.now() };\n\t\t\tplugin.pushLogs([logEvent]);\n\t\t}\n\t}\n\n\t/**\n\t * Write General log. Default to INFO\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tlog(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write INFO log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tinfo(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write WARN log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\twarn(...msg) {\n\t\tthis._log(LOG_TYPE.WARN, ...msg);\n\t}\n\n\t/**\n\t * Write ERROR log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\terror(...msg) {\n\t\tthis._log(LOG_TYPE.ERROR, ...msg);\n\t}\n\n\t/**\n\t * Write DEBUG log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tdebug(...msg) {\n\t\tthis._log(LOG_TYPE.DEBUG, ...msg);\n\t}\n\n\t/**\n\t * Write VERBOSE log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tverbose(...msg) {\n\t\tthis._log(LOG_TYPE.VERBOSE, ...msg);\n\t}\n\n\taddPluggable(pluggable: LoggingProvider) {\n\t\tif (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\tpluggable.configure(this._config);\n\t\t}\n\t}\n\n\tlistPluggables() {\n\t\treturn this._pluggables;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}