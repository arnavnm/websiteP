{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { OpType, QueryOne } from '../../types';\nimport { monotonicUlidFactory } from '../../util';\nimport { createInMemoryStore } from './InMemoryStore';\nvar DB_NAME = '@AmplifyDatastore';\nvar COLLECTION = 'Collection';\nvar DATA = 'Data';\nvar monotonicFactoriesMap = new Map();\n\nvar AsyncStorageDatabase =\n/** @class */\nfunction () {\n  function AsyncStorageDatabase() {\n    /**\n     * Maps storeNames to a map of ulid->id\n     */\n    this._collectionInMemoryIndex = new Map();\n    this.storage = createInMemoryStore();\n  }\n\n  AsyncStorageDatabase.prototype.getCollectionIndex = function (storeName) {\n    if (!this._collectionInMemoryIndex.has(storeName)) {\n      this._collectionInMemoryIndex.set(storeName, new Map());\n    }\n\n    return this._collectionInMemoryIndex.get(storeName);\n  };\n\n  AsyncStorageDatabase.prototype.getMonotonicFactory = function (storeName) {\n    if (!monotonicFactoriesMap.has(storeName)) {\n      monotonicFactoriesMap.set(storeName, monotonicUlidFactory());\n    }\n\n    return monotonicFactoriesMap.get(storeName);\n  };\n\n  AsyncStorageDatabase.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allKeys, keysForCollectionEntries, allKeys_1, allKeys_1_1, key, _a, dbName, storeName, recordType, ulidOrId, id, ulid, id_1, newUlid, oldKey, newKey, item, e_1_1;\n\n      var e_1, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            this._collectionInMemoryIndex.clear();\n\n            return [4\n            /*yield*/\n            , this.storage.getAllKeys()];\n\n          case 1:\n            allKeys = _c.sent();\n            keysForCollectionEntries = [];\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 12, 13, 14]);\n\n            allKeys_1 = __values(allKeys), allKeys_1_1 = allKeys_1.next();\n            _c.label = 3;\n\n          case 3:\n            if (!!allKeys_1_1.done) return [3\n            /*break*/\n            , 11];\n            key = allKeys_1_1.value;\n            _a = __read(key.split('::'), 5), dbName = _a[0], storeName = _a[1], recordType = _a[2], ulidOrId = _a[3], id = _a[4];\n            if (!(dbName === DB_NAME)) return [3\n            /*break*/\n            , 10];\n            if (!(recordType === DATA)) return [3\n            /*break*/\n            , 9];\n            ulid = void 0;\n            if (!(id === undefined)) return [3\n            /*break*/\n            , 7];\n            id_1 = ulidOrId;\n            newUlid = this.getMonotonicFactory(storeName)();\n            oldKey = this.getLegacyKeyForItem(storeName, id_1);\n            newKey = this.getKeyForItem(storeName, id_1, newUlid);\n            return [4\n            /*yield*/\n            , this.storage.getItem(oldKey)];\n\n          case 4:\n            item = _c.sent();\n            return [4\n            /*yield*/\n            , this.storage.setItem(newKey, item)];\n\n          case 5:\n            _c.sent();\n\n            return [4\n            /*yield*/\n            , this.storage.removeItem(oldKey)];\n\n          case 6:\n            _c.sent();\n\n            ulid = newUlid;\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            ulid = ulidOrId;\n            _c.label = 8;\n\n          case 8:\n            this.getCollectionIndex(storeName).set(id, ulid);\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            if (recordType === COLLECTION) {\n              keysForCollectionEntries.push(key);\n            }\n\n            _c.label = 10;\n\n          case 10:\n            allKeys_1_1 = allKeys_1.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 11:\n            return [3\n            /*break*/\n            , 14];\n\n          case 12:\n            e_1_1 = _c.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 14];\n\n          case 13:\n            try {\n              if (allKeys_1_1 && !allKeys_1_1.done && (_b = allKeys_1.return)) _b.call(allKeys_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 14:\n            if (!(keysForCollectionEntries.length > 0)) return [3\n            /*break*/\n            , 16];\n            return [4\n            /*yield*/\n            , this.storage.multiRemove(keysForCollectionEntries)];\n\n          case 15:\n            _c.sent();\n\n            _c.label = 16;\n\n          case 16:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.save = function (item, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(item.id) || this.getMonotonicFactory(storeName)();\n            itemKey = this.getKeyForItem(storeName, item.id, ulid);\n            this.getCollectionIndex(storeName).set(item.id, ulid);\n            return [4\n            /*yield*/\n            , this.storage.setItem(itemKey, JSON.stringify(item))];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.batchSave = function (storeName, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, collection, keysToDelete, keysToSave, allItemsKeys, itemsMap, items_1, items_1_1, item, id, _deleted, ulid, key, existingRecordsMap, existingRecordsKeys, allItemsKeys_1, allItemsKeys_1_1, key;\n\n      var e_2, _a, e_3, _b;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            result = [];\n            collection = this.getCollectionIndex(storeName);\n            keysToDelete = new Set();\n            keysToSave = new Set();\n            allItemsKeys = [];\n            itemsMap = {};\n\n            try {\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                id = item.id, _deleted = item._deleted;\n                ulid = collection.get(id) || this.getMonotonicFactory(storeName)();\n                key = this.getKeyForItem(storeName, id, ulid);\n                allItemsKeys.push(key);\n                itemsMap[key] = {\n                  ulid: ulid,\n                  model: item\n                };\n\n                if (_deleted) {\n                  keysToDelete.add(key);\n                } else {\n                  keysToSave.add(key);\n                }\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.storage.multiGet(allItemsKeys)];\n\n          case 1:\n            existingRecordsMap = _c.sent();\n            existingRecordsKeys = existingRecordsMap.filter(function (_a) {\n              var _b = __read(_a, 2),\n                  v = _b[1];\n\n              return !!v;\n            }).reduce(function (set, _a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return set.add(k);\n            }, new Set());\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              if (keysToDelete.size === 0) {\n                resolve();\n                return;\n              }\n\n              var keysToDeleteArray = Array.from(keysToDelete);\n              keysToDeleteArray.forEach(function (key) {\n                return collection.delete(itemsMap[key].model.id);\n              });\n\n              _this.storage.multiRemove(keysToDeleteArray, function (errors) {\n                if (errors && errors.length > 0) {\n                  reject(errors);\n                } else {\n                  resolve();\n                }\n              });\n            })];\n\n          case 2:\n            _c.sent();\n\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              if (keysToSave.size === 0) {\n                resolve();\n                return;\n              }\n\n              var entriesToSet = Array.from(keysToSave).map(function (key) {\n                return [key, JSON.stringify(itemsMap[key].model)];\n              });\n              keysToSave.forEach(function (key) {\n                var _a = itemsMap[key],\n                    id = _a.model.id,\n                    ulid = _a.ulid;\n                collection.set(id, ulid);\n              });\n\n              _this.storage.multiSet(entriesToSet, function (errors) {\n                if (errors && errors.length > 0) {\n                  reject(errors);\n                } else {\n                  resolve();\n                }\n              });\n            })];\n\n          case 3:\n            _c.sent();\n\n            try {\n              for (allItemsKeys_1 = __values(allItemsKeys), allItemsKeys_1_1 = allItemsKeys_1.next(); !allItemsKeys_1_1.done; allItemsKeys_1_1 = allItemsKeys_1.next()) {\n                key = allItemsKeys_1_1.value;\n\n                if (keysToDelete.has(key) && existingRecordsKeys.has(key)) {\n                  result.push([itemsMap[key].model, OpType.DELETE]);\n                } else if (keysToSave.has(key)) {\n                  result.push([itemsMap[key].model, existingRecordsKeys.has(key) ? OpType.UPDATE : OpType.INSERT]);\n                }\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (allItemsKeys_1_1 && !allItemsKeys_1_1.done && (_b = allItemsKeys_1.return)) _b.call(allItemsKeys_1);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.get = function (id, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey, recordAsString, record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(id);\n            itemKey = this.getKeyForItem(storeName, id, ulid);\n            return [4\n            /*yield*/\n            , this.storage.getItem(itemKey)];\n\n          case 1:\n            recordAsString = _a.sent();\n            record = recordAsString && JSON.parse(recordAsString);\n            return [2\n            /*return*/\n            , record];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.getOne = function (firstOrLast, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var collection, _a, itemId, ulid, itemKey, itemString, _b, result;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            collection = this.getCollectionIndex(storeName);\n            _a = __read(firstOrLast === QueryOne.FIRST ? function () {\n              var e_4, _a, _b;\n\n              var id, ulid;\n\n              try {\n                for (var collection_1 = __values(collection), collection_1_1 = collection_1.next(); !collection_1_1.done; collection_1_1 = collection_1.next()) {\n                  _b = __read(collection_1_1.value, 2), id = _b[0], ulid = _b[1];\n                  break;\n                } // Get first element of the set\n\n              } catch (e_4_1) {\n                e_4 = {\n                  error: e_4_1\n                };\n              } finally {\n                try {\n                  if (collection_1_1 && !collection_1_1.done && (_a = collection_1.return)) _a.call(collection_1);\n                } finally {\n                  if (e_4) throw e_4.error;\n                }\n              }\n\n              return [id, ulid];\n            }() : function () {\n              var e_5, _a, _b;\n\n              var id, ulid;\n\n              try {\n                for (var collection_2 = __values(collection), collection_2_1 = collection_2.next(); !collection_2_1.done; collection_2_1 = collection_2.next()) {\n                  _b = __read(collection_2_1.value, 2), id = _b[0], ulid = _b[1];\n                  ;\n                } // Get last element of the set\n\n              } catch (e_5_1) {\n                e_5 = {\n                  error: e_5_1\n                };\n              } finally {\n                try {\n                  if (collection_2_1 && !collection_2_1.done && (_a = collection_2.return)) _a.call(collection_2);\n                } finally {\n                  if (e_5) throw e_5.error;\n                }\n              }\n\n              return [id, ulid];\n            }(), 2), itemId = _a[0], ulid = _a[1];\n            itemKey = this.getKeyForItem(storeName, itemId, ulid);\n            _b = itemKey;\n            if (!_b) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.storage.getItem(itemKey)];\n\n          case 1:\n            _b = _c.sent();\n            _c.label = 2;\n\n          case 2:\n            itemString = _b;\n            result = itemString ? JSON.parse(itemString) || undefined : undefined;\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * This function gets all the records stored in async storage for a particular storeName\n   * It then loads all the records for that filtered set of keys using multiGet()\n   */\n\n\n  AsyncStorageDatabase.prototype.getAll = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var collection, _a, _b, page, _c, limit, start, end, keysForStore, count, collection_3, collection_3_1, _d, id, ulid, storeRecordStrings, records;\n\n      var e_6, _e;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            collection = this.getCollectionIndex(storeName);\n            _a = pagination || {}, _b = _a.page, page = _b === void 0 ? 0 : _b, _c = _a.limit, limit = _c === void 0 ? 0 : _c;\n            start = Math.max(0, page * limit) || 0;\n            end = limit > 0 ? start + limit : undefined;\n            keysForStore = [];\n            count = 0;\n\n            try {\n              for (collection_3 = __values(collection), collection_3_1 = collection_3.next(); !collection_3_1.done; collection_3_1 = collection_3.next()) {\n                _d = __read(collection_3_1.value, 2), id = _d[0], ulid = _d[1];\n                count++;\n\n                if (count <= start) {\n                  continue;\n                }\n\n                keysForStore.push(this.getKeyForItem(storeName, id, ulid));\n\n                if (count === end) {\n                  break;\n                }\n              }\n            } catch (e_6_1) {\n              e_6 = {\n                error: e_6_1\n              };\n            } finally {\n              try {\n                if (collection_3_1 && !collection_3_1.done && (_e = collection_3.return)) _e.call(collection_3);\n              } finally {\n                if (e_6) throw e_6.error;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.storage.multiGet(keysForStore)];\n\n          case 1:\n            storeRecordStrings = _f.sent();\n            records = storeRecordStrings.filter(function (_a) {\n              var _b = __read(_a, 2),\n                  value = _b[1];\n\n              return value;\n            }).map(function (_a) {\n              var _b = __read(_a, 2),\n                  value = _b[1];\n\n              return JSON.parse(value);\n            });\n            return [2\n            /*return*/\n            , records];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.delete = function (id, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(id);\n            itemKey = this.getKeyForItem(storeName, id, ulid);\n            this.getCollectionIndex(storeName).delete(id);\n            return [4\n            /*yield*/\n            , this.storage.removeItem(itemKey)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Clear the AsyncStorage of all DataStore entries\n   */\n\n\n  AsyncStorageDatabase.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allKeys, allDataStoreKeys;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.storage.getAllKeys()];\n\n          case 1:\n            allKeys = _a.sent();\n            allDataStoreKeys = allKeys.filter(function (key) {\n              return key.startsWith(DB_NAME);\n            });\n            return [4\n            /*yield*/\n            , this.storage.multiRemove(allDataStoreKeys)];\n\n          case 2:\n            _a.sent();\n\n            this._collectionInMemoryIndex.clear();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AsyncStorageDatabase.prototype.getKeyForItem = function (storeName, id, ulid) {\n    return this.getKeyPrefixForStoreItems(storeName) + \"::\" + ulid + \"::\" + id;\n  };\n\n  AsyncStorageDatabase.prototype.getLegacyKeyForItem = function (storeName, id) {\n    return this.getKeyPrefixForStoreItems(storeName) + \"::\" + id;\n  };\n\n  AsyncStorageDatabase.prototype.getKeyPrefixForStoreItems = function (storeName) {\n    return DB_NAME + \"::\" + storeName + \"::\" + DATA;\n  };\n\n  return AsyncStorageDatabase;\n}();\n\nexport default AsyncStorageDatabase;","map":{"version":3,"mappings":"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","names":["OpType","QueryOne","monotonicUlidFactory","createInMemoryStore","DB_NAME","COLLECTION","DATA","monotonicFactoriesMap","Map","AsyncStorageDatabase","storeName","_collectionInMemoryIndex","has","set","get","clear","storage","getAllKeys","allKeys","_c","keysForCollectionEntries","allKeys_1","allKeys_1_1","key","_a","split","dbName","recordType","ulidOrId","id","ulid","undefined","id_1","newUlid","getMonotonicFactory","oldKey","getLegacyKeyForItem","newKey","getKeyForItem","getItem","item","setItem","removeItem","getCollectionIndex","push","length","multiRemove","itemKey","JSON","stringify","items","result","collection","keysToDelete","Set","keysToSave","allItemsKeys","itemsMap","items_1","items_1_1","_deleted","model","add","multiGet","existingRecordsMap","existingRecordsKeys","filter","_b","v","reduce","k","Promise","resolve","reject","size","keysToDeleteArray","Array","from","forEach","delete","_this","errors","entriesToSet","map","multiSet","allItemsKeys_1","allItemsKeys_1_1","DELETE","UPDATE","INSERT","recordAsString","record","parse","firstOrLast","FIRST","collection_1_1","collection_2_1","itemId","itemString","pagination","page","limit","start","Math","max","end","keysForStore","count","collection_3","collection_3_1","_d","storeRecordStrings","_f","records","value","allDataStoreKeys","startsWith","getKeyPrefixForStoreItems"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/datastore/src/storage/adapter/AsyncStorageDatabase.ts"],"sourcesContent":["import { ULID } from 'ulid';\nimport {\n\tModelInstanceMetadata,\n\tOpType,\n\tPaginationInput,\n\tPersistentModel,\n\tQueryOne,\n} from '../../types';\nimport { monotonicUlidFactory } from '../../util';\nimport { createInMemoryStore } from './InMemoryStore';\n\nconst DB_NAME = '@AmplifyDatastore';\nconst COLLECTION = 'Collection';\nconst DATA = 'Data';\n\nconst monotonicFactoriesMap = new Map<string, ULID>();\n\nclass AsyncStorageDatabase {\n\t/**\n\t * Maps storeNames to a map of ulid->id\n\t */\n\tprivate _collectionInMemoryIndex = new Map<string, Map<string, string>>();\n\n\tprivate storage = createInMemoryStore();\n\n\tprivate getCollectionIndex(storeName: string) {\n\t\tif (!this._collectionInMemoryIndex.has(storeName)) {\n\t\t\tthis._collectionInMemoryIndex.set(storeName, new Map());\n\t\t}\n\n\t\treturn this._collectionInMemoryIndex.get(storeName);\n\t}\n\n\tprivate getMonotonicFactory(storeName: string): ULID {\n\t\tif (!monotonicFactoriesMap.has(storeName)) {\n\t\t\tmonotonicFactoriesMap.set(storeName, monotonicUlidFactory());\n\t\t}\n\n\t\treturn monotonicFactoriesMap.get(storeName);\n\t}\n\n\tasync init(): Promise<void> {\n\t\tthis._collectionInMemoryIndex.clear();\n\n\t\tconst allKeys: string[] = await this.storage.getAllKeys();\n\n\t\tconst keysForCollectionEntries = [];\n\n\t\tfor (const key of allKeys) {\n\t\t\tconst [dbName, storeName, recordType, ulidOrId, id] = key.split('::');\n\n\t\t\tif (dbName === DB_NAME) {\n\t\t\t\tif (recordType === DATA) {\n\t\t\t\t\tlet ulid: string;\n\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\t// It is an old entry (without ulid). Need to migrate to new key format\n\n\t\t\t\t\t\tconst id = ulidOrId;\n\n\t\t\t\t\t\tconst newUlid = this.getMonotonicFactory(storeName)();\n\n\t\t\t\t\t\tconst oldKey = this.getLegacyKeyForItem(storeName, id);\n\t\t\t\t\t\tconst newKey = this.getKeyForItem(storeName, id, newUlid);\n\n\t\t\t\t\t\tconst item = await this.storage.getItem(oldKey);\n\n\t\t\t\t\t\tawait this.storage.setItem(newKey, item);\n\t\t\t\t\t\tawait this.storage.removeItem(oldKey);\n\n\t\t\t\t\t\tulid = newUlid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tulid = ulidOrId;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.getCollectionIndex(storeName).set(id, ulid);\n\t\t\t\t} else if (recordType === COLLECTION) {\n\t\t\t\t\tkeysForCollectionEntries.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (keysForCollectionEntries.length > 0) {\n\t\t\tawait this.storage.multiRemove(keysForCollectionEntries);\n\t\t}\n\t}\n\n\tasync save<T extends PersistentModel>(item: T, storeName: string) {\n\t\tconst ulid =\n\t\t\tthis.getCollectionIndex(storeName).get(item.id) ||\n\t\t\tthis.getMonotonicFactory(storeName)();\n\n\t\tconst itemKey = this.getKeyForItem(storeName, item.id, ulid);\n\n\t\tthis.getCollectionIndex(storeName).set(item.id, ulid);\n\n\t\tawait this.storage.setItem(itemKey, JSON.stringify(item));\n\t}\n\n\tasync batchSave<T extends PersistentModel>(\n\t\tstoreName: string,\n\t\titems: ModelInstanceMetadata[]\n\t): Promise<[T, OpType][]> {\n\t\tif (items.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: [T, OpType][] = [];\n\n\t\tconst collection = this.getCollectionIndex(storeName);\n\n\t\tconst keysToDelete = new Set<string>();\n\t\tconst keysToSave = new Set<string>();\n\t\tconst allItemsKeys = [];\n\t\tconst itemsMap: Record<string, { ulid: string; model: T }> = {};\n\t\tfor (const item of items) {\n\t\t\tconst { id, _deleted } = item;\n\t\t\tconst ulid = collection.get(id) || this.getMonotonicFactory(storeName)();\n\n\t\t\tconst key = this.getKeyForItem(storeName, id, ulid);\n\n\t\t\tallItemsKeys.push(key);\n\t\t\titemsMap[key] = { ulid, model: <T>(<unknown>item) };\n\n\t\t\tif (_deleted) {\n\t\t\t\tkeysToDelete.add(key);\n\t\t\t} else {\n\t\t\t\tkeysToSave.add(key);\n\t\t\t}\n\t\t}\n\n\t\tconst existingRecordsMap: [string, string][] = await this.storage.multiGet(\n\t\t\tallItemsKeys\n\t\t);\n\t\tconst existingRecordsKeys = existingRecordsMap\n\t\t\t.filter(([, v]) => !!v)\n\t\t\t.reduce((set, [k]) => set.add(k), new Set<string>());\n\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tif (keysToDelete.size === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst keysToDeleteArray = Array.from(keysToDelete);\n\n\t\t\tkeysToDeleteArray.forEach(key =>\n\t\t\t\tcollection.delete(itemsMap[key].model.id)\n\t\t\t);\n\n\t\t\tthis.storage.multiRemove(keysToDeleteArray, (errors?: Error[]) => {\n\t\t\t\tif (errors && errors.length > 0) {\n\t\t\t\t\treject(errors);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tif (keysToSave.size === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst entriesToSet = Array.from(keysToSave).map(key => [\n\t\t\t\tkey,\n\t\t\t\tJSON.stringify(itemsMap[key].model),\n\t\t\t]);\n\n\t\t\tkeysToSave.forEach(key => {\n\t\t\t\tconst {\n\t\t\t\t\tmodel: { id },\n\t\t\t\t\tulid,\n\t\t\t\t} = itemsMap[key];\n\n\t\t\t\tcollection.set(id, ulid);\n\t\t\t});\n\n\t\t\tthis.storage.multiSet(entriesToSet, (errors?: Error[]) => {\n\t\t\t\tif (errors && errors.length > 0) {\n\t\t\t\t\treject(errors);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tfor (const key of allItemsKeys) {\n\t\t\tif (keysToDelete.has(key) && existingRecordsKeys.has(key)) {\n\t\t\t\tresult.push([itemsMap[key].model, OpType.DELETE]);\n\t\t\t} else if (keysToSave.has(key)) {\n\t\t\t\tresult.push([\n\t\t\t\t\titemsMap[key].model,\n\t\t\t\t\texistingRecordsKeys.has(key) ? OpType.UPDATE : OpType.INSERT,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync get<T extends PersistentModel>(\n\t\tid: string,\n\t\tstoreName: string\n\t): Promise<T> {\n\t\tconst ulid = this.getCollectionIndex(storeName).get(id);\n\t\tconst itemKey = this.getKeyForItem(storeName, id, ulid);\n\t\tconst recordAsString = await this.storage.getItem(itemKey);\n\t\tconst record = recordAsString && JSON.parse(recordAsString);\n\t\treturn record;\n\t}\n\n\tasync getOne(firstOrLast: QueryOne, storeName: string) {\n\t\tconst collection = this.getCollectionIndex(storeName);\n\n\t\tconst [itemId, ulid] =\n\t\t\tfirstOrLast === QueryOne.FIRST\n\t\t\t\t? (() => {\n\t\t\t\t\t\tlet id: string, ulid: string;\n\t\t\t\t\t\tfor ([id, ulid] of collection) break; // Get first element of the set\n\t\t\t\t\t\treturn [id, ulid];\n\t\t\t\t  })()\n\t\t\t\t: (() => {\n\t\t\t\t\t\tlet id: string, ulid: string;\n\t\t\t\t\t\tfor ([id, ulid] of collection); // Get last element of the set\n\t\t\t\t\t\treturn [id, ulid];\n\t\t\t\t  })();\n\t\tconst itemKey = this.getKeyForItem(storeName, itemId, ulid);\n\t\tconst itemString = itemKey && (await this.storage.getItem(itemKey));\n\n\t\tconst result = itemString ? JSON.parse(itemString) || undefined : undefined;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * This function gets all the records stored in async storage for a particular storeName\n\t * It then loads all the records for that filtered set of keys using multiGet()\n\t */\n\tasync getAll<T extends PersistentModel>(\n\t\tstoreName: string,\n\t\tpagination?: PaginationInput<T>\n\t): Promise<T[]> {\n\t\tconst collection = this.getCollectionIndex(storeName);\n\n\t\tconst { page = 0, limit = 0 } = pagination || {};\n\t\tconst start = Math.max(0, page * limit) || 0;\n\t\tconst end = limit > 0 ? start + limit : undefined;\n\n\t\tconst keysForStore: string[] = [];\n\t\tlet count = 0;\n\t\tfor (const [id, ulid] of collection) {\n\t\t\tcount++;\n\n\t\t\tif (count <= start) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeysForStore.push(this.getKeyForItem(storeName, id, ulid));\n\n\t\t\tif (count === end) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst storeRecordStrings = await this.storage.multiGet(keysForStore);\n\t\tconst records = storeRecordStrings\n\t\t\t.filter(([, value]) => value)\n\t\t\t.map(([, value]) => JSON.parse(value));\n\n\t\treturn records;\n\t}\n\n\tasync delete(id: string, storeName: string) {\n\t\tconst ulid = this.getCollectionIndex(storeName).get(id);\n\t\tconst itemKey = this.getKeyForItem(storeName, id, ulid);\n\n\t\tthis.getCollectionIndex(storeName).delete(id);\n\t\tawait this.storage.removeItem(itemKey);\n\t}\n\n\t/**\n\t * Clear the AsyncStorage of all DataStore entries\n\t */\n\tasync clear() {\n\t\tconst allKeys = await this.storage.getAllKeys();\n\t\tconst allDataStoreKeys = allKeys.filter(key => key.startsWith(DB_NAME));\n\t\tawait this.storage.multiRemove(allDataStoreKeys);\n\t\tthis._collectionInMemoryIndex.clear();\n\t}\n\n\tprivate getKeyForItem(storeName: string, id: string, ulid: string): string {\n\t\treturn `${this.getKeyPrefixForStoreItems(storeName)}::${ulid}::${id}`;\n\t}\n\n\tprivate getLegacyKeyForItem(storeName: string, id: string): string {\n\t\treturn `${this.getKeyPrefixForStoreItems(storeName)}::${id}`;\n\t}\n\n\tprivate getKeyPrefixForStoreItems(storeName: string): string {\n\t\treturn `${DB_NAME}::${storeName}::${DATA}`;\n\t}\n}\n\nexport default AsyncStorageDatabase;\n"]},"metadata":{},"sourceType":"module"}