{"ast":null,"code":"import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n  var port = request.port,\n      query = request.query;\n  var protocol = request.protocol,\n      path = request.path,\n      hostname = request.hostname;\n\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n\n  if (port) {\n    hostname += \":\" + port;\n  }\n\n  if (path && path.charAt(0) !== \"/\") {\n    path = \"/\" + path;\n  }\n\n  var queryString = query ? buildQueryString(query) : \"\";\n\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = \"?\" + queryString;\n  }\n\n  return protocol + \"//\" + hostname + path + queryString;\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,8BAAjC;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;EAC/B,IAAIC,IAAI,GAAGD,OAAO,CAACC,IAAnB;EAAA,IAAyBC,KAAK,GAAGF,OAAO,CAACE,KAAzC;EACA,IAAIC,QAAQ,GAAGH,OAAO,CAACG,QAAvB;EAAA,IAAiCC,IAAI,GAAGJ,OAAO,CAACI,IAAhD;EAAA,IAAsDC,QAAQ,GAAGL,OAAO,CAACK,QAAzE;;EACA,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAT,CAAgB,CAAC,CAAjB,MAAwB,GAAxC,EAA6C;IACzCH,QAAQ,IAAI,GAAZ;EACH;;EACD,IAAIF,IAAJ,EAAU;IACNI,QAAQ,IAAI,MAAMJ,IAAlB;EACH;;EACD,IAAIG,IAAI,IAAIA,IAAI,CAACG,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC;IAChCH,IAAI,GAAG,MAAMA,IAAb;EACH;;EACD,IAAII,WAAW,GAAGN,KAAK,GAAGJ,gBAAgB,CAACI,KAAD,CAAnB,GAA6B,EAApD;;EACA,IAAIM,WAAW,IAAIA,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAtC,EAA2C;IACvCA,WAAW,GAAG,MAAMA,WAApB;EACH;;EACD,OAAOL,QAAQ,GAAG,IAAX,GAAkBE,QAAlB,GAA6BD,IAA7B,GAAoCI,WAA3C;AACH","names":["buildQueryString","formatUrl","request","query","path","hostname","protocol","substr","port","charAt","queryString"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/util-format-url/src/index.ts"],"sourcesContent":["import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HttpRequest } from \"@aws-sdk/types\";\n\nexport function formatUrl(request: Omit<HttpRequest, \"headers\" | \"method\">): string {\n  const { port, query } = request;\n  let { protocol, path, hostname } = request;\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  if (port) {\n    hostname += `:${port}`;\n  }\n  if (path && path.charAt(0) !== \"/\") {\n    path = `/${path}`;\n  }\n  let queryString = query ? buildQueryString(query) : \"\";\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = `?${queryString}`;\n  }\n  return `${protocol}//${hostname}${path}${queryString}`;\n}\n"]},"metadata":{},"sourceType":"module"}