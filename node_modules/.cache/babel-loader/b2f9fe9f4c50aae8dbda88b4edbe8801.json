{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Circle, CircleWarp, ParticlesInteractorBase } from \"../../../Core\";\nimport { getDistance, getLinkRandomColor } from \"../../../Utils\";\n\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n  var distance = getDistance(pos1, pos2);\n\n  if (!warp || distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2NE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y\n  };\n  distance = getDistance(pos1, pos2NE);\n\n  if (distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2SE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y - canvasSize.height\n  };\n  distance = getDistance(pos1, pos2SE);\n\n  if (distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2SW = {\n    x: pos2.x,\n    y: pos2.y - canvasSize.height\n  };\n  distance = getDistance(pos1, pos2SW);\n  return distance;\n}\n\nexport var Linker = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Linker, _ParticlesInteractorB);\n\n  var _super = _createSuper(Linker);\n\n  function Linker(container) {\n    _classCallCheck(this, Linker);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Linker, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.links.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(p1) {\n        var _a, pos1, container, canvasSize, linkOpt1, optOpacity, optDistance, warp, range, query, _iterator, _step, p2, linkOpt2, pos2, distance, opacityLine;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                p1.links = [];\n                pos1 = p1.getPosition();\n                container = this.container;\n                canvasSize = container.canvas.size;\n\n                if (!(pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                linkOpt1 = p1.options.links;\n                optOpacity = linkOpt1.opacity;\n                optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n                warp = linkOpt1.warp;\n                range = warp ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Circle(pos1.x, pos1.y, optDistance);\n                query = container.particles.quadTree.query(range);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 13;\n\n                _iterator.s();\n\n              case 15:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 31;\n                  break;\n                }\n\n                p2 = _step.value;\n                linkOpt2 = p2.options.links;\n\n                if (!(p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || p1.links.map(function (t) {\n                  return t.destination;\n                }).indexOf(p2) !== -1 || p2.links.map(function (t) {\n                  return t.destination;\n                }).indexOf(p1) !== -1)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 29);\n\n              case 20:\n                pos2 = p2.getPosition();\n\n                if (!(pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 29);\n\n              case 23:\n                distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n\n                if (!(distance > optDistance)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 26:\n                opacityLine = (1 - distance / optDistance) * optOpacity;\n                this.setColor(p1);\n                p1.links.push({\n                  destination: p2,\n                  opacity: opacityLine\n                });\n\n              case 29:\n                _context.next = 15;\n                break;\n\n              case 31:\n                _context.next = 36;\n                break;\n\n              case 33:\n                _context.prev = 33;\n                _context.t0 = _context[\"catch\"](13);\n\n                _iterator.e(_context.t0);\n\n              case 36:\n                _context.prev = 36;\n\n                _iterator.f();\n\n                return _context.finish(36);\n\n              case 39:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[13, 33, 36, 39]]);\n      }));\n\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"setColor\",\n    value: function setColor(p1) {\n      var container = this.container;\n      var linksOptions = p1.options.links;\n      var linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);\n\n      if (!linkColor) {\n        var optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n\n        if (linksOptions.id === undefined) {\n          container.particles.linksColor = linkColor;\n        } else {\n          container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n      }\n    }\n  }]);\n\n  return Linker;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["Circle","CircleWarp","ParticlesInteractorBase","getDistance","getLinkRandomColor","getLinkDistance","pos1","pos2","optDistance","canvasSize","warp","distance","pos2NE","x","width","y","pos2SE","height","pos2SW","Linker","container","particle","options","links","enable","p1","getPosition","canvas","size","linkOpt1","optOpacity","opacity","_a","retina","linksDistance","range","query","particles","quadTree","p2","linkOpt2","id","spawning","destroyed","map","t","destination","indexOf","opacityLine","setColor","push","linksOptions","linkColor","undefined","linksColor","linksColors","get","optColor","color","blink","consent","set"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/tsparticles/esm/Interactions/Particles/Links/Linker.js"],"sourcesContent":["import { Circle, CircleWarp, ParticlesInteractorBase } from \"../../../Core\";\nimport { getDistance, getLinkRandomColor } from \"../../../Utils\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        var _a;\n        p1.links = [];\n        const pos1 = p1.getPosition();\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const warp = linkOpt1.warp;\n        const range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    setColor(p1) {\n        const container = this.container;\n        const linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (!linkColor) {\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        }\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,uBAA7B,QAA4D,eAA5D;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,gBAAhD;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,WAArC,EAAkDC,UAAlD,EAA8DC,IAA9D,EAAoE;EAChE,IAAIC,QAAQ,GAAGR,WAAW,CAACG,IAAD,EAAOC,IAAP,CAA1B;;EACA,IAAI,CAACG,IAAD,IAASC,QAAQ,IAAIH,WAAzB,EAAsC;IAClC,OAAOG,QAAP;EACH;;EACD,IAAMC,MAAM,GAAG;IACXC,CAAC,EAAEN,IAAI,CAACM,CAAL,GAASJ,UAAU,CAACK,KADZ;IAEXC,CAAC,EAAER,IAAI,CAACQ;EAFG,CAAf;EAIAJ,QAAQ,GAAGR,WAAW,CAACG,IAAD,EAAOM,MAAP,CAAtB;;EACA,IAAID,QAAQ,IAAIH,WAAhB,EAA6B;IACzB,OAAOG,QAAP;EACH;;EACD,IAAMK,MAAM,GAAG;IACXH,CAAC,EAAEN,IAAI,CAACM,CAAL,GAASJ,UAAU,CAACK,KADZ;IAEXC,CAAC,EAAER,IAAI,CAACQ,CAAL,GAASN,UAAU,CAACQ;EAFZ,CAAf;EAIAN,QAAQ,GAAGR,WAAW,CAACG,IAAD,EAAOU,MAAP,CAAtB;;EACA,IAAIL,QAAQ,IAAIH,WAAhB,EAA6B;IACzB,OAAOG,QAAP;EACH;;EACD,IAAMO,MAAM,GAAG;IACXL,CAAC,EAAEN,IAAI,CAACM,CADG;IAEXE,CAAC,EAAER,IAAI,CAACQ,CAAL,GAASN,UAAU,CAACQ;EAFZ,CAAf;EAIAN,QAAQ,GAAGR,WAAW,CAACG,IAAD,EAAOY,MAAP,CAAtB;EACA,OAAOP,QAAP;AACH;;AACD,WAAaQ,MAAb;EAAA;;EAAA;;EACI,gBAAYC,SAAZ,EAAuB;IAAA;;IAAA,yBACbA,SADa;EAEtB;;EAHL;IAAA;IAAA,OAII,mBAAUC,QAAV,EAAoB;MAChB,OAAOA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,CAAuBC,MAA9B;IACH;EANL;IAAA;IAAA,OAOI,iBAAQ,CACP;EARL;IAAA;IAAA;MAAA,yEASI,iBAAeC,EAAf;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAEIA,EAAE,CAACF,KAAH,GAAW,EAAX;gBACMjB,IAHV,GAGiBmB,EAAE,CAACC,WAAH,EAHjB;gBAIUN,SAJV,GAIsB,KAAKA,SAJ3B;gBAKUX,UALV,GAKuBW,SAAS,CAACO,MAAV,CAAiBC,IALxC;;gBAAA,MAMQtB,IAAI,CAACO,CAAL,GAAS,CAAT,IAAcP,IAAI,CAACS,CAAL,GAAS,CAAvB,IAA4BT,IAAI,CAACO,CAAL,GAASJ,UAAU,CAACK,KAAhD,IAAyDR,IAAI,CAACS,CAAL,GAASN,UAAU,CAACQ,MANrF;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBASUY,QATV,GASqBJ,EAAE,CAACH,OAAH,CAAWC,KAThC;gBAUUO,UAVV,GAUuBD,QAAQ,CAACE,OAVhC;gBAWUvB,WAXV,GAWwB,CAACwB,EAAE,GAAGP,EAAE,CAACQ,MAAH,CAAUC,aAAhB,MAAmC,IAAnC,IAA2CF,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgEZ,SAAS,CAACa,MAAV,CAAiBC,aAXzG;gBAYUxB,IAZV,GAYiBmB,QAAQ,CAACnB,IAZ1B;gBAaUyB,KAbV,GAakBzB,IAAI,GACZ,IAAIT,UAAJ,CAAeK,IAAI,CAACO,CAApB,EAAuBP,IAAI,CAACS,CAA5B,EAA+BP,WAA/B,EAA4CC,UAA5C,CADY,GAEZ,IAAIT,MAAJ,CAAWM,IAAI,CAACO,CAAhB,EAAmBP,IAAI,CAACS,CAAxB,EAA2BP,WAA3B,CAfV;gBAgBU4B,KAhBV,GAgBkBhB,SAAS,CAACiB,SAAV,CAAoBC,QAApB,CAA6BF,KAA7B,CAAmCD,KAAnC,CAhBlB;gBAAA,uCAiBqBC,KAjBrB;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAiBeG,EAjBf;gBAkBcC,QAlBd,GAkByBD,EAAE,CAACjB,OAAH,CAAWC,KAlBpC;;gBAAA,MAmBYE,EAAE,KAAKc,EAAP,IACA,CAACC,QAAQ,CAAChB,MADV,IAEAK,QAAQ,CAACY,EAAT,KAAgBD,QAAQ,CAACC,EAFzB,IAGAF,EAAE,CAACG,QAHH,IAIAH,EAAE,CAACI,SAJH,IAKAlB,EAAE,CAACF,KAAH,CAASqB,GAAT,CAAa,UAACC,CAAD;kBAAA,OAAOA,CAAC,CAACC,WAAT;gBAAA,CAAb,EAAmCC,OAAnC,CAA2CR,EAA3C,MAAmD,CAAC,CALpD,IAMAA,EAAE,CAAChB,KAAH,CAASqB,GAAT,CAAa,UAACC,CAAD;kBAAA,OAAOA,CAAC,CAACC,WAAT;gBAAA,CAAb,EAAmCC,OAAnC,CAA2CtB,EAA3C,MAAmD,CAAC,CAzBhE;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBA4BclB,IA5Bd,GA4BqBgC,EAAE,CAACb,WAAH,EA5BrB;;gBAAA,MA6BYnB,IAAI,CAACM,CAAL,GAAS,CAAT,IAAcN,IAAI,CAACQ,CAAL,GAAS,CAAvB,IAA4BR,IAAI,CAACM,CAAL,GAASJ,UAAU,CAACK,KAAhD,IAAyDP,IAAI,CAACQ,CAAL,GAASN,UAAU,CAACQ,MA7BzF;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAgCcN,QAhCd,GAgCyBN,eAAe,CAACC,IAAD,EAAOC,IAAP,EAAaC,WAAb,EAA0BC,UAA1B,EAAsCC,IAAI,IAAI8B,QAAQ,CAAC9B,IAAvD,CAhCxC;;gBAAA,MAiCYC,QAAQ,GAAGH,WAjCvB;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAoCcwC,WApCd,GAoC4B,CAAC,IAAIrC,QAAQ,GAAGH,WAAhB,IAA+BsB,UApC3D;gBAqCQ,KAAKmB,QAAL,CAAcxB,EAAd;gBACAA,EAAE,CAACF,KAAH,CAAS2B,IAAT,CAAc;kBACVJ,WAAW,EAAEP,EADH;kBAEVR,OAAO,EAAEiB;gBAFC,CAAd;;cAtCR;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CATJ;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OAqDI,kBAASvB,EAAT,EAAa;MACT,IAAML,SAAS,GAAG,KAAKA,SAAvB;MACA,IAAM+B,YAAY,GAAG1B,EAAE,CAACH,OAAH,CAAWC,KAAhC;MACA,IAAI6B,SAAS,GAAGD,YAAY,CAACV,EAAb,KAAoBY,SAApB,GACVjC,SAAS,CAACiB,SAAV,CAAoBiB,UADV,GAEVlC,SAAS,CAACiB,SAAV,CAAoBkB,WAApB,CAAgCC,GAAhC,CAAoCL,YAAY,CAACV,EAAjD,CAFN;;MAGA,IAAI,CAACW,SAAL,EAAgB;QACZ,IAAMK,QAAQ,GAAGN,YAAY,CAACO,KAA9B;QACAN,SAAS,GAAGhD,kBAAkB,CAACqD,QAAD,EAAWN,YAAY,CAACQ,KAAxB,EAA+BR,YAAY,CAACS,OAA5C,CAA9B;;QACA,IAAIT,YAAY,CAACV,EAAb,KAAoBY,SAAxB,EAAmC;UAC/BjC,SAAS,CAACiB,SAAV,CAAoBiB,UAApB,GAAiCF,SAAjC;QACH,CAFD,MAGK;UACDhC,SAAS,CAACiB,SAAV,CAAoBkB,WAApB,CAAgCM,GAAhC,CAAoCV,YAAY,CAACV,EAAjD,EAAqDW,SAArD;QACH;MACJ;IACJ;EArEL;;EAAA;AAAA,EAA4BlD,uBAA5B"},"metadata":{},"sourceType":"module"}