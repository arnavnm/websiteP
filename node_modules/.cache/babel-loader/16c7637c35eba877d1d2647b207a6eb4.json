{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport API from '@aws-amplify/api';\nimport { ConsoleLogger as Logger, jitteredBackoff, NonRetryableError, retry } from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\nimport { DISCARD, isModelFieldType, isTargetNameAssociation, OpType, ProcessName } from '../../types';\nimport { exhaustiveCheck, USER, USER_AGENT_SUFFIX_DATASTORE } from '../../util';\nimport { buildGraphQLOperation, createMutationInstanceFromModelOperation, getModelAuthModes, TransformerMutationType, getTokenForCustomAuth } from '../utils';\nimport { getMutationErrorType } from './errorMaps';\nvar MAX_ATTEMPTS = 10;\nvar logger = new Logger('DataStore');\n\nvar MutationProcessor =\n/** @class */\nfunction () {\n  function MutationProcessor(schema, storage, userClasses, outbox, modelInstanceCreator, MutationEvent, amplifyConfig, authModeStrategy, errorHandler, conflictHandler, amplifyContext) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n\n    this.schema = schema;\n    this.storage = storage;\n    this.userClasses = userClasses;\n    this.outbox = outbox;\n    this.modelInstanceCreator = modelInstanceCreator;\n    this.MutationEvent = MutationEvent;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.errorHandler = errorHandler;\n    this.conflictHandler = conflictHandler;\n    this.amplifyContext = amplifyContext;\n    this.typeQuery = new WeakMap();\n    this.processing = false;\n    this.amplifyContext.API = this.amplifyContext.API || API;\n    this.generateQueries();\n  }\n\n  MutationProcessor.prototype.generateQueries = function () {\n    var _this = this;\n\n    Object.values(this.schema.namespaces).forEach(function (namespace) {\n      Object.values(namespace.models).filter(function (_a) {\n        var syncable = _a.syncable;\n        return syncable;\n      }).forEach(function (model) {\n        var _a = __read(buildGraphQLOperation(namespace, model, 'CREATE'), 1),\n            createMutation = _a[0];\n\n        var _b = __read(buildGraphQLOperation(namespace, model, 'UPDATE'), 1),\n            updateMutation = _b[0];\n\n        var _c = __read(buildGraphQLOperation(namespace, model, 'DELETE'), 1),\n            deleteMutation = _c[0];\n\n        _this.typeQuery.set(model, [createMutation, updateMutation, deleteMutation]);\n      });\n    });\n  };\n\n  MutationProcessor.prototype.isReady = function () {\n    return this.observer !== undefined;\n  };\n\n  MutationProcessor.prototype.start = function () {\n    var _this = this;\n\n    var observable = new Observable(function (observer) {\n      _this.observer = observer;\n\n      _this.resume();\n\n      return function () {\n        _this.pause();\n      };\n    });\n    return observable;\n  };\n\n  MutationProcessor.prototype.resume = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var head, namespaceName, _loop_1, this_1, _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this.processing || !this.isReady()) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            this.processing = true;\n            namespaceName = USER;\n\n            _loop_1 = function _loop_1() {\n              var model, operation, data, condition, modelConstructor, result, opName, modelDefinition, modelAuthModes, operationAuthModes_1, authModeAttempts_1, _authModeRetry_, error_1, record, hasMore;\n\n              var _a;\n\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    model = head.model, operation = head.operation, data = head.data, condition = head.condition;\n                    modelConstructor = this_1.userClasses[model];\n                    result = void 0;\n                    opName = void 0;\n                    modelDefinition = void 0;\n                    _b.label = 1;\n\n                  case 1:\n                    _b.trys.push([1, 4,, 5]);\n\n                    return [4\n                    /*yield*/\n                    , getModelAuthModes({\n                      authModeStrategy: this_1.authModeStrategy,\n                      defaultAuthMode: this_1.amplifyConfig.aws_appsync_authenticationType,\n                      modelName: model,\n                      schema: this_1.schema\n                    })];\n\n                  case 2:\n                    modelAuthModes = _b.sent();\n                    operationAuthModes_1 = modelAuthModes[operation.toUpperCase()];\n                    authModeAttempts_1 = 0;\n\n                    _authModeRetry_ = function authModeRetry_1() {\n                      return __awaiter(_this, void 0, void 0, function () {\n                        var response, error_2;\n                        return __generator(this, function (_a) {\n                          switch (_a.label) {\n                            case 0:\n                              _a.trys.push([0, 2,, 4]);\n\n                              logger.debug(\"Attempting mutation with authMode: \" + operationAuthModes_1[authModeAttempts_1]);\n                              return [4\n                              /*yield*/\n                              , this.jitteredRetry(namespaceName, model, operation, data, condition, modelConstructor, this.MutationEvent, head, operationAuthModes_1[authModeAttempts_1])];\n\n                            case 1:\n                              response = _a.sent();\n                              logger.debug(\"Mutation sent successfully with authMode: \" + operationAuthModes_1[authModeAttempts_1]);\n                              return [2\n                              /*return*/\n                              , response];\n\n                            case 2:\n                              error_2 = _a.sent();\n                              authModeAttempts_1++;\n\n                              if (authModeAttempts_1 >= operationAuthModes_1.length) {\n                                logger.debug(\"Mutation failed with authMode: \" + operationAuthModes_1[authModeAttempts_1 - 1]);\n                                throw error_2;\n                              }\n\n                              logger.debug(\"Mutation failed with authMode: \" + operationAuthModes_1[authModeAttempts_1 - 1] + \". Retrying with authMode: \" + operationAuthModes_1[authModeAttempts_1]);\n                              return [4\n                              /*yield*/\n                              , _authModeRetry_()];\n\n                            case 3:\n                              return [2\n                              /*return*/\n                              , _a.sent()];\n\n                            case 4:\n                              return [2\n                              /*return*/\n                              ];\n                          }\n                        });\n                      });\n                    };\n\n                    return [4\n                    /*yield*/\n                    , _authModeRetry_()];\n\n                  case 3:\n                    _a = __read.apply(void 0, [_b.sent(), 3]), result = _a[0], opName = _a[1], modelDefinition = _a[2];\n                    return [3\n                    /*break*/\n                    , 5];\n\n                  case 4:\n                    error_1 = _b.sent();\n\n                    if (error_1.message === 'Offline' || error_1.message === 'RetryMutation') {\n                      return [2\n                      /*return*/\n                      , \"continue\"];\n                    }\n\n                    return [3\n                    /*break*/\n                    , 5];\n\n                  case 5:\n                    if (!(result === undefined)) return [3\n                    /*break*/\n                    , 7];\n                    logger.debug('done retrying');\n                    return [4\n                    /*yield*/\n                    , this_1.storage.runExclusive(function (storage) {\n                      return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                          switch (_a.label) {\n                            case 0:\n                              return [4\n                              /*yield*/\n                              , this.outbox.dequeue(storage)];\n\n                            case 1:\n                              _a.sent();\n\n                              return [2\n                              /*return*/\n                              ];\n                          }\n                        });\n                      });\n                    })];\n\n                  case 6:\n                    _b.sent();\n\n                    return [2\n                    /*return*/\n                    , \"continue\"];\n\n                  case 7:\n                    record = result.data[opName];\n                    hasMore = false;\n                    return [4\n                    /*yield*/\n                    , this_1.storage.runExclusive(function (storage) {\n                      return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                          switch (_a.label) {\n                            case 0:\n                              // using runExclusive to prevent possible race condition\n                              // when another record gets enqueued between dequeue and peek\n                              return [4\n                              /*yield*/\n                              , this.outbox.dequeue(storage, record, operation)];\n\n                            case 1:\n                              // using runExclusive to prevent possible race condition\n                              // when another record gets enqueued between dequeue and peek\n                              _a.sent();\n\n                              return [4\n                              /*yield*/\n                              , this.outbox.peek(storage)];\n\n                            case 2:\n                              hasMore = _a.sent() !== undefined;\n                              return [2\n                              /*return*/\n                              ];\n                          }\n                        });\n                      });\n                    })];\n\n                  case 8:\n                    _b.sent();\n\n                    this_1.observer.next({\n                      operation: operation,\n                      modelDefinition: modelDefinition,\n                      model: record,\n                      hasMore: hasMore\n                    });\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _b.label = 1;\n\n          case 1:\n            _a = this.processing;\n            if (!_a) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.outbox.peek(this.storage)];\n\n          case 2:\n            _a = (head = _b.sent()) !== undefined;\n            _b.label = 3;\n\n          case 3:\n            if (!_a) return [3\n            /*break*/\n            , 5];\n            return [5\n            /*yield**/\n            , _loop_1()];\n\n          case 4:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 1];\n\n          case 5:\n            // pauses itself\n            this.pause();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  MutationProcessor.prototype.jitteredRetry = function (namespaceName, model, operation, data, condition, modelConstructor, MutationEvent, mutationEvent, authMode) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , retry(function (model, operation, data, condition, modelConstructor, MutationEvent, mutationEvent) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, query, variables, graphQLCondition, opName, modelDefinition, authToken, tryWith, attempt, opType, result, err_1, _b, error, _c, _d, code, retryWith, err_2, _e, _f, opName_1, query_1, authToken_1, serverData, namespace, updatedMutation, err_3;\n\n                var _g;\n\n                return __generator(this, function (_h) {\n                  switch (_h.label) {\n                    case 0:\n                      _a = __read(this.createQueryVariables(namespaceName, model, operation, data, condition), 5), query = _a[0], variables = _a[1], graphQLCondition = _a[2], opName = _a[3], modelDefinition = _a[4];\n                      return [4\n                      /*yield*/\n                      , getTokenForCustomAuth(authMode, this.amplifyConfig)];\n\n                    case 1:\n                      authToken = _h.sent();\n                      tryWith = {\n                        query: query,\n                        variables: variables,\n                        authMode: authMode,\n                        authToken: authToken,\n                        userAgentSuffix: USER_AGENT_SUFFIX_DATASTORE\n                      };\n                      attempt = 0;\n                      opType = this.opTypeFromTransformerOperation(operation);\n                      _h.label = 2;\n\n                    case 2:\n                      _h.trys.push([2, 4,, 20]);\n\n                      return [4\n                      /*yield*/\n                      , this.amplifyContext.API.graphql(tryWith)];\n\n                    case 3:\n                      result = _h.sent();\n                      return [2\n                      /*return*/\n                      , [result, opName, modelDefinition]];\n\n                    case 4:\n                      err_1 = _h.sent();\n                      if (!(err_1.errors && err_1.errors.length > 0)) return [3\n                      /*break*/\n                      , 18];\n                      _b = __read(err_1.errors, 1), error = _b[0];\n                      _c = error.originalError, _d = (_c === void 0 ? {} : _c).code, code = _d === void 0 ? null : _d;\n\n                      if (error.errorType === 'Unauthorized') {\n                        throw new NonRetryableError('Unauthorized');\n                      }\n\n                      if (error.message === 'Network Error' || code === 'ECONNABORTED' // refers to axios timeout error caused by device's bad network condition\n                      ) {\n                        if (!this.processing) {\n                          throw new NonRetryableError('Offline');\n                        } // TODO: Check errors on different env (react-native or other browsers)\n\n\n                        throw new Error('Network Error');\n                      }\n\n                      if (!(error.errorType === 'ConflictUnhandled')) return [3\n                      /*break*/\n                      , 13]; // TODO: add on ConflictConditionalCheck error query last from server\n\n                      attempt++;\n                      retryWith = void 0;\n                      if (!(attempt > MAX_ATTEMPTS)) return [3\n                      /*break*/\n                      , 5];\n                      retryWith = DISCARD;\n                      return [3\n                      /*break*/\n                      , 8];\n\n                    case 5:\n                      _h.trys.push([5, 7,, 8]);\n\n                      return [4\n                      /*yield*/\n                      , this.conflictHandler({\n                        modelConstructor: modelConstructor,\n                        localModel: this.modelInstanceCreator(modelConstructor, variables.input),\n                        remoteModel: this.modelInstanceCreator(modelConstructor, error.data),\n                        operation: opType,\n                        attempts: attempt\n                      })];\n\n                    case 6:\n                      retryWith = _h.sent();\n                      return [3\n                      /*break*/\n                      , 8];\n\n                    case 7:\n                      err_2 = _h.sent();\n                      logger.warn('conflict trycatch', err_2);\n                      return [3\n                      /*break*/\n                      , 20];\n\n                    case 8:\n                      if (!(retryWith === DISCARD)) return [3\n                      /*break*/\n                      , 11];\n                      _e = __read(buildGraphQLOperation(this.schema.namespaces[namespaceName], modelDefinition, 'GET'), 1), _f = __read(_e[0], 3), opName_1 = _f[1], query_1 = _f[2];\n                      return [4\n                      /*yield*/\n                      , getTokenForCustomAuth(authMode, this.amplifyConfig)];\n\n                    case 9:\n                      authToken_1 = _h.sent();\n                      return [4\n                      /*yield*/\n                      , this.amplifyContext.API.graphql({\n                        query: query_1,\n                        variables: {\n                          id: variables.input.id\n                        },\n                        authMode: authMode,\n                        authToken: authToken_1,\n                        userAgentSuffix: USER_AGENT_SUFFIX_DATASTORE\n                      })];\n\n                    case 10:\n                      serverData = _h.sent();\n                      return [2\n                      /*return*/\n                      , [serverData, opName_1, modelDefinition]];\n\n                    case 11:\n                      namespace = this.schema.namespaces[namespaceName];\n                      updatedMutation = createMutationInstanceFromModelOperation(namespace.relationships, modelDefinition, opType, modelConstructor, retryWith, graphQLCondition, MutationEvent, this.modelInstanceCreator, mutationEvent.id);\n                      return [4\n                      /*yield*/\n                      , this.storage.save(updatedMutation)];\n\n                    case 12:\n                      _h.sent();\n\n                      throw new NonRetryableError('RetryMutation');\n\n                    case 13:\n                      _h.trys.push([13, 15, 16, 17]);\n\n                      return [4\n                      /*yield*/\n                      , this.errorHandler({\n                        recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                        localModel: variables.input,\n                        message: error.message,\n                        operation: operation,\n                        errorType: getMutationErrorType(error),\n                        errorInfo: error.errorInfo,\n                        process: ProcessName.mutate,\n                        cause: error,\n                        remoteModel: error.data ? this.modelInstanceCreator(modelConstructor, error.data) : null\n                      })];\n\n                    case 14:\n                      _h.sent();\n\n                      return [3\n                      /*break*/\n                      , 17];\n\n                    case 15:\n                      err_3 = _h.sent();\n                      logger.warn('Mutation error handler failed with:', err_3);\n                      return [3\n                      /*break*/\n                      , 17];\n\n                    case 16:\n                      // Return empty tuple, dequeues the mutation\n                      return [2\n                      /*return*/\n                      , error.data ? [{\n                        data: (_g = {}, _g[opName] = error.data, _g)\n                      }, opName, modelDefinition] : []];\n\n                    case 17:\n                      return [3\n                      /*break*/\n                      , 19];\n\n                    case 18:\n                      // Catch-all for client-side errors that don't come back in the `GraphQLError` format.\n                      // These errors should not be retried.\n                      throw new NonRetryableError(err_1);\n\n                    case 19:\n                      return [3\n                      /*break*/\n                      , 20];\n\n                    case 20:\n                      if (tryWith) return [3\n                      /*break*/\n                      , 2];\n                      _h.label = 21;\n\n                    case 21:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }, [model, operation, data, condition, modelConstructor, MutationEvent, mutationEvent], safeJitteredBackoff)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  MutationProcessor.prototype.createQueryVariables = function (namespaceName, model, operation, data, condition) {\n    var e_1, _a;\n\n    var modelDefinition = this.schema.namespaces[namespaceName].models[model];\n    var primaryKey = this.schema.namespaces[namespaceName].keys[model].primaryKey;\n    var queriesTuples = this.typeQuery.get(modelDefinition);\n\n    var _b = __read(queriesTuples.find(function (_a) {\n      var _b = __read(_a, 1),\n          transformerMutationType = _b[0];\n\n      return transformerMutationType === operation;\n    }), 3),\n        opName = _b[1],\n        query = _b[2];\n\n    var _c = JSON.parse(data),\n        _version = _c._version,\n        parsedData = __rest(_c, [\"_version\"]); // include all the fields that comprise a custom PK if one is specified\n\n\n    var deleteInput = {};\n\n    if (primaryKey && primaryKey.length) {\n      try {\n        for (var primaryKey_1 = __values(primaryKey), primaryKey_1_1 = primaryKey_1.next(); !primaryKey_1_1.done; primaryKey_1_1 = primaryKey_1.next()) {\n          var pkField = primaryKey_1_1.value;\n          deleteInput[pkField] = parsedData[pkField];\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (primaryKey_1_1 && !primaryKey_1_1.done && (_a = primaryKey_1.return)) _a.call(primaryKey_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    } else {\n      deleteInput['id'] = parsedData.id;\n    }\n\n    var filteredData = operation === TransformerMutationType.DELETE ? deleteInput // For DELETE mutations, only PK is sent\n    : Object.values(modelDefinition.fields).filter(function (_a) {\n      var name = _a.name,\n          type = _a.type,\n          association = _a.association; // connections\n\n      if (isModelFieldType(type)) {\n        // BELONGS_TO\n        if (isTargetNameAssociation(association) && association.connectionType === 'BELONGS_TO') {\n          return true;\n        } // All other connections\n\n\n        return false;\n      }\n\n      if (operation === TransformerMutationType.UPDATE) {\n        // this limits the update mutation input to changed fields only\n        return parsedData.hasOwnProperty(name);\n      } // scalars and non-model types\n\n\n      return true;\n    }).map(function (_a) {\n      var name = _a.name,\n          type = _a.type,\n          association = _a.association;\n      var fieldName = name;\n      var val = parsedData[name];\n\n      if (isModelFieldType(type) && isTargetNameAssociation(association)) {\n        fieldName = association.targetName;\n        val = parsedData[fieldName];\n      }\n\n      return [fieldName, val];\n    }).reduce(function (acc, _a) {\n      var _b = __read(_a, 2),\n          k = _b[0],\n          v = _b[1];\n\n      acc[k] = v;\n      return acc;\n    }, {}); // Build mutation variables input object\n\n    var input = __assign(__assign({}, filteredData), {\n      _version: _version\n    });\n\n    var graphQLCondition = JSON.parse(condition);\n\n    var variables = __assign({\n      input: input\n    }, operation === TransformerMutationType.CREATE ? {} : {\n      condition: Object.keys(graphQLCondition).length > 0 ? graphQLCondition : null\n    });\n\n    return [query, variables, graphQLCondition, opName, modelDefinition];\n  };\n\n  MutationProcessor.prototype.opTypeFromTransformerOperation = function (operation) {\n    switch (operation) {\n      case TransformerMutationType.CREATE:\n        return OpType.INSERT;\n\n      case TransformerMutationType.DELETE:\n        return OpType.DELETE;\n\n      case TransformerMutationType.UPDATE:\n        return OpType.UPDATE;\n\n      case TransformerMutationType.GET:\n        // Intentionally blank\n        break;\n\n      default:\n        exhaustiveCheck(operation);\n    }\n  };\n\n  MutationProcessor.prototype.pause = function () {\n    this.processing = false;\n  };\n\n  return MutationProcessor;\n}();\n\nvar MAX_RETRY_DELAY_MS = 5 * 60 * 1000;\nvar originalJitteredBackoff = jitteredBackoff(MAX_RETRY_DELAY_MS);\n/**\n * @private\n * Internal use of Amplify only.\n *\n * Wraps the jittered backoff calculation to retry Network Errors indefinitely.\n * Backs off according to original jittered retry logic until the original retry\n * logic hits its max. After this occurs, if the error is a Network Error, we\n * ignore the attempt count and return MAX_RETRY_DELAY_MS to retry forever (until\n * the request succeeds).\n *\n * @param attempt ignored\n * @param _args ignored\n * @param error tested to see if `.message` is 'Network Error'\n * @returns number | false :\n */\n\nexport var safeJitteredBackoff = function safeJitteredBackoff(attempt, _args, error) {\n  var attemptResult = originalJitteredBackoff(attempt); // If this is the last attempt and it is a network error, we retry indefinitively every 5 minutes\n\n  if (attemptResult === false && (error === null || error === void 0 ? void 0 : error.message) === 'Network Error') {\n    return MAX_RETRY_DELAY_MS;\n  }\n\n  return attemptResult;\n};\nexport { MutationProcessor };","map":{"version":3,"mappings":"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","names":["API","ConsoleLogger","Logger","jitteredBackoff","NonRetryableError","retry","Observable","DISCARD","isModelFieldType","isTargetNameAssociation","OpType","ProcessName","exhaustiveCheck","USER","USER_AGENT_SUFFIX_DATASTORE","buildGraphQLOperation","createMutationInstanceFromModelOperation","getModelAuthModes","TransformerMutationType","getTokenForCustomAuth","getMutationErrorType","MAX_ATTEMPTS","logger","schema","storage","userClasses","outbox","modelInstanceCreator","MutationEvent","amplifyConfig","authModeStrategy","errorHandler","conflictHandler","amplifyContext","WeakMap","generateQueries","MutationProcessor","Object","values","namespaces","forEach","namespace","models","filter","_a","syncable","createMutation","updateMutation","deleteMutation","_this","typeQuery","set","model","observer","undefined","observable","resume","pause","processing","isReady","namespaceName","head","operation","data","condition","modelConstructor","this_1","result","opName","modelDefinition","defaultAuthMode","aws_appsync_authenticationType","modelName","modelAuthModes","_b","operationAuthModes_1","toUpperCase","authModeAttempts_1","authModeRetry_1","debug","jitteredRetry","response","length","error_2","error_1","message","runExclusive","dequeue","record","hasMore","peek","next","mutationEvent","authMode","createQueryVariables","query","variables","graphQLCondition","authToken","_h","tryWith","userAgentSuffix","attempt","opType","opTypeFromTransformerOperation","graphql","err_1","errors","error","_c","_d","code","errorType","Error","retryWith","localModel","input","remoteModel","attempts","warn","err_2","_e","_f","opName_1","query_1","authToken_1","id","serverData","updatedMutation","relationships","save","recoverySuggestion","errorInfo","process","mutate","cause","err_3","_g","safeJitteredBackoff","queriesTuples","get","_version","parsedData","deleteInput","primaryKey","primaryKey_1_1","pkField","filteredData","DELETE","fields","name","type","association","connectionType","UPDATE","hasOwnProperty","map","fieldName","val","targetName","reduce","acc","k","v","JSON","parse","CREATE","keys","INSERT","GET","MAX_RETRY_DELAY_MS","originalJitteredBackoff","_args","attemptResult"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/datastore/src/sync/processors/mutation.ts"],"sourcesContent":["import API, { GraphQLResult, GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport {\n\tConsoleLogger as Logger,\n\tjitteredBackoff,\n\tNonRetryableError,\n\tretry,\n} from '@aws-amplify/core';\nimport Observable, { ZenObservable } from 'zen-observable-ts';\nimport { MutationEvent } from '../';\nimport { ModelInstanceCreator } from '../../datastore/datastore';\nimport { ExclusiveStorage as Storage } from '../../storage/storage';\nimport {\n\tAuthModeStrategy,\n\tConflictHandler,\n\tDISCARD,\n\tErrorHandler,\n\tGraphQLCondition,\n\tInternalSchema,\n\tisModelFieldType,\n\tisTargetNameAssociation,\n\tModelInstanceMetadata,\n\tOpType,\n\tPersistentModel,\n\tPersistentModelConstructor,\n\tSchemaModel,\n\tTypeConstructorMap,\n\tProcessName,\n\tAmplifyContext,\n} from '../../types';\nimport { exhaustiveCheck, USER, USER_AGENT_SUFFIX_DATASTORE } from '../../util';\nimport { MutationEventOutbox } from '../outbox';\nimport {\n\tbuildGraphQLOperation,\n\tcreateMutationInstanceFromModelOperation,\n\tgetModelAuthModes,\n\tTransformerMutationType,\n\tgetTokenForCustomAuth,\n} from '../utils';\nimport { getMutationErrorType } from './errorMaps';\n\nconst MAX_ATTEMPTS = 10;\n\nconst logger = new Logger('DataStore');\n\ntype MutationProcessorEvent = {\n\toperation: TransformerMutationType;\n\tmodelDefinition: SchemaModel;\n\tmodel: PersistentModel;\n\thasMore: boolean;\n};\n\nclass MutationProcessor {\n\tprivate observer: ZenObservable.Observer<MutationProcessorEvent>;\n\tprivate readonly typeQuery = new WeakMap<\n\t\tSchemaModel,\n\t\t[TransformerMutationType, string, string][]\n\t>();\n\tprivate processing: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly schema: InternalSchema,\n\t\tprivate readonly storage: Storage,\n\t\tprivate readonly userClasses: TypeConstructorMap,\n\t\tprivate readonly outbox: MutationEventOutbox,\n\t\tprivate readonly modelInstanceCreator: ModelInstanceCreator,\n\t\tprivate readonly MutationEvent: PersistentModelConstructor<MutationEvent>,\n\t\tprivate readonly amplifyConfig: Record<string, any> = {},\n\t\tprivate readonly authModeStrategy: AuthModeStrategy,\n\t\tprivate readonly errorHandler: ErrorHandler,\n\t\tprivate readonly conflictHandler: ConflictHandler,\n\t\tprivate readonly amplifyContext: AmplifyContext\n\t) {\n\t\tthis.amplifyContext.API = this.amplifyContext.API || API;\n\t\tthis.generateQueries();\n\t}\n\n\tprivate generateQueries() {\n\t\tObject.values(this.schema.namespaces).forEach(namespace => {\n\t\t\tObject.values(namespace.models)\n\t\t\t\t.filter(({ syncable }) => syncable)\n\t\t\t\t.forEach(model => {\n\t\t\t\t\tconst [createMutation] = buildGraphQLOperation(\n\t\t\t\t\t\tnamespace,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t'CREATE'\n\t\t\t\t\t);\n\t\t\t\t\tconst [updateMutation] = buildGraphQLOperation(\n\t\t\t\t\t\tnamespace,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t'UPDATE'\n\t\t\t\t\t);\n\t\t\t\t\tconst [deleteMutation] = buildGraphQLOperation(\n\t\t\t\t\t\tnamespace,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t'DELETE'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.typeQuery.set(model, [\n\t\t\t\t\t\tcreateMutation,\n\t\t\t\t\t\tupdateMutation,\n\t\t\t\t\t\tdeleteMutation,\n\t\t\t\t\t]);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate isReady() {\n\t\treturn this.observer !== undefined;\n\t}\n\n\tpublic start(): Observable<MutationProcessorEvent> {\n\t\tconst observable = new Observable<MutationProcessorEvent>(observer => {\n\t\t\tthis.observer = observer;\n\n\t\t\tthis.resume();\n\n\t\t\treturn () => {\n\t\t\t\tthis.pause();\n\t\t\t};\n\t\t});\n\n\t\treturn observable;\n\t}\n\n\tpublic async resume(): Promise<void> {\n\t\tif (this.processing || !this.isReady()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.processing = true;\n\t\tlet head: MutationEvent;\n\t\tconst namespaceName = USER;\n\n\t\t// start to drain outbox\n\t\twhile (\n\t\t\tthis.processing &&\n\t\t\t(head = await this.outbox.peek(this.storage)) !== undefined\n\t\t) {\n\t\t\tconst { model, operation, data, condition } = head;\n\t\t\tconst modelConstructor = this.userClasses[\n\t\t\t\tmodel\n\t\t\t] as PersistentModelConstructor<MutationEvent>;\n\t\t\tlet result: GraphQLResult<Record<string, PersistentModel>>;\n\t\t\tlet opName: string;\n\t\t\tlet modelDefinition: SchemaModel;\n\t\t\ttry {\n\t\t\t\tconst modelAuthModes = await getModelAuthModes({\n\t\t\t\t\tauthModeStrategy: this.authModeStrategy,\n\t\t\t\t\tdefaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n\t\t\t\t\tmodelName: model,\n\t\t\t\t\tschema: this.schema,\n\t\t\t\t});\n\n\t\t\t\tconst operationAuthModes = modelAuthModes[operation.toUpperCase()];\n\n\t\t\t\tlet authModeAttempts = 0;\n\t\t\t\tconst authModeRetry = async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t`Attempting mutation with authMode: ${operationAuthModes[authModeAttempts]}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst response = await this.jitteredRetry(\n\t\t\t\t\t\t\tnamespaceName,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tcondition,\n\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\tthis.MutationEvent,\n\t\t\t\t\t\t\thead,\n\t\t\t\t\t\t\toperationAuthModes[authModeAttempts]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t`Mutation sent successfully with authMode: ${operationAuthModes[authModeAttempts]}`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tauthModeAttempts++;\n\t\t\t\t\t\tif (authModeAttempts >= operationAuthModes.length) {\n\t\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t\t`Mutation failed with authMode: ${\n\t\t\t\t\t\t\t\t\toperationAuthModes[authModeAttempts - 1]\n\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t`Mutation failed with authMode: ${\n\t\t\t\t\t\t\t\toperationAuthModes[authModeAttempts - 1]\n\t\t\t\t\t\t\t}. Retrying with authMode: ${\n\t\t\t\t\t\t\t\toperationAuthModes[authModeAttempts]\n\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn await authModeRetry();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t[result, opName, modelDefinition] = await authModeRetry();\n\t\t\t} catch (error) {\n\t\t\t\tif (error.message === 'Offline' || error.message === 'RetryMutation') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (result === undefined) {\n\t\t\t\tlogger.debug('done retrying');\n\t\t\t\tawait this.storage.runExclusive(async storage => {\n\t\t\t\t\tawait this.outbox.dequeue(storage);\n\t\t\t\t});\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst record = result.data[opName];\n\t\t\tlet hasMore = false;\n\n\t\t\tawait this.storage.runExclusive(async storage => {\n\t\t\t\t// using runExclusive to prevent possible race condition\n\t\t\t\t// when another record gets enqueued between dequeue and peek\n\t\t\t\tawait this.outbox.dequeue(storage, record, operation);\n\t\t\t\thasMore = (await this.outbox.peek(storage)) !== undefined;\n\t\t\t});\n\n\t\t\tthis.observer.next({\n\t\t\t\toperation,\n\t\t\t\tmodelDefinition,\n\t\t\t\tmodel: record,\n\t\t\t\thasMore,\n\t\t\t});\n\t\t}\n\n\t\t// pauses itself\n\t\tthis.pause();\n\t}\n\n\tprivate async jitteredRetry(\n\t\tnamespaceName: string,\n\t\tmodel: string,\n\t\toperation: TransformerMutationType,\n\t\tdata: string,\n\t\tcondition: string,\n\t\tmodelConstructor: PersistentModelConstructor<PersistentModel>,\n\t\tMutationEvent: PersistentModelConstructor<MutationEvent>,\n\t\tmutationEvent: MutationEvent,\n\t\tauthMode: GRAPHQL_AUTH_MODE\n\t): Promise<\n\t\t[GraphQLResult<Record<string, PersistentModel>>, string, SchemaModel]\n\t> {\n\t\treturn await retry(\n\t\t\tasync (\n\t\t\t\tmodel: string,\n\t\t\t\toperation: TransformerMutationType,\n\t\t\t\tdata: string,\n\t\t\t\tcondition: string,\n\t\t\t\tmodelConstructor: PersistentModelConstructor<PersistentModel>,\n\t\t\t\tMutationEvent: PersistentModelConstructor<MutationEvent>,\n\t\t\t\tmutationEvent: MutationEvent\n\t\t\t) => {\n\t\t\t\tconst [query, variables, graphQLCondition, opName, modelDefinition] =\n\t\t\t\t\tthis.createQueryVariables(\n\t\t\t\t\t\tnamespaceName,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\toperation,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tcondition\n\t\t\t\t\t);\n\n\t\t\t\tconst authToken = await getTokenForCustomAuth(\n\t\t\t\t\tauthMode,\n\t\t\t\t\tthis.amplifyConfig\n\t\t\t\t);\n\n\t\t\t\tconst tryWith = {\n\t\t\t\t\tquery,\n\t\t\t\t\tvariables,\n\t\t\t\t\tauthMode,\n\t\t\t\t\tauthToken,\n\t\t\t\t\tuserAgentSuffix: USER_AGENT_SUFFIX_DATASTORE,\n\t\t\t\t};\n\t\t\t\tlet attempt = 0;\n\n\t\t\t\tconst opType = this.opTypeFromTransformerOperation(operation);\n\n\t\t\t\tdo {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result = <GraphQLResult<Record<string, PersistentModel>>>(\n\t\t\t\t\t\t\tawait this.amplifyContext.API.graphql(tryWith)\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn [result, opName, modelDefinition];\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tif (err.errors && err.errors.length > 0) {\n\t\t\t\t\t\t\tconst [error] = err.errors;\n\t\t\t\t\t\t\tconst { originalError: { code = null } = {} } = error;\n\n\t\t\t\t\t\t\tif (error.errorType === 'Unauthorized') {\n\t\t\t\t\t\t\t\tthrow new NonRetryableError('Unauthorized');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\terror.message === 'Network Error' ||\n\t\t\t\t\t\t\t\tcode === 'ECONNABORTED' // refers to axios timeout error caused by device's bad network condition\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (!this.processing) {\n\t\t\t\t\t\t\t\t\tthrow new NonRetryableError('Offline');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: Check errors on different env (react-native or other browsers)\n\t\t\t\t\t\t\t\tthrow new Error('Network Error');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error.errorType === 'ConflictUnhandled') {\n\t\t\t\t\t\t\t\t// TODO: add on ConflictConditionalCheck error query last from server\n\t\t\t\t\t\t\t\tattempt++;\n\t\t\t\t\t\t\t\tlet retryWith: PersistentModel | typeof DISCARD;\n\n\t\t\t\t\t\t\t\tif (attempt > MAX_ATTEMPTS) {\n\t\t\t\t\t\t\t\t\tretryWith = DISCARD;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tretryWith = await this.conflictHandler({\n\t\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\t\tlocalModel: this.modelInstanceCreator(\n\t\t\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\t\t\tvariables.input\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tremoteModel: this.modelInstanceCreator(\n\t\t\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\t\t\terror.data\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\toperation: opType,\n\t\t\t\t\t\t\t\t\t\t\tattempts: attempt,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\tlogger.warn('conflict trycatch', err);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (retryWith === DISCARD) {\n\t\t\t\t\t\t\t\t\t// Query latest from server and notify merger\n\n\t\t\t\t\t\t\t\t\tconst [[, opName, query]] = buildGraphQLOperation(\n\t\t\t\t\t\t\t\t\t\tthis.schema.namespaces[namespaceName],\n\t\t\t\t\t\t\t\t\t\tmodelDefinition,\n\t\t\t\t\t\t\t\t\t\t'GET'\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst authToken = await getTokenForCustomAuth(\n\t\t\t\t\t\t\t\t\t\tauthMode,\n\t\t\t\t\t\t\t\t\t\tthis.amplifyConfig\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst serverData = <\n\t\t\t\t\t\t\t\t\t\tGraphQLResult<Record<string, PersistentModel>>\n\t\t\t\t\t\t\t\t\t>await this.amplifyContext.API.graphql({\n\t\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\t\tvariables: { id: variables.input.id },\n\t\t\t\t\t\t\t\t\t\tauthMode,\n\t\t\t\t\t\t\t\t\t\tauthToken,\n\t\t\t\t\t\t\t\t\t\tuserAgentSuffix: USER_AGENT_SUFFIX_DATASTORE,\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\treturn [serverData, opName, modelDefinition];\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst namespace = this.schema.namespaces[namespaceName];\n\n\t\t\t\t\t\t\t\t// convert retry with to tryWith\n\t\t\t\t\t\t\t\tconst updatedMutation =\n\t\t\t\t\t\t\t\t\tcreateMutationInstanceFromModelOperation(\n\t\t\t\t\t\t\t\t\t\tnamespace.relationships,\n\t\t\t\t\t\t\t\t\t\tmodelDefinition,\n\t\t\t\t\t\t\t\t\t\topType,\n\t\t\t\t\t\t\t\t\t\tmodelConstructor,\n\t\t\t\t\t\t\t\t\t\tretryWith,\n\t\t\t\t\t\t\t\t\t\tgraphQLCondition,\n\t\t\t\t\t\t\t\t\t\tMutationEvent,\n\t\t\t\t\t\t\t\t\t\tthis.modelInstanceCreator,\n\t\t\t\t\t\t\t\t\t\tmutationEvent.id\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tawait this.storage.save(updatedMutation);\n\n\t\t\t\t\t\t\t\tthrow new NonRetryableError('RetryMutation');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.errorHandler({\n\t\t\t\t\t\t\t\t\t\trecoverySuggestion:\n\t\t\t\t\t\t\t\t\t\t\t'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n\t\t\t\t\t\t\t\t\t\tlocalModel: variables.input,\n\t\t\t\t\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\t\t\terrorType: getMutationErrorType(error),\n\t\t\t\t\t\t\t\t\t\terrorInfo: error.errorInfo,\n\t\t\t\t\t\t\t\t\t\tprocess: ProcessName.mutate,\n\t\t\t\t\t\t\t\t\t\tcause: error,\n\t\t\t\t\t\t\t\t\t\tremoteModel: error.data\n\t\t\t\t\t\t\t\t\t\t\t? this.modelInstanceCreator(modelConstructor, error.data)\n\t\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\tlogger.warn('Mutation error handler failed with:', err);\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\t// Return empty tuple, dequeues the mutation\n\t\t\t\t\t\t\t\t\treturn error.data\n\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t{ data: { [opName]: error.data } },\n\t\t\t\t\t\t\t\t\t\t\t\topName,\n\t\t\t\t\t\t\t\t\t\t\t\tmodelDefinition,\n\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t: [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Catch-all for client-side errors that don't come back in the `GraphQLError` format.\n\t\t\t\t\t\t\t// These errors should not be retried.\n\t\t\t\t\t\t\tthrow new NonRetryableError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} while (tryWith);\n\t\t\t},\n\t\t\t[\n\t\t\t\tmodel,\n\t\t\t\toperation,\n\t\t\t\tdata,\n\t\t\t\tcondition,\n\t\t\t\tmodelConstructor,\n\t\t\t\tMutationEvent,\n\t\t\t\tmutationEvent,\n\t\t\t],\n\t\t\tsafeJitteredBackoff\n\t\t);\n\t}\n\n\tprivate createQueryVariables(\n\t\tnamespaceName: string,\n\t\tmodel: string,\n\t\toperation: TransformerMutationType,\n\t\tdata: string,\n\t\tcondition: string\n\t): [string, Record<string, any>, GraphQLCondition, string, SchemaModel] {\n\t\tconst modelDefinition = this.schema.namespaces[namespaceName].models[model];\n\t\tconst { primaryKey } = this.schema.namespaces[namespaceName].keys[model];\n\n\t\tconst queriesTuples = this.typeQuery.get(modelDefinition);\n\n\t\tconst [, opName, query] = queriesTuples.find(\n\t\t\t([transformerMutationType]) => transformerMutationType === operation\n\t\t);\n\n\t\tconst { _version, ...parsedData } = <ModelInstanceMetadata>JSON.parse(data);\n\n\t\t// include all the fields that comprise a custom PK if one is specified\n\t\tconst deleteInput = {};\n\t\tif (primaryKey && primaryKey.length) {\n\t\t\tfor (const pkField of primaryKey) {\n\t\t\t\tdeleteInput[pkField] = parsedData[pkField];\n\t\t\t}\n\t\t} else {\n\t\t\tdeleteInput['id'] = parsedData.id;\n\t\t}\n\n\t\tconst filteredData =\n\t\t\toperation === TransformerMutationType.DELETE\n\t\t\t\t? <ModelInstanceMetadata>deleteInput // For DELETE mutations, only PK is sent\n\t\t\t\t: Object.values(modelDefinition.fields)\n\t\t\t\t\t\t.filter(({ name, type, association }) => {\n\t\t\t\t\t\t\t// connections\n\t\t\t\t\t\t\tif (isModelFieldType(type)) {\n\t\t\t\t\t\t\t\t// BELONGS_TO\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tisTargetNameAssociation(association) &&\n\t\t\t\t\t\t\t\t\tassociation.connectionType === 'BELONGS_TO'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// All other connections\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (operation === TransformerMutationType.UPDATE) {\n\t\t\t\t\t\t\t\t// this limits the update mutation input to changed fields only\n\t\t\t\t\t\t\t\treturn parsedData.hasOwnProperty(name);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// scalars and non-model types\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(({ name, type, association }) => {\n\t\t\t\t\t\t\tlet fieldName = name;\n\t\t\t\t\t\t\tlet val = parsedData[name];\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tisModelFieldType(type) &&\n\t\t\t\t\t\t\t\tisTargetNameAssociation(association)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfieldName = association.targetName;\n\t\t\t\t\t\t\t\tval = parsedData[fieldName];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn [fieldName, val];\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce((acc, [k, v]) => {\n\t\t\t\t\t\t\tacc[k] = v;\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t}, <typeof parsedData>{});\n\n\t\t// Build mutation variables input object\n\t\tconst input: ModelInstanceMetadata = {\n\t\t\t...filteredData,\n\t\t\t_version,\n\t\t};\n\n\t\tconst graphQLCondition = <GraphQLCondition>JSON.parse(condition);\n\n\t\tconst variables = {\n\t\t\tinput,\n\t\t\t...(operation === TransformerMutationType.CREATE\n\t\t\t\t? {}\n\t\t\t\t: {\n\t\t\t\t\t\tcondition:\n\t\t\t\t\t\t\tObject.keys(graphQLCondition).length > 0\n\t\t\t\t\t\t\t\t? graphQLCondition\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t  }),\n\t\t};\n\t\treturn [query, variables, graphQLCondition, opName, modelDefinition];\n\t}\n\n\tprivate opTypeFromTransformerOperation(\n\t\toperation: TransformerMutationType\n\t): OpType {\n\t\tswitch (operation) {\n\t\t\tcase TransformerMutationType.CREATE:\n\t\t\t\treturn OpType.INSERT;\n\t\t\tcase TransformerMutationType.DELETE:\n\t\t\t\treturn OpType.DELETE;\n\t\t\tcase TransformerMutationType.UPDATE:\n\t\t\t\treturn OpType.UPDATE;\n\t\t\tcase TransformerMutationType.GET: // Intentionally blank\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\texhaustiveCheck(operation);\n\t\t}\n\t}\n\n\tpublic pause() {\n\t\tthis.processing = false;\n\t}\n}\n\nconst MAX_RETRY_DELAY_MS = 5 * 60 * 1000;\nconst originalJitteredBackoff = jitteredBackoff(MAX_RETRY_DELAY_MS);\n\n/**\n * @private\n * Internal use of Amplify only.\n *\n * Wraps the jittered backoff calculation to retry Network Errors indefinitely.\n * Backs off according to original jittered retry logic until the original retry\n * logic hits its max. After this occurs, if the error is a Network Error, we\n * ignore the attempt count and return MAX_RETRY_DELAY_MS to retry forever (until\n * the request succeeds).\n *\n * @param attempt ignored\n * @param _args ignored\n * @param error tested to see if `.message` is 'Network Error'\n * @returns number | false :\n */\nexport const safeJitteredBackoff: typeof originalJitteredBackoff = (\n\tattempt,\n\t_args,\n\terror\n) => {\n\tconst attemptResult = originalJitteredBackoff(attempt);\n\n\t// If this is the last attempt and it is a network error, we retry indefinitively every 5 minutes\n\tif (attemptResult === false && error?.message === 'Network Error') {\n\t\treturn MAX_RETRY_DELAY_MS;\n\t}\n\n\treturn attemptResult;\n};\n\nexport { MutationProcessor };\n"]},"metadata":{},"sourceType":"module"}