{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as o from \"@radix-ui/react-menu\";\nimport { createMenuScope as n } from \"@radix-ui/react-menu\";\nimport { Primitive as r } from \"@radix-ui/react-primitive\";\nimport { useControllableState as t } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as p } from \"@radix-ui/react-context\";\nimport { composeRefs as d } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as a } from \"@radix-ui/primitive\";\nimport * as c from \"react\";\nimport u from \"@babel/runtime/helpers/esm/extends\";\nconst [s, i] = p(\"DropdownMenu\", [n]);\nexport { i as createDropdownMenuScope };\nconst l = n(),\n      [m, w] = s(\"DropdownMenu\");\nexport const DropdownMenu = e => {\n  const {\n    __scopeDropdownMenu: n,\n    children: r,\n    open: p,\n    defaultOpen: d,\n    onOpenChange: a\n  } = e,\n        s = M(\"DropdownMenu\", n),\n        i = l(n),\n        [w = !1, D] = t({\n    prop: p,\n    defaultProp: d,\n    onChange: a\n  }),\n        g = c.useCallback(() => D(e => !e), [D]);\n  return s.isInsideContent ? /*#__PURE__*/c.createElement(m, {\n    scope: n,\n    isRootMenu: !1,\n    open: w,\n    onOpenChange: D,\n    onOpenToggle: g\n  }, /*#__PURE__*/c.createElement(o.Sub, u({}, i, {\n    open: w,\n    onOpenChange: D\n  }), r)) : /*#__PURE__*/c.createElement(f, u({}, e, {\n    open: w,\n    onOpenChange: D,\n    onOpenToggle: g\n  }), r);\n};\n/*#__PURE__*/\n\nconst f = n => {\n  const {\n    __scopeDropdownMenu: r,\n    children: t,\n    dir: p,\n    open: d,\n    onOpenChange: a,\n    onOpenToggle: s,\n    modal: i = !0\n  } = n,\n        w = l(r),\n        f = c.useRef(null);\n  /*#__PURE__*/\n\n  return c.createElement(m, {\n    scope: r,\n    isRootMenu: !0,\n    triggerId: e(),\n    triggerRef: f,\n    contentId: e(),\n    open: d,\n    onOpenChange: a,\n    onOpenToggle: s,\n    modal: i\n  }, /*#__PURE__*/c.createElement(o.Root, u({}, w, {\n    open: d,\n    onOpenChange: a,\n    dir: p,\n    modal: i\n  }), t));\n};\n\nexport const DropdownMenuTrigger = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: t,\n    disabled: p = !1,\n    ...s\n  } = e,\n        i = w(\"DropdownMenuTrigger\", t),\n        m = l(t);\n  return i.isRootMenu ? /*#__PURE__*/c.createElement(o.Anchor, u({\n    asChild: !0\n  }, m), /*#__PURE__*/c.createElement(r.button, u({\n    type: \"button\",\n    id: i.triggerId,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": !!i.open || void 0,\n    \"aria-controls\": i.open ? i.contentId : void 0,\n    \"data-state\": i.open ? \"open\" : \"closed\",\n    \"data-disabled\": p ? \"\" : void 0,\n    disabled: p\n  }, s, {\n    ref: d(n, i.triggerRef),\n    onPointerDown: a(e.onPointerDown, e => {\n      p || 0 !== e.button || !1 !== e.ctrlKey || (i.open || e.preventDefault(), i.onOpenToggle());\n    }),\n    onKeyDown: a(e.onKeyDown, e => {\n      p || ([\"Enter\", \" \"].includes(e.key) && i.onOpenToggle(), \"ArrowDown\" === e.key && i.onOpenChange(!0), [\" \", \"ArrowDown\"].includes(e.key) && e.preventDefault());\n    })\n  }))) : null;\n});\n/*#__PURE__*/\n\nconst [D, M] = s(\"DropdownMenuContent\", {\n  isInsideContent: !1\n});\nexport const DropdownMenuContent = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = w(\"DropdownMenuContent\", r),\n        d = l(r),\n        a = { ...t,\n    style: { ...e.style,\n      \"--radix-dropdown-menu-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    }\n  };\n  /*#__PURE__*/\n\n  return c.createElement(D, {\n    scope: r,\n    isInsideContent: !0\n  }, p.isRootMenu ? /*#__PURE__*/c.createElement(g, u({\n    __scopeDropdownMenu: r\n  }, a, {\n    ref: n\n  })) : /*#__PURE__*/c.createElement(o.Content, u({}, d, a, {\n    ref: n\n  })));\n});\n/*#__PURE__*/\n\nconst g = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    portalled: t = !0,\n    ...p\n  } = e,\n        d = w(\"DropdownMenuContent\", r),\n        s = l(r),\n        i = c.useRef(!1);\n  return d.isRootMenu ? /*#__PURE__*/c.createElement(o.Content, u({\n    id: d.contentId,\n    \"aria-labelledby\": d.triggerId\n  }, s, p, {\n    ref: n,\n    portalled: t,\n    onCloseAutoFocus: a(e.onCloseAutoFocus, e => {\n      var o;\n      i.current || null === (o = d.triggerRef.current) || void 0 === o || o.focus(), i.current = !1, e.preventDefault();\n    }),\n    onInteractOutside: a(e.onInteractOutside, e => {\n      const o = e.detail.originalEvent,\n            n = 0 === o.button && !0 === o.ctrlKey,\n            r = 2 === o.button || n;\n      d.modal && !r || (i.current = !0);\n    })\n  })) : null;\n});\nexport const DropdownMenuGroup = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Group, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuLabel = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Label, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Item, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuTriggerItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.SubTrigger, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuCheckboxItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.CheckboxItem, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuRadioGroup = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.RadioGroup, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuRadioItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.RadioItem, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuItemIndicator = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.ItemIndicator, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuSeparator = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Separator, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuArrow = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Arrow, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const Root = DropdownMenu;\nexport const Trigger = DropdownMenuTrigger;\nexport const Content = DropdownMenuContent;\nexport const Group = DropdownMenuGroup;\nexport const Label = DropdownMenuLabel;\nexport const Item = DropdownMenuItem;\nexport const TriggerItem = DropdownMenuTriggerItem;\nexport const CheckboxItem = DropdownMenuCheckboxItem;\nexport const RadioGroup = DropdownMenuRadioGroup;\nexport const RadioItem = DropdownMenuRadioItem;\nexport const ItemIndicator = DropdownMenuItemIndicator;\nexport const Separator = DropdownMenuSeparator;\nexport const Arrow = DropdownMenuArrow;","map":{"version":3,"mappings":"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","names":["createDropdownMenuContext","createDropdownMenuScope","createContextScope","createMenuScope","useMenuScope","DropdownMenuProvider","useDropdownMenuContext","DropdownMenu","props","__scopeDropdownMenu","children","open","openProp","defaultOpen","onOpenChange","contentContext","useContentContext","menuScope","setOpen","useControllableState","prop","defaultProp","onChange","handleOpenToggle","React","useCallback","prevOpen","isInsideContent","_react","$c7ff2201b6eec7866a95d2679b05981$var$DropdownMenuProvider","scope","isRootMenu","onOpenToggle","_radixUiReactMenu","Sub","_babelRuntimeHelpersEsmExtends","$c7ff2201b6eec7866a95d2679b05981$var$DropdownMenuRoot","DropdownMenuRoot","dir","modal","triggerRef","useRef","triggerId","useId","contentId","Root","DropdownMenuTrigger","forwardRef","forwardedRef","disabled","triggerProps","context","Anchor","asChild","Primitive","button","type","id","undefined","ref","composeRefs","onPointerDown","composeEventHandlers","event","ctrlKey","preventDefault","onKeyDown","includes","key","ContentProvider","DropdownMenuContent","contentProps","commonProps","style","$c7ff2201b6eec7866a95d2679b05981$var$ContentProvider","$c7ff2201b6eec7866a95d2679b05981$var$DropdownMenuRootContent","Content","DropdownMenuRootContent","portalled","hasInteractedOutsideRef","onCloseAutoFocus","current","_context$triggerRef$c","focus","onInteractOutside","originalEvent","detail","ctrlLeftClick","isRightClick","DropdownMenuGroup","groupProps","Group","DropdownMenuLabel","labelProps","Label","DropdownMenuItem","itemProps","Item","DropdownMenuTriggerItem","triggerItemProps","SubTrigger","DropdownMenuCheckboxItem","checkboxItemProps","CheckboxItem","DropdownMenuRadioGroup","radioGroupProps","RadioGroup","DropdownMenuRadioItem","radioItemProps","RadioItem","DropdownMenuItemIndicator","itemIndicatorProps","ItemIndicator","DropdownMenuSeparator","separatorProps","Separator","DropdownMenuArrow","arrowProps","Arrow","Trigger","TriggerItem"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@radix-ui/react-dropdown-menu/dist/packages/react/dropdown-menu/src/DropdownMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuRootContextValue = {\n  isRootMenu: true;\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\ntype DropdownMenuSubContextValue = {\n  isRootMenu: false;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] = createDropdownMenuContext<\n  DropdownMenuRootContextValue | DropdownMenuSubContextValue\n>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n  children?: React.ReactNode;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const { __scopeDropdownMenu, children, open: openProp, defaultOpen, onOpenChange } = props;\n  const contentContext = useContentContext(DROPDOWN_MENU_NAME, __scopeDropdownMenu);\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  const handleOpenToggle = React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]);\n\n  return contentContext.isInsideContent ? (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      isRootMenu={false}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={handleOpenToggle}\n    >\n      <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n        {children}\n      </MenuPrimitive.Sub>\n    </DropdownMenuProvider>\n  ) : (\n    <DropdownMenuRoot {...props} open={open} onOpenChange={setOpen} onOpenToggle={handleOpenToggle}>\n      {children}\n    </DropdownMenuRoot>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ninterface DropdownMenuRootProps {\n  dir?: Direction;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal?: boolean;\n  children?: React.ReactNode;\n}\n\nconst DropdownMenuRoot: React.FC<DropdownMenuRootProps> = (\n  props: ScopedProps<DropdownMenuRootProps>\n) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open,\n    onOpenChange,\n    onOpenToggle,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      isRootMenu={true}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={onOpenChange}\n      onOpenToggle={onOpenToggle}\n      modal={modal}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        open={open}\n        onOpenChange={onOpenChange}\n        dir={dir}\n        modal={modal}\n      >\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return context.isRootMenu ? (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open ? true : undefined}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n              context.onOpenToggle();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keypresses from scrolling window\n            if ([' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    ) : null;\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\nconst [ContentProvider, useContentContext] = createDropdownMenuContext(CONTENT_NAME, {\n  isInsideContent: false,\n});\n\ntype DropdownMenuContentElement =\n  | DropdownMenuRootContentElement\n  | React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends DropdownMenuRootContentProps, MenuContentProps {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const commonProps = {\n      ...contentProps,\n      style: {\n        ...props.style,\n        // re-namespace exposed content custom property\n        ['--radix-dropdown-menu-content-transform-origin' as any]:\n          'var(--radix-popper-transform-origin)',\n      },\n    };\n\n    return (\n      <ContentProvider scope={__scopeDropdownMenu} isInsideContent={true}>\n        {context.isRootMenu ? (\n          <DropdownMenuRootContent\n            __scopeDropdownMenu={__scopeDropdownMenu}\n            {...commonProps}\n            ref={forwardedRef}\n          />\n        ) : (\n          <MenuPrimitive.Content {...menuScope} {...commonProps} ref={forwardedRef} />\n        )}\n      </ContentProvider>\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DropdownMenuRootContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuRootContentProps extends ScopedProps<MenuContentProps> {}\n\nconst DropdownMenuRootContent = React.forwardRef<\n  DropdownMenuRootContentElement,\n  DropdownMenuRootContentProps\n>((props, forwardedRef) => {\n  const { __scopeDropdownMenu, portalled = true, ...contentProps } = props;\n  const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const hasInteractedOutsideRef = React.useRef(false);\n  return context.isRootMenu ? (\n    <MenuPrimitive.Content\n      id={context.contentId}\n      aria-labelledby={context.triggerId}\n      {...menuScope}\n      {...contentProps}\n      ref={forwardedRef}\n      portalled={portalled}\n      onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n        if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n        hasInteractedOutsideRef.current = false;\n        // Always prevent auto focus because we either focus manually or want user agent focus\n        event.preventDefault();\n      })}\n      onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n        const originalEvent = event.detail.originalEvent as PointerEvent;\n        const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n        if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n      })}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTriggerItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_ITEM_NAME = 'DropdownMenuTriggerItem';\n\ntype DropdownMenuTriggerItemElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuTriggerItemProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuTriggerItem = React.forwardRef<\n  DropdownMenuTriggerItemElement,\n  DropdownMenuTriggerItemProps\n>((props: ScopedProps<DropdownMenuTriggerItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...triggerItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...triggerItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuTriggerItem.displayName = TRIGGER_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst TriggerItem = DropdownMenuTriggerItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuTriggerItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  //\n  Root,\n  Trigger,\n  Content,\n  Group,\n  Label,\n  Item,\n  TriggerItem,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuTriggerItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n};\n"]},"metadata":{},"sourceType":"module"}