{"ast":null,"code":"/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}; // Comment - TODO: remove\n\n\nvar FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\nexport var DateUtils = {\n  /**\n   * Milliseconds to offset the date to compensate for clock skew between device & services\n   */\n  clockOffset: 0,\n  getDateWithClockOffset: function () {\n    if (DateUtils.clockOffset) {\n      return new Date(new Date().getTime() + DateUtils.clockOffset);\n    } else {\n      return new Date();\n    }\n  },\n\n  /**\n   * @returns {number} Clock offset in milliseconds\n   */\n  getClockOffset: function () {\n    return DateUtils.clockOffset;\n  },\n  getHeaderStringFromDate: function (date) {\n    if (date === void 0) {\n      date = DateUtils.getDateWithClockOffset();\n    }\n\n    return date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n  },\n  getDateFromHeaderString: function (header) {\n    var _a = __read(header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/), 7),\n        year = _a[1],\n        month = _a[2],\n        day = _a[3],\n        hour = _a[4],\n        minute = _a[5],\n        second = _a[6];\n\n    return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n  },\n  isClockSkewed: function (serverDate) {\n    // API gateway permits client calls that are off by no more than ±5 minutes\n    return Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS;\n  },\n  isClockSkewError: function (error) {\n    if (!error.response || !error.response.headers) {\n      return false;\n    }\n\n    var headers = error.response.headers;\n    return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) && (headers.date || headers.Date));\n  },\n\n  /**\n   * @param {number} offset Clock offset in milliseconds\n   */\n  setClockOffset: function (offset) {\n    DateUtils.clockOffset = offset;\n  }\n};","map":{"version":3,"mappings":"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","names":["FIVE_MINUTES_IN_MS","DateUtils","clockOffset","getDateWithClockOffset","Date","getTime","getClockOffset","getHeaderStringFromDate","date","toISOString","replace","getDateFromHeaderString","header","year","month","day","hour","minute","second","UTC","Number","isClockSkewed","serverDate","Math","abs","isClockSkewError","error","response","headers","Boolean","includes","setClockOffset","offset"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/core/src/Util/DateUtils.ts"],"sourcesContent":["/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\n\n// Comment - TODO: remove\n\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n\nexport const DateUtils = {\n\t/**\n\t * Milliseconds to offset the date to compensate for clock skew between device & services\n\t */\n\tclockOffset: 0,\n\n\tgetDateWithClockOffset() {\n\t\tif (DateUtils.clockOffset) {\n\t\t\treturn new Date(new Date().getTime() + DateUtils.clockOffset);\n\t\t} else {\n\t\t\treturn new Date();\n\t\t}\n\t},\n\n\t/**\n\t * @returns {number} Clock offset in milliseconds\n\t */\n\tgetClockOffset() {\n\t\treturn DateUtils.clockOffset;\n\t},\n\n\tgetHeaderStringFromDate(date: Date = DateUtils.getDateWithClockOffset()) {\n\t\treturn date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n\t},\n\n\tgetDateFromHeaderString(header: string) {\n\t\tconst [, year, month, day, hour, minute, second] = header.match(\n\t\t\t/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/\n\t\t);\n\n\t\treturn new Date(\n\t\t\tDate.UTC(\n\t\t\t\tNumber(year),\n\t\t\t\tNumber(month) - 1,\n\t\t\t\tNumber(day),\n\t\t\t\tNumber(hour),\n\t\t\t\tNumber(minute),\n\t\t\t\tNumber(second)\n\t\t\t)\n\t\t);\n\t},\n\n\tisClockSkewed(serverDate: Date) {\n\t\t// API gateway permits client calls that are off by no more than ±5 minutes\n\t\treturn (\n\t\t\tMath.abs(\n\t\t\t\tserverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()\n\t\t\t) >= FIVE_MINUTES_IN_MS\n\t\t);\n\t},\n\n\tisClockSkewError(error: any) {\n\t\tif (!error.response || !error.response.headers) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { headers } = error.response;\n\n\t\treturn Boolean(\n\t\t\t['BadRequestException', 'InvalidSignatureException'].includes(\n\t\t\t\theaders['x-amzn-errortype']\n\t\t\t) &&\n\t\t\t\t(headers.date || headers.Date)\n\t\t);\n\t},\n\n\t/**\n\t * @param {number} offset Clock offset in milliseconds\n\t */\n\tsetClockOffset(offset: number) {\n\t\tDateUtils.clockOffset = offset;\n\t},\n};\n"]},"metadata":{},"sourceType":"module"}