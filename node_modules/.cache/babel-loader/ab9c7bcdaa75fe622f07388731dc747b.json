{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketTaggingRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketTaggingCommand, serializeAws_restXmlPutBucketTaggingCommand } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Sets the tags for a bucket.</p>\n *          <p>Use tags to organize your AWS bill to reflect your own cost structure. To do this, sign\n *          up to get your AWS account bill with tag key values included. Then, to see the cost of\n *          combined resources, organize your billing information according to resources with the same\n *          tag key values. For example, you can tag several resources with a specific application\n *          name, and then organize your billing information to see the total cost of that application\n *          across several services. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Cost Allocation\n *             and Tagging</a>.</p>\n *\n *          <note>\n *             <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new\n *             value overwrites the old value. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/CostAllocTagging.html\">Using Cost Allocation in Amazon S3 Bucket\n *                Tags</a>.</p>\n *          </note>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutBucketTagging</code> action. The bucket owner has this permission by default\n *          and can grant this permission to others. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>\n *             <code>PutBucketTagging</code> has the following special errors:</p>\n *          <ul>\n *             <li>\n *                <p>Error code: <code>InvalidTagError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The tag provided was not a valid tag. This error can occur if\n *                      the tag did not pass input validation. For information about tag restrictions,\n *                      see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">User-Defined Tag Restrictions</a> and <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html\">AWS-Generated Cost Allocation Tag Restrictions</a>.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>MalformedXMLError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The XML provided does not match the schema.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>OperationAbortedError </code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: A conflicting conditional operation is currently in progress\n *                      against this resource. Please try again.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>InternalError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The service was unable to apply the provided tag to the\n *                      bucket.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The following operations are related to <code>PutBucketTagging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\">DeleteBucketTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketTaggingCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketTaggingCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketTaggingCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketTaggingCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketTaggingCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketTaggingCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketTaggingCommand(input, context);\n  };\n\n  PutBucketTaggingCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketTaggingCommand(output, context);\n  };\n\n  return PutBucketTaggingCommand;\n}($Command);\n\nexport { PutBucketTaggingCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AACA,SAASC,6CAAT,EAAwDC,2CAAxD,QAA4G,0BAA5G;AACA,SAASC,6BAAT,QAA8C,yCAA9C;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC3DV,SAAS,CAACS,uBAAD,EAA0BC,MAA1B,CAAT,CAD2D,CAE3D;EACA;;;EACA,SAASD,uBAAT,CAAiCE,KAAjC,EAAwC;IACpC,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALoC,CAMpC;EACH;EACD;AACJ;AACA;;;EACIH,uBAAuB,CAACK,SAAxB,CAAkCC,iBAAlC,GAAsD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IACjG,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBf,uBAAuB,CAACY,aAAD,CAAhD;IACA,KAAKE,eAAL,CAAqBC,GAArB,CAAyBhB,6BAA6B,CAACa,aAAD,CAAtD;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,yBAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE5B,uBAAuB,CAAC6B,kBAJvB;MAK1BC,wBAAwB,EAAE,UAAUC,MAAV,EAAkB;QAAE,OAAOA,MAAP;MAAgB;IALpC,CAA9B;IAOA,IAAIC,cAAc,GAAGhB,aAAa,CAACgB,cAAnC;IACA,OAAOV,KAAK,CAACW,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCjB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAnBD;;EAoBAnB,uBAAuB,CAACK,SAAxB,CAAkCO,SAAlC,GAA8C,UAAUV,KAAV,EAAiB0B,OAAjB,EAA0B;IACpE,OAAOlC,2CAA2C,CAACQ,KAAD,EAAQ0B,OAAR,CAAlD;EACH,CAFD;;EAGA5B,uBAAuB,CAACK,SAAxB,CAAkCQ,WAAlC,GAAgD,UAAUU,MAAV,EAAkBK,OAAlB,EAA2B;IACvE,OAAOnC,6CAA6C,CAAC8B,MAAD,EAASK,OAAT,CAApD;EACH,CAFD;;EAGA,OAAO5B,uBAAP;AACH,CA1C4C,CA0C3CD,QA1C2C,CAA7C;;AA2CA,SAASC,uBAAT","names":["PutBucketTaggingRequest","deserializeAws_restXmlPutBucketTaggingCommand","serializeAws_restXmlPutBucketTaggingCommand","getApplyMd5BodyChecksumPlugin","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketTaggingCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-s3/commands/PutBucketTaggingCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketTaggingRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketTaggingCommand,\n  serializeAws_restXmlPutBucketTaggingCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketTaggingCommandInput = PutBucketTaggingRequest;\nexport type PutBucketTaggingCommandOutput = __MetadataBearer;\n\n/**\n * <p>Sets the tags for a bucket.</p>\n *          <p>Use tags to organize your AWS bill to reflect your own cost structure. To do this, sign\n *          up to get your AWS account bill with tag key values included. Then, to see the cost of\n *          combined resources, organize your billing information according to resources with the same\n *          tag key values. For example, you can tag several resources with a specific application\n *          name, and then organize your billing information to see the total cost of that application\n *          across several services. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Cost Allocation\n *             and Tagging</a>.</p>\n *\n *          <note>\n *             <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new\n *             value overwrites the old value. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/CostAllocTagging.html\">Using Cost Allocation in Amazon S3 Bucket\n *                Tags</a>.</p>\n *          </note>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutBucketTagging</code> action. The bucket owner has this permission by default\n *          and can grant this permission to others. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>\n *             <code>PutBucketTagging</code> has the following special errors:</p>\n *          <ul>\n *             <li>\n *                <p>Error code: <code>InvalidTagError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The tag provided was not a valid tag. This error can occur if\n *                      the tag did not pass input validation. For information about tag restrictions,\n *                      see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">User-Defined Tag Restrictions</a> and <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html\">AWS-Generated Cost Allocation Tag Restrictions</a>.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>MalformedXMLError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The XML provided does not match the schema.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>OperationAbortedError </code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: A conflicting conditional operation is currently in progress\n *                      against this resource. Please try again.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>InternalError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The service was unable to apply the provided tag to the\n *                      bucket.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The following operations are related to <code>PutBucketTagging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\">DeleteBucketTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketTaggingCommand extends $Command<\n  PutBucketTaggingCommandInput,\n  PutBucketTaggingCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketTaggingCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketTaggingCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutBucketTaggingCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketTaggingCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutBucketTaggingCommandOutput> {\n    return deserializeAws_restXmlPutBucketTaggingCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}