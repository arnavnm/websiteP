{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { PutObjectCommand, CreateMultipartUploadCommand, UploadPartCommand, CompleteMultipartUploadCommand, ListPartsCommand, AbortMultipartUploadCommand } from '@aws-sdk/client-s3';\nimport { SEND_UPLOAD_PROGRESS_EVENT, SEND_DOWNLOAD_PROGRESS_EVENT } from './axios-http-handler';\nimport * as events from 'events';\nimport { createPrefixMiddleware, prefixMiddlewareOptions, autoAdjustClockskewMiddleware, autoAdjustClockskewMiddlewareOptions, createS3Client } from '../common/S3ClientUtils';\nvar logger = new Logger('AWSS3ProviderManagedUpload');\n\nvar AWSS3ProviderManagedUpload =\n/** @class */\nfunction () {\n  function AWSS3ProviderManagedUpload(params, opts, emitter) {\n    // Defaults\n    this.minPartSize = 5 * 1024 * 1024; // in MB\n\n    this.queueSize = 4; // Data for current upload\n\n    this.body = null;\n    this.params = null;\n    this.opts = null;\n    this.completedParts = [];\n    this.uploadId = null; // Progress reporting\n\n    this.bytesUploaded = 0;\n    this.totalBytesToUpload = 0;\n    this.emitter = null;\n    this.params = params;\n    this.opts = opts;\n    this.emitter = emitter;\n    this.s3client = this._createNewS3Client(opts, emitter);\n  }\n\n  AWSS3ProviderManagedUpload.prototype.upload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, putObjectCommand, _b, numberOfPartsToUpload, parts, start, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 10,, 12]);\n\n            _a = this;\n            return [4\n            /*yield*/\n            , this.validateAndSanitizeBody(this.params.Body)];\n\n          case 1:\n            _a.body = _c.sent();\n            this.totalBytesToUpload = this.byteLength(this.body);\n            if (!(this.totalBytesToUpload <= this.minPartSize)) return [3\n            /*break*/\n            , 2]; // Multipart upload is not required. Upload the sanitized body as is\n\n            this.params.Body = this.body;\n            putObjectCommand = new PutObjectCommand(this.params);\n            return [2\n            /*return*/\n            , this.s3client.send(putObjectCommand)];\n\n          case 2:\n            // Step 1: Initiate the multi part upload\n            _b = this;\n            return [4\n            /*yield*/\n            , this.createMultiPartUpload()];\n\n          case 3:\n            // Step 1: Initiate the multi part upload\n            _b.uploadId = _c.sent();\n            numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.minPartSize);\n            parts = this.createParts();\n            start = 0;\n            _c.label = 4;\n\n          case 4:\n            if (!(start < numberOfPartsToUpload)) return [3\n            /*break*/\n            , 7]; // Upload as many as `queueSize` parts simultaneously\n\n            return [4\n            /*yield*/\n            , this.uploadParts(this.uploadId, parts.slice(start, start + this.queueSize))];\n\n          case 5:\n            // Upload as many as `queueSize` parts simultaneously\n            _c.sent();\n\n            _c.label = 6;\n\n          case 6:\n            start += this.queueSize;\n            return [3\n            /*break*/\n            , 4];\n\n          case 7:\n            parts.map(function (part) {\n              _this.removeEventListener(part);\n            });\n            return [4\n            /*yield*/\n            , this.finishMultiPartUpload(this.uploadId)];\n\n          case 8:\n            // Step 3: Finalize the upload such that S3 can recreate the file\n            return [2\n            /*return*/\n            , _c.sent()];\n\n          case 9:\n            return [3\n            /*break*/\n            , 12];\n\n          case 10:\n            error_1 = _c.sent(); // if any error is thrown, call cleanup\n\n            return [4\n            /*yield*/\n            , this.cleanup(this.uploadId)];\n\n          case 11:\n            // if any error is thrown, call cleanup\n            _c.sent();\n\n            logger.error('Error. Cancelling the multipart upload.');\n            throw error_1;\n\n          case 12:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createParts = function () {\n    try {\n      var parts = [];\n\n      for (var bodyStart = 0; bodyStart < this.totalBytesToUpload;) {\n        var bodyEnd = Math.min(bodyStart + this.minPartSize, this.totalBytesToUpload);\n        parts.push({\n          bodyPart: this.body.slice(bodyStart, bodyEnd),\n          partNumber: parts.length + 1,\n          emitter: new events.EventEmitter(),\n          _lastUploadedBytes: 0\n        });\n        bodyStart += this.minPartSize;\n      }\n\n      return parts;\n    } catch (error) {\n      logger.error(error);\n      throw error;\n    }\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var createMultiPartUploadCommand, response, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            createMultiPartUploadCommand = new CreateMultipartUploadCommand(this.params);\n            return [4\n            /*yield*/\n            , this.s3client.send(createMultiPartUploadCommand)];\n\n          case 1:\n            response = _a.sent();\n            logger.debug(response.UploadId);\n            return [2\n            /*return*/\n            , response.UploadId];\n\n          case 2:\n            error_2 = _a.sent();\n            logger.error(error_2);\n            throw error_2;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @private Not to be extended outside of tests\n   * @VisibleFotTesting\n   */\n\n\n  AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var allResults, i, error_3;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Promise.all(parts.map(function (part) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var options, _a, Key, Bucket, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, res;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      this.setupEventListener(part);\n                      options = {\n                        emitter: part.emitter\n                      };\n                      _a = this.params, Key = _a.Key, Bucket = _a.Bucket, SSECustomerAlgorithm = _a.SSECustomerAlgorithm, SSECustomerKey = _a.SSECustomerKey, SSECustomerKeyMD5 = _a.SSECustomerKeyMD5;\n                      return [4\n                      /*yield*/\n                      , this.s3client.send(new UploadPartCommand(__assign(__assign(__assign({\n                        PartNumber: part.partNumber,\n                        Body: part.bodyPart,\n                        UploadId: uploadId,\n                        Key: Key,\n                        Bucket: Bucket\n                      }, SSECustomerAlgorithm && {\n                        SSECustomerAlgorithm: SSECustomerAlgorithm\n                      }), SSECustomerKey && {\n                        SSECustomerKey: SSECustomerKey\n                      }), SSECustomerKeyMD5 && {\n                        SSECustomerKeyMD5: SSECustomerKeyMD5\n                      })), options)];\n\n                    case 1:\n                      res = _b.sent();\n                      return [2\n                      /*return*/\n                      , res];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            allResults = _a.sent(); // The order of resolved promises is the same as input promise order.\n\n            for (i = 0; i < allResults.length; i++) {\n              this.completedParts.push({\n                PartNumber: parts[i].partNumber,\n                ETag: allResults[i].ETag\n              });\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_3 = _a.sent();\n            logger.error('Error happened while uploading a part. Cancelling the multipart upload');\n            throw error_3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, completeUploadCommand, data, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            input = {\n              Bucket: this.params.Bucket,\n              Key: this.params.Key,\n              UploadId: uploadId,\n              MultipartUpload: {\n                Parts: this.completedParts\n              }\n            };\n            completeUploadCommand = new CompleteMultipartUploadCommand(input);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.s3client.send(completeUploadCommand)];\n\n          case 2:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data.Key];\n\n          case 3:\n            error_4 = _a.sent();\n            logger.error('Error happened while finishing the upload.');\n            throw error_4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Reset this's state\n            this.body = null;\n            this.completedParts = [];\n            this.bytesUploaded = 0;\n            this.totalBytesToUpload = 0;\n            input = {\n              Bucket: this.params.Bucket,\n              Key: this.params.Key,\n              UploadId: uploadId\n            };\n            return [4\n            /*yield*/\n            , this.s3client.send(new AbortMultipartUploadCommand(input))];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.s3client.send(new ListPartsCommand(input))];\n\n          case 2:\n            data = _a.sent();\n\n            if (data && data.Parts && data.Parts.length > 0) {\n              throw new Error('Multipart upload clean up failed.');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.removeEventListener = function (part) {\n    part.emitter.removeAllListeners(SEND_UPLOAD_PROGRESS_EVENT);\n    part.emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n  };\n\n  AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {\n    var _this = this;\n\n    part.emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n      _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);\n\n      part._lastUploadedBytes = progress.loaded;\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {\n    this.bytesUploaded += incrementalUpdate;\n    this.emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, {\n      loaded: this.bytesUploaded,\n      total: this.totalBytesToUpload,\n      part: partNumber,\n      key: this.params.Key\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {\n    if (input === null || input === undefined) return 0;\n\n    if (typeof input.byteLength === 'number') {\n      return input.byteLength;\n    } else if (typeof input.length === 'number') {\n      return input.length;\n    } else if (typeof input.size === 'number') {\n      return input.size;\n    } else if (typeof input.path === 'string') {\n      /* NodeJs Support\n      return require('fs').lstatSync(input.path).size;\n      */\n    } else {\n      throw new Error('Cannot determine length of ' + input);\n    }\n  };\n\n  AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.isGenericObject(body)) {\n          // Any javascript object\n          return [2\n          /*return*/\n          , JSON.stringify(body)];\n        } else {\n          // Files, arrayBuffer etc\n          return [2\n          /*return*/\n          , body];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {\n    if (body !== null && typeof body === 'object') {\n      try {\n        return !(this.byteLength(body) >= 0);\n      } catch (error) {\n        // If we cannot determine the length of the body, consider it\n        // as a generic object and upload a stringified version of it\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  AWSS3ProviderManagedUpload.prototype._createNewS3Client = function (config, emitter) {\n    var s3client = createS3Client(config, emitter);\n    s3client.middlewareStack.add(createPrefixMiddleware(this.opts, this.params.Key), prefixMiddlewareOptions);\n    s3client.middlewareStack.add(autoAdjustClockskewMiddleware(s3client.config), autoAdjustClockskewMiddlewareOptions);\n    return s3client;\n  };\n\n  return AWSS3ProviderManagedUpload;\n}();\n\nexport { AWSS3ProviderManagedUpload };","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","PutObjectCommand","CreateMultipartUploadCommand","UploadPartCommand","CompleteMultipartUploadCommand","ListPartsCommand","AbortMultipartUploadCommand","SEND_UPLOAD_PROGRESS_EVENT","SEND_DOWNLOAD_PROGRESS_EVENT","events","createPrefixMiddleware","prefixMiddlewareOptions","autoAdjustClockskewMiddleware","autoAdjustClockskewMiddlewareOptions","createS3Client","logger","params","opts","emitter","s3client","_createNewS3Client","AWSS3ProviderManagedUpload","_a","validateAndSanitizeBody","Body","body","_c","totalBytesToUpload","byteLength","minPartSize","putObjectCommand","send","_b","createMultiPartUpload","uploadId","numberOfPartsToUpload","Math","ceil","parts","createParts","start","uploadParts","slice","queueSize","map","_this","removeEventListener","part","finishMultiPartUpload","cleanup","error","error_1","bodyStart","bodyEnd","min","push","bodyPart","partNumber","length","EventEmitter","_lastUploadedBytes","createMultiPartUploadCommand","response","debug","UploadId","error_2","Promise","all","setupEventListener","options","Key","Bucket","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","__assign","PartNumber","res","allResults","i","completedParts","ETag","error_3","input","MultipartUpload","Parts","completeUploadCommand","data","error_4","bytesUploaded","Error","removeAllListeners","on","progressChanged","progress","loaded","incrementalUpdate","emit","total","key","undefined","size","path","isGenericObject","JSON","stringify","config","middlewareStack","add"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-amplify/storage/src/providers/AWSS3ProviderManagedUpload.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport {\n\tPutObjectCommand,\n\tPutObjectRequest,\n\tCreateMultipartUploadCommand,\n\tUploadPartCommand,\n\tCompleteMultipartUploadCommand,\n\tCompleteMultipartUploadCommandInput,\n\tListPartsCommand,\n\tAbortMultipartUploadCommand,\n\tCompletedPart,\n\tS3Client,\n} from '@aws-sdk/client-s3';\nimport {\n\tSEND_UPLOAD_PROGRESS_EVENT,\n\tSEND_DOWNLOAD_PROGRESS_EVENT,\n\tAxiosHttpHandlerOptions,\n} from './axios-http-handler';\nimport * as events from 'events';\nimport {\n\tcreatePrefixMiddleware,\n\tprefixMiddlewareOptions,\n\tautoAdjustClockskewMiddleware,\n\tautoAdjustClockskewMiddlewareOptions,\n\tcreateS3Client,\n} from '../common/S3ClientUtils';\n\nconst logger = new Logger('AWSS3ProviderManagedUpload');\n\nexport declare interface Part {\n\tbodyPart: any;\n\tpartNumber: number;\n\temitter: events.EventEmitter;\n\tetag?: string;\n\t_lastUploadedBytes: number;\n}\n\nexport class AWSS3ProviderManagedUpload {\n\t// Defaults\n\tprotected minPartSize = 5 * 1024 * 1024; // in MB\n\tprivate queueSize = 4;\n\n\t// Data for current upload\n\tprivate body = null;\n\tprivate params: PutObjectRequest = null;\n\tprivate opts = null;\n\tprivate completedParts: CompletedPart[] = [];\n\tprivate s3client: S3Client;\n\tprivate uploadId = null;\n\n\t// Progress reporting\n\tprivate bytesUploaded = 0;\n\tprivate totalBytesToUpload = 0;\n\tprivate emitter: events.EventEmitter = null;\n\n\tconstructor(params: PutObjectRequest, opts, emitter: events.EventEmitter) {\n\t\tthis.params = params;\n\t\tthis.opts = opts;\n\t\tthis.emitter = emitter;\n\t\tthis.s3client = this._createNewS3Client(opts, emitter);\n\t}\n\n\tpublic async upload() {\n\t\ttry {\n\t\t\tthis.body = await this.validateAndSanitizeBody(this.params.Body);\n\t\t\tthis.totalBytesToUpload = this.byteLength(this.body);\n\t\t\tif (this.totalBytesToUpload <= this.minPartSize) {\n\t\t\t\t// Multipart upload is not required. Upload the sanitized body as is\n\t\t\t\tthis.params.Body = this.body;\n\t\t\t\tconst putObjectCommand = new PutObjectCommand(this.params);\n\t\t\t\treturn this.s3client.send(putObjectCommand);\n\t\t\t} else {\n\t\t\t\t// Step 1: Initiate the multi part upload\n\t\t\t\tthis.uploadId = await this.createMultiPartUpload();\n\n\t\t\t\t// Step 2: Upload chunks in parallel as requested\n\t\t\t\tconst numberOfPartsToUpload = Math.ceil(\n\t\t\t\t\tthis.totalBytesToUpload / this.minPartSize\n\t\t\t\t);\n\n\t\t\t\tconst parts: Part[] = this.createParts();\n\t\t\t\tfor (\n\t\t\t\t\tlet start = 0;\n\t\t\t\t\tstart < numberOfPartsToUpload;\n\t\t\t\t\tstart += this.queueSize\n\t\t\t\t) {\n\n\t\t\t\t\t// Upload as many as `queueSize` parts simultaneously\n\t\t\t\t\tawait this.uploadParts(\n\t\t\t\t\t\tthis.uploadId,\n\t\t\t\t\t\tparts.slice(start, start + this.queueSize)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tparts.map(part => {\n\t\t\t\t\tthis.removeEventListener(part);\n\t\t\t\t});\n\n\t\t\t\t// Step 3: Finalize the upload such that S3 can recreate the file\n\t\t\t\treturn await this.finishMultiPartUpload(this.uploadId);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// if any error is thrown, call cleanup\n\t\t\tawait this.cleanup(this.uploadId);\n\t\t\tlogger.error('Error. Cancelling the multipart upload.');\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate createParts(): Part[] {\n\t\ttry {\n\t\t\tconst parts: Part[] = [];\n\t\t\tfor (let bodyStart = 0; bodyStart < this.totalBytesToUpload; ) {\n\t\t\t\tconst bodyEnd = Math.min(\n\t\t\t\t\tbodyStart + this.minPartSize,\n\t\t\t\t\tthis.totalBytesToUpload\n\t\t\t\t);\n\t\t\t\tparts.push({\n\t\t\t\t\tbodyPart: this.body.slice(bodyStart, bodyEnd),\n\t\t\t\t\tpartNumber: parts.length + 1,\n\t\t\t\t\temitter: new events.EventEmitter(),\n\t\t\t\t\t_lastUploadedBytes: 0,\n\t\t\t\t});\n\t\t\t\tbodyStart += this.minPartSize;\n\t\t\t}\n\t\t\treturn parts;\n\t\t} catch (error) {\n\t\t\tlogger.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async createMultiPartUpload() {\n\t\ttry {\n\t\t\tconst createMultiPartUploadCommand = new CreateMultipartUploadCommand(\n\t\t\t\tthis.params\n\t\t\t);\n\t\t\tconst response = await this.s3client.send(createMultiPartUploadCommand);\n\t\t\tlogger.debug(response.UploadId);\n\t\t\treturn response.UploadId;\n\t\t} catch (error) {\n\t\t\tlogger.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @private Not to be extended outside of tests\n\t * @VisibleFotTesting\n\t */\n\tprotected async uploadParts(uploadId: string, parts: Part[]) {\n\t\ttry {\n\t\t\tconst allResults = await Promise.all(\n\t\t\t\tparts.map(async part => {\n\t\t\t\t\tthis.setupEventListener(part);\n\t\t\t\t\tconst options: AxiosHttpHandlerOptions = { emitter: part.emitter };\n\t\t\t\t\tconst {\n\t\t\t\t\t\tKey,\n\t\t\t\t\t\tBucket,\n\t\t\t\t\t\tSSECustomerAlgorithm,\n\t\t\t\t\t\tSSECustomerKey,\n\t\t\t\t\t\tSSECustomerKeyMD5,\n\t\t\t\t\t} = this.params;\n\t\t\t\t\tconst res = await this.s3client.send(\n\t\t\t\t\t\tnew UploadPartCommand({\n\t\t\t\t\t\t\tPartNumber: part.partNumber,\n\t\t\t\t\t\t\tBody: part.bodyPart,\n\t\t\t\t\t\t\tUploadId: uploadId,\n\t\t\t\t\t\t\tKey,\n\t\t\t\t\t\t\tBucket,\n\t\t\t\t\t\t\t...(SSECustomerAlgorithm && { SSECustomerAlgorithm }),\n\t\t\t\t\t\t\t...(SSECustomerKey && { SSECustomerKey }),\n\t\t\t\t\t\t\t...(SSECustomerKeyMD5 && { SSECustomerKeyMD5 }),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\toptions\n\t\t\t\t\t);\n\t\t\t\t\treturn res;\n\t\t\t\t})\n\t\t\t);\n\t\t\t// The order of resolved promises is the same as input promise order.\n\t\t\tfor (let i = 0; i < allResults.length; i++) {\n\t\t\t\tthis.completedParts.push({\n\t\t\t\t\tPartNumber: parts[i].partNumber,\n\t\t\t\t\tETag: allResults[i].ETag,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tlogger.error(\n\t\t\t\t'Error happened while uploading a part. Cancelling the multipart upload'\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async finishMultiPartUpload(uploadId: string) {\n\t\tconst input: CompleteMultipartUploadCommandInput = {\n\t\t\tBucket: this.params.Bucket,\n\t\t\tKey: this.params.Key,\n\t\t\tUploadId: uploadId,\n\t\t\tMultipartUpload: { Parts: this.completedParts },\n\t\t};\n\t\tconst completeUploadCommand = new CompleteMultipartUploadCommand(input);\n\t\ttry {\n\t\t\tconst data = await this.s3client.send(completeUploadCommand);\n\t\t\treturn data.Key;\n\t\t} catch (error) {\n\t\t\tlogger.error('Error happened while finishing the upload.');\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async cleanup(uploadId: string) {\n\t\t// Reset this's state\n\t\tthis.body = null;\n\t\tthis.completedParts = [];\n\t\tthis.bytesUploaded = 0;\n\t\tthis.totalBytesToUpload = 0;\n\n\t\tconst input = {\n\t\t\tBucket: this.params.Bucket,\n\t\t\tKey: this.params.Key,\n\t\t\tUploadId: uploadId,\n\t\t};\n\n\t\tawait this.s3client.send(new AbortMultipartUploadCommand(input));\n\n\t\t// verify that all parts are removed.\n\t\tconst data = await this.s3client.send(new ListPartsCommand(input));\n\n\t\tif (data && data.Parts && data.Parts.length > 0) {\n\t\t\tthrow new Error('Multipart upload clean up failed.');\n\t\t}\n\t}\n\n\tprivate removeEventListener(part: Part) {\n\t\tpart.emitter.removeAllListeners(SEND_UPLOAD_PROGRESS_EVENT);\n\t\tpart.emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n\t}\n\n\tprivate setupEventListener(part: Part) {\n\t\tpart.emitter.on(SEND_UPLOAD_PROGRESS_EVENT, progress => {\n\t\t\tthis.progressChanged(\n\t\t\t\tpart.partNumber,\n\t\t\t\tprogress.loaded - part._lastUploadedBytes\n\t\t\t);\n\t\t\tpart._lastUploadedBytes = progress.loaded;\n\t\t});\n\t}\n\n\tprivate progressChanged(partNumber: number, incrementalUpdate: number) {\n\t\tthis.bytesUploaded += incrementalUpdate;\n\t\tthis.emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, {\n\t\t\tloaded: this.bytesUploaded,\n\t\t\ttotal: this.totalBytesToUpload,\n\t\t\tpart: partNumber,\n\t\t\tkey: this.params.Key,\n\t\t});\n\t}\n\n\tprivate byteLength(input: any) {\n\t\tif (input === null || input === undefined) return 0;\n\t\tif (typeof input.byteLength === 'number') {\n\t\t\treturn input.byteLength;\n\t\t} else if (typeof input.length === 'number') {\n\t\t\treturn input.length;\n\t\t} else if (typeof input.size === 'number') {\n\t\t\treturn input.size;\n\t\t} else if (typeof input.path === 'string') {\n\t\t\t/* NodeJs Support\n\t\t\treturn require('fs').lstatSync(input.path).size;\n\t\t\t*/\n\t\t} else {\n\t\t\tthrow new Error('Cannot determine length of ' + input);\n\t\t}\n\t}\n\n\tprivate async validateAndSanitizeBody(body: any): Promise<any> {\n\t\tif (this.isGenericObject(body)) {\n\t\t\t// Any javascript object\n\t\t\treturn JSON.stringify(body);\n\t\t} else {\n\t\t\t// Files, arrayBuffer etc\n\t\t\treturn body;\n\t\t}\n\t\t/* TODO: streams and files for nodejs \n\t\tif (\n\t\t\ttypeof body.path === 'string' &&\n\t\t\trequire('fs').lstatSync(body.path).size > 0\n\t\t) {\n\t\t\treturn body;\n\t\t} */\n\t}\n\n\tprivate isGenericObject(body: any): body is Object {\n\t\tif (body !== null && typeof body === 'object') {\n\t\t\ttry {\n\t\t\t\treturn !(this.byteLength(body) >= 0);\n\t\t\t} catch (error) {\n\t\t\t\t// If we cannot determine the length of the body, consider it\n\t\t\t\t// as a generic object and upload a stringified version of it\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _createNewS3Client(config, emitter?: events.EventEmitter) {\n\t\tconst s3client = createS3Client(config, emitter);\n\t\ts3client.middlewareStack.add(\n\t\t\tcreatePrefixMiddleware(this.opts, this.params.Key),\n\t\t\tprefixMiddlewareOptions\n\t\t);\n\t\ts3client.middlewareStack.add(\n\t\t\tautoAdjustClockskewMiddleware(s3client.config),\n\t\t\tautoAdjustClockskewMiddlewareOptions\n\t\t);\n\t\treturn s3client;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}