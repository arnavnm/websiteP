{"ast":null,"code":"import _slicedToArray from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallbackRef as e } from \"@radix-ui/react-use-callback-ref\";\nimport * as t from \"react\";\nexport function useControllableState(_ref) {\n  var o = _ref.prop,\n      r = _ref.defaultProp,\n      _ref$onChange = _ref.onChange,\n      n = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n\n  var _ref2 = function (_ref4) {\n    var o = _ref4.defaultProp,\n        r = _ref4.onChange;\n\n    var n = t.useState(o),\n        _n = _slicedToArray(n, 1),\n        a = _n[0],\n        u = t.useRef(a),\n        c = e(r);\n\n    return t.useEffect(function () {\n      u.current !== a && (c(a), u.current = a);\n    }, [a, u, c]), n;\n  }({\n    defaultProp: r,\n    onChange: n\n  }),\n      _ref3 = _slicedToArray(_ref2, 2),\n      a = _ref3[0],\n      u = _ref3[1],\n      c = void 0 !== o,\n      f = c ? o : a,\n      l = e(n);\n\n  return [f, t.useCallback(function (e) {\n    if (c) {\n      var _t = e,\n          _r = \"function\" == typeof e ? _t(o) : e;\n\n      _r !== o && l(_r);\n    } else u(e);\n  }, [c, o, u, l])];\n}","map":{"version":3,"mappings":";AAAA,SAAOA,cAAc,IAAIC,CAAzB,QAA+B,kCAA/B;AAAkE,OAAM,KAAIC,CAAV,MAAgB,OAAhB;AAAwB,OAAO,SAASC,oBAAT,OAAyE;EAAA,IAArCC,CAAqC,QAA1CC,IAA0C;EAAA,IAAvBC,CAAuB,QAAnCC,WAAmC;EAAA,yBAArBC,QAAqB;EAAA,IAAZC,CAAY,8BAAT,YAAI,CAAE,CAAG;;EAAC,YAAW,iBAAoC;IAAA,IAAdL,CAAc,SAA1BG,WAA0B;IAAA,IAAHD,CAAG,SAAZE,QAAY;;IAAO,IAAAC,CAAC,GAACP,CAAC,CAACQ,QAAF,CAAWN,CAAX,CAAF;IAAA,wBAAoBK,CAApB;IAAA,IAAiBE,CAAjB;IAAA,IAAsBC,CAAtB,GAAwBV,CAAC,CAACW,MAAF,CAASF,CAAT,CAAxB;IAAA,IAAoCG,CAApC,GAAsCb,CAAC,CAACK,CAAD,CAAvC;;IAA2C,OAAOJ,CAAC,CAACa,SAAF,CAAa,YAAI;MAACH,CAAC,CAACI,OAAF,KAAYL,CAAZ,KAAgBG,CAAC,CAACH,CAAD,CAAD,EAAKC,CAAC,CAACI,OAAF,GAAUL,CAA/B;IAAkC,CAApD,EAAsD,CAACA,CAAD,EAAGC,CAAH,EAAKE,CAAL,CAAtD,GAA+DL,CAAtE;EAAwE,CAA9J,CAA+J;IAACF,WAAW,EAACD,CAAb;IAAeE,QAAQ,EAACC;EAAxB,CAA/J,CAAX;EAAA;EAAA,IAAME,CAAN;EAAA,IAAQC,CAAR;EAAA,IAAsME,CAAtM,GAAwM,KAAK,CAAL,KAASV,CAAjN;EAAA,IAAmNa,CAAnN,GAAqNH,CAAC,GAACV,CAAD,GAAGO,CAAzN;EAAA,IAA2NO,CAA3N,GAA6NjB,CAAC,CAACQ,CAAD,CAA9N;;EAAkO,OAAM,CAACQ,CAAD,EAAGf,CAAC,CAACiB,WAAF,CAAe,UAAAlB,CAAC,EAAE;IAAC,IAAGa,CAAH,EAAK;MAAC,IAAMZ,EAAC,GAACD,CAAR;MAAA,IAAUK,EAAC,GAAC,cAAY,OAAOL,CAAnB,GAAqBC,EAAC,CAACE,CAAD,CAAtB,GAA0BH,CAAtC;;MAAwCK,EAAC,KAAGF,CAAJ,IAAOc,CAAC,CAACZ,EAAD,CAAR;IAAY,CAA1D,MAA+DM,CAAC,CAACX,CAAD,CAAD;EAAK,CAAvF,EAAyF,CAACa,CAAD,EAAGV,CAAH,EAAKQ,CAAL,EAAOM,CAAP,CAAzF,CAAH,CAAN;AAA8G","names":["useControllableState","prop","defaultProp","onChange","uncontrolledState","React","useState","value","prevValueRef","useRef","handleChange","useCallbackRef","useEffect","current","useUncontrolledState","uncontrolledProp","setUncontrolledProp","isControlled","undefined","useCallback","nextValue","setter"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/useControllableState.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n"]},"metadata":{},"sourceType":"module"}