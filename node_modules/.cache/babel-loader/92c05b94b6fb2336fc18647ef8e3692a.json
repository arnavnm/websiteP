{"ast":null,"code":"export default function e(t) {\n  switch (t && t.type || null) {\n    case \"FeatureCollection\":\n      return t.features = t.features.reduce(function (t, r) {\n        return t.concat(e(r));\n      }, []), t;\n\n    case \"Feature\":\n      return t.geometry ? e(t.geometry).map(function (e) {\n        var r = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(t.properties)),\n          geometry: e\n        };\n        return void 0 !== t.id && (r.id = t.id), r;\n      }) : [t];\n\n    case \"MultiPoint\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Point\",\n          coordinates: e\n        };\n      });\n\n    case \"MultiPolygon\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Polygon\",\n          coordinates: e\n        };\n      });\n\n    case \"MultiLineString\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"LineString\",\n          coordinates: e\n        };\n      });\n\n    case \"GeometryCollection\":\n      return t.geometries.map(e).reduce(function (e, t) {\n        return e.concat(t);\n      }, []);\n\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [t];\n  }\n}","map":{"version":3,"mappings":"AAAA,eAAe,SAASA,CAAT,CAAWC,CAAX,EAAa;EAAC,QAAOA,CAAC,IAAEA,CAAC,CAACC,IAAL,IAAW,IAAlB;IAAwB,KAAI,mBAAJ;MAAwB,OAAOD,CAAC,CAACE,QAAF,GAAWF,CAAC,CAACE,QAAF,CAAWC,MAAX,CAAkB,UAASH,CAAT,EAAWI,CAAX,EAAa;QAAC,OAAOJ,CAAC,CAACK,MAAF,CAASN,CAAC,CAACK,CAAD,CAAV,CAAP;MAAsB,CAAtD,EAAuD,EAAvD,CAAX,EAAsEJ,CAA7E;;IAA+E,KAAI,SAAJ;MAAc,OAAOA,CAAC,CAACM,QAAF,GAAWP,CAAC,CAACC,CAAC,CAACM,QAAH,CAAD,CAAcC,GAAd,CAAkB,UAASR,CAAT,EAAW;QAAC,IAAIK,CAAC,GAAC;UAACH,IAAI,EAAC,SAAN;UAAgBO,UAAU,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,CAAC,CAACQ,UAAjB,CAAX,CAA3B;UAAoEF,QAAQ,EAACP;QAA7E,CAAN;QAAsF,OAAO,KAAK,CAAL,KAASC,CAAC,CAACY,EAAX,KAAgBR,CAAC,CAACQ,EAAF,GAAKZ,CAAC,CAACY,EAAvB,GAA2BR,CAAlC;MAAoC,CAAxJ,CAAX,GAAqK,CAACJ,CAAD,CAA5K;;IAAgL,KAAI,YAAJ;MAAiB,OAAOA,CAAC,CAACa,WAAF,CAAcN,GAAd,CAAkB,UAASR,CAAT,EAAW;QAAC,OAAM;UAACE,IAAI,EAAC,OAAN;UAAcY,WAAW,EAACd;QAA1B,CAAN;MAAmC,CAAjE,CAAP;;IAA0E,KAAI,cAAJ;MAAmB,OAAOC,CAAC,CAACa,WAAF,CAAcN,GAAd,CAAkB,UAASR,CAAT,EAAW;QAAC,OAAM;UAACE,IAAI,EAAC,SAAN;UAAgBY,WAAW,EAACd;QAA5B,CAAN;MAAqC,CAAnE,CAAP;;IAA4E,KAAI,iBAAJ;MAAsB,OAAOC,CAAC,CAACa,WAAF,CAAcN,GAAd,CAAkB,UAASR,CAAT,EAAW;QAAC,OAAM;UAACE,IAAI,EAAC,YAAN;UAAmBY,WAAW,EAACd;QAA/B,CAAN;MAAwC,CAAtE,CAAP;;IAA+E,KAAI,oBAAJ;MAAyB,OAAOC,CAAC,CAACc,UAAF,CAAaP,GAAb,CAAiBR,CAAjB,EAAoBI,MAApB,CAA2B,UAASJ,CAAT,EAAWC,CAAX,EAAa;QAAC,OAAOD,CAAC,CAACM,MAAF,CAASL,CAAT,CAAP;MAAmB,CAA5D,EAA6D,EAA7D,CAAP;;IAAwE,KAAI,OAAJ;IAAY,KAAI,SAAJ;IAAc,KAAI,YAAJ;MAAiB,OAAM,CAACA,CAAD,CAAN;EAAxuB;AAAmvB","names":["flatten","gj","type","features","reduce","mem","feature","concat","geometry","map","geom","data","properties","JSON","parse","stringify","undefined","id","coordinates","_","geometries","memo","geoms"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/geojson-flatten/index.js"],"sourcesContent":["export default function flatten(gj) {\n  switch ((gj && gj.type) || null) {\n    case \"FeatureCollection\":\n      gj.features = gj.features.reduce(function(mem, feature) {\n        return mem.concat(flatten(feature));\n      }, []);\n      return gj;\n    case \"Feature\":\n      if (!gj.geometry) return [gj];\n      return flatten(gj.geometry).map(function(geom) {\n        var data = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(gj.properties)),\n          geometry: geom\n        };\n        if (gj.id !== undefined) {\n          data.id = gj.id;\n        }\n        return data;\n      });\n    case \"MultiPoint\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Point\", coordinates: _ };\n      });\n    case \"MultiPolygon\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Polygon\", coordinates: _ };\n      });\n    case \"MultiLineString\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"LineString\", coordinates: _ };\n      });\n    case \"GeometryCollection\":\n      return gj.geometries.map(flatten).reduce(function(memo, geoms) {\n        return memo.concat(geoms);\n      }, []);\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [gj];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}