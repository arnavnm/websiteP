{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nexport function ssecMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;\n\n        var e_1, _e, _f;\n\n        return __generator(this, function (_g) {\n          switch (_g.label) {\n            case 0:\n              input = __assign({}, args.input);\n              properties = [{\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\"\n              }, {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\"\n              }];\n              _g.label = 1;\n\n            case 1:\n              _g.trys.push([1, 6, 7, 8]);\n\n              properties_1 = __values(properties), properties_1_1 = properties_1.next();\n              _g.label = 2;\n\n            case 2:\n              if (!!properties_1_1.done) return [3\n              /*break*/\n              , 5];\n              prop = properties_1_1.value;\n              value = input[prop.target];\n              if (!value) return [3\n              /*break*/\n              , 4];\n              valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === \"string\" ? options.utf8Decoder(value) : new Uint8Array(value);\n              encoded = options.base64Encoder(valueView);\n              hash = new options.md5();\n              hash.update(valueView);\n              _a = [__assign({}, input)];\n              _f = {}, _f[prop.target] = encoded;\n              _b = prop.hash;\n              _d = (_c = options).base64Encoder;\n              return [4\n              /*yield*/\n              , hash.digest()];\n\n            case 3:\n              input = __assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));\n              _g.label = 4;\n\n            case 4:\n              properties_1_1 = properties_1.next();\n              return [3\n              /*break*/\n              , 2];\n\n            case 5:\n              return [3\n              /*break*/\n              , 8];\n\n            case 6:\n              e_1_1 = _g.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              try {\n                if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n\n              return [7\n              /*endfinally*/\n              ];\n\n            case 8:\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                input: input\n              }))];\n          }\n        });\n      });\n    };\n  };\n}\nexport var ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport var getSsecPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":"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","names":["ssecMiddleware","options","next","args","input","properties","target","hash","properties_1","properties_1_1","prop","value","valueView","ArrayBuffer","isView","Uint8Array","buffer","byteOffset","byteLength","utf8Decoder","encoded","base64Encoder","md5","update","_b","_d","digest","_g","_f","ssecMiddlewareOptions","name","step","tags","override","getSsecPlugin","config","applyToStack","clientStack","add"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/middleware-ssec/src/index.ts"],"sourcesContent":["import {\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  InitializeMiddleware,\n  MetadataBearer,\n  Pluggable,\n  SourceData,\n} from \"@aws-sdk/types\";\n\nimport { ResolvedSsecMiddlewareConfig } from \"./configuration\";\n\nexport function ssecMiddleware(options: ResolvedSsecMiddlewareConfig): InitializeMiddleware<any, any> {\n  return <Output extends MetadataBearer>(\n    next: InitializeHandler<any, Output>\n  ): InitializeHandler<any, Output> => async (\n    args: InitializeHandlerArguments<any>\n  ): Promise<InitializeHandlerOutput<Output>> => {\n    let input = { ...args.input };\n    const properties = [\n      {\n        target: \"SSECustomerKey\",\n        hash: \"SSECustomerKeyMD5\",\n      },\n      {\n        target: \"CopySourceSSECustomerKey\",\n        hash: \"CopySourceSSECustomerKeyMD5\",\n      },\n    ];\n\n    for (const prop of properties) {\n      const value: SourceData | undefined = (input as any)[prop.target];\n      if (value) {\n        const valueView = ArrayBuffer.isView(value)\n          ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n          : typeof value === \"string\"\n          ? options.utf8Decoder(value)\n          : new Uint8Array(value);\n        const encoded = options.base64Encoder(valueView);\n        const hash = new options.md5();\n        hash.update(valueView);\n        input = {\n          ...(input as any),\n          [prop.target]: encoded,\n          [prop.hash]: options.base64Encoder(await hash.digest()),\n        };\n      }\n    }\n\n    return next({\n      ...args,\n      input,\n    });\n  };\n}\n\nexport const ssecMiddlewareOptions: InitializeHandlerOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true,\n};\n\nexport const getSsecPlugin = (config: ResolvedSsecMiddlewareConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}