{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport function createRequest(client, command) {\n  return __awaiter(this, void 0, void 0, function () {\n    var interceptMiddleware, clientStack, handler;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          interceptMiddleware = function interceptMiddleware(next) {\n            return function (args) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  return [2\n                  /*return*/\n                  , {\n                    output: {\n                      request: args.request\n                    },\n                    response: undefined\n                  }];\n                });\n              });\n            };\n          };\n\n          clientStack = client.middlewareStack.clone(); // @ts-ignore: add middleware to the last of 'build' step\n\n          clientStack.add(interceptMiddleware, {\n            step: \"build\",\n            priority: \"low\"\n          });\n          handler = command.resolveMiddleware(clientStack, client.config, undefined);\n          return [4\n          /*yield*/\n          , handler(command).then(function (output) {\n            return output.output.request;\n          })];\n\n        case 1:\n          // @ts-ignore\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;EAC3C,OAAOJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;IAC/C,IAAIK,mBAAJ,EAAyBC,WAAzB,EAAsCC,OAAtC;;IACA,IAAIC,KAAK,GAAG,IAAZ;;IACA,OAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIL,mBAAmB,GAAG,6BAAUM,IAAV,EAAgB;YAAE,OAAO,UAAUC,IAAV,EAAgB;cAAE,OAAOZ,SAAS,CAACQ,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;gBACjH,OAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;kBACnC,OAAO,CAAC;kBAAE;kBAAH,EAAe;oBAAEI,MAAM,EAAE;sBAAEC,OAAO,EAAEF,IAAI,CAACE;oBAAhB,CAAV;oBAAqCC,QAAQ,EAAEC;kBAA/C,CAAf,CAAP;gBACH,CAFiB,CAAlB;cAGH,CAJgF,CAAhB;YAI5D,CAJmC;UAIhC,CAJR;;UAKAV,WAAW,GAAGH,MAAM,CAACc,eAAP,CAAuBC,KAAvB,EAAd,CANJ,CAOI;;UACAZ,WAAW,CAACa,GAAZ,CAAgBd,mBAAhB,EAAqC;YACjCe,IAAI,EAAE,OAD2B;YAEjCC,QAAQ,EAAE;UAFuB,CAArC;UAIAd,OAAO,GAAGH,OAAO,CAACkB,iBAAR,CAA0BhB,WAA1B,EAAuCH,MAAM,CAACoB,MAA9C,EAAsDP,SAAtD,CAAV;UACA,OAAO,CAAC;UAAE;UAAH,EAAcT,OAAO,CAACH,OAAD,CAAP,CAAiBoB,IAAjB,CAAsB,UAAUX,MAAV,EAAkB;YAAE,OAAOA,MAAM,CAACA,MAAP,CAAcC,OAArB;UAA+B,CAAzE,CAAd,CAAP;;QACJ,KAAK,CAAL;UACA;UACA,OAAO,CAAC;UAAE;UAAH,EAAeL,EAAE,CAACgB,IAAH,EAAf,CAAP;MAjBJ;IAmBH,CApBiB,CAAlB;EAqBH,CAxBe,CAAhB;AAyBH","names":["createRequest","client","command","interceptMiddleware","next","args","output","request","response","undefined","clientStack","middlewareStack","clone","add","step","priority","handler","resolveMiddleware","config","then","_a"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/util-create-request/src/index.ts"],"sourcesContent":["import { Client, Command } from \"@aws-sdk/smithy-client\";\nimport { BuildMiddleware, HttpRequest, MetadataBearer } from \"@aws-sdk/types\";\n\nexport async function createRequest<\n  InputTypesUnion extends object,\n  InputType extends InputTypesUnion,\n  OutputType extends MetadataBearer = MetadataBearer\n>(\n  client: Client<any, InputTypesUnion, MetadataBearer, any>,\n  command: Command<InputType, OutputType, any, InputTypesUnion, MetadataBearer>\n): Promise<HttpRequest> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const interceptMiddleware: BuildMiddleware<InputType, OutputType> = (next) => async (args) => {\n    return { output: { request: args.request } as any, response: undefined };\n  };\n  const clientStack = client.middlewareStack.clone();\n\n  // @ts-ignore: add middleware to the last of 'build' step\n  clientStack.add(interceptMiddleware, {\n    step: \"build\",\n    priority: \"low\",\n  });\n\n  const handler = command.resolveMiddleware(clientStack, client.config, undefined);\n\n  // @ts-ignore\n  return await handler(command).then((output) => output.output.request);\n}\n"]},"metadata":{},"sourceType":"module"}