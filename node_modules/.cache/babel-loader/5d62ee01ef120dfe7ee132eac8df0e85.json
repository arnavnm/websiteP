{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketCorsOutput, GetBucketCorsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketCorsCommand, serializeAws_restXmlGetBucketCorsCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns the cors configuration information set for the bucket.</p>\n *\n *          <p> To use this operation, you must have permission to perform the s3:GetBucketCORS action.\n *          By default, the bucket owner has this permission and can grant it to others.</p>\n *\n *          <p> For more information about cors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\"> Enabling\n *             Cross-Origin Resource Sharing</a>.</p>\n *\n *          <p>The following operations are related to <code>GetBucketCors</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\">PutBucketCors</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\">DeleteBucketCors</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar GetBucketCorsCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetBucketCorsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetBucketCorsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  GetBucketCorsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketCorsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketCorsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketCorsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetBucketCorsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketCorsCommand(input, context);\n  };\n\n  GetBucketCorsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketCorsCommand(output, context);\n  };\n\n  return GetBucketCorsCommand;\n}($Command);\n\nexport { GetBucketCorsCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,oBAA1D;AACA,SAASC,0CAAT,EAAqDC,wCAArD,QAAsG,0BAAtG;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACxDV,SAAS,CAACS,oBAAD,EAAuBC,MAAvB,CAAT,CADwD,CAExD;EACA;;;EACA,SAASD,oBAAT,CAA8BE,KAA9B,EAAqC;IACjC,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALiC,CAMjC;EACH;EACD;AACJ;AACA;;;EACIH,oBAAoB,CAACK,SAArB,CAA+BC,iBAA/B,GAAmD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IAC9F,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBf,uBAAuB,CAACY,aAAD,CAAhD;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,sBAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,oBAAoB,CAAC4B,kBAJpB;MAK1BC,wBAAwB,EAAE9B,mBAAmB,CAAC6B;IALpB,CAA9B;IAOA,IAAIE,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAlBD;;EAmBAnB,oBAAoB,CAACK,SAArB,CAA+BO,SAA/B,GAA2C,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IACjE,OAAOhC,wCAAwC,CAACO,KAAD,EAAQyB,OAAR,CAA/C;EACH,CAFD;;EAGA3B,oBAAoB,CAACK,SAArB,CAA+BQ,WAA/B,GAA6C,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IACpE,OAAOjC,0CAA0C,CAACkC,MAAD,EAASD,OAAT,CAAjD;EACH,CAFD;;EAGA,OAAO3B,oBAAP;AACH,CAzCyC,CAyCxCD,QAzCwC,CAA1C;;AA0CA,SAASC,oBAAT","names":["GetBucketCorsOutput","GetBucketCorsRequest","deserializeAws_restXmlGetBucketCorsCommand","serializeAws_restXmlGetBucketCorsCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","GetBucketCorsCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/client-s3/commands/GetBucketCorsCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { GetBucketCorsOutput, GetBucketCorsRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlGetBucketCorsCommand,\n  serializeAws_restXmlGetBucketCorsCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetBucketCorsCommandInput = GetBucketCorsRequest;\nexport type GetBucketCorsCommandOutput = GetBucketCorsOutput & __MetadataBearer;\n\n/**\n * <p>Returns the cors configuration information set for the bucket.</p>\n *\n *          <p> To use this operation, you must have permission to perform the s3:GetBucketCORS action.\n *          By default, the bucket owner has this permission and can grant it to others.</p>\n *\n *          <p> For more information about cors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\"> Enabling\n *             Cross-Origin Resource Sharing</a>.</p>\n *\n *          <p>The following operations are related to <code>GetBucketCors</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\">PutBucketCors</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\">DeleteBucketCors</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class GetBucketCorsCommand extends $Command<\n  GetBucketCorsCommandInput,\n  GetBucketCorsCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetBucketCorsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetBucketCorsCommandInput, GetBucketCorsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetBucketCorsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetBucketCorsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketCorsOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetBucketCorsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlGetBucketCorsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetBucketCorsCommandOutput> {\n    return deserializeAws_restXmlGetBucketCorsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}