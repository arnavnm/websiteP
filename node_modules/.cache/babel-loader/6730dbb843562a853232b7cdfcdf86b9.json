{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketPolicyOutput, GetBucketPolicyRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketPolicyCommand, serializeAws_restXmlGetBucketPolicyCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns the policy of a specified bucket. If you are using an identity other than the\n *          root user of the AWS account that owns the bucket, the calling identity must have the\n *             <code>GetBucketPolicy</code> permissions on the specified bucket and belong to the\n *          bucket owner's account in order to use this operation.</p>\n *\n *          <p>If you don't have <code>GetBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n *             Access Denied</code> error. If you have the correct permissions, but you're not using an\n *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n *             Allowed</code> error.</p>\n *\n *          <important>\n *             <p>As a security precaution, the root user of the AWS account that owns a bucket can\n *             always use this operation, even if the policy explicitly denies the root user the\n *             ability to perform this action.</p>\n *          </important>\n *\n *          <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n *             Policies</a>.</p>\n *\n *          <p>The following operation is related to <code>GetBucketPolicy</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar GetBucketPolicyCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetBucketPolicyCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetBucketPolicyCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  GetBucketPolicyCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketPolicyCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketPolicyOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetBucketPolicyCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketPolicyCommand(input, context);\n  };\n\n  GetBucketPolicyCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketPolicyCommand(output, context);\n  };\n\n  return GetBucketPolicyCommand;\n}($Command);\n\nexport { GetBucketPolicyCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,oBAA9D;AACA,SAASC,4CAAT,EAAuDC,0CAAvD,QAA0G,0BAA1G;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,sBAAsB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC1DV,SAAS,CAACS,sBAAD,EAAyBC,MAAzB,CAAT,CAD0D,CAE1D;EACA;;;EACA,SAASD,sBAAT,CAAgCE,KAAhC,EAAuC;IACnC,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALmC,CAMnC;EACH;EACD;AACJ;AACA;;;EACIH,sBAAsB,CAACK,SAAvB,CAAiCC,iBAAjC,GAAqD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IAChG,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBf,uBAAuB,CAACY,aAAD,CAAhD;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,wBAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,sBAAsB,CAAC4B,kBAJtB;MAK1BC,wBAAwB,EAAE9B,qBAAqB,CAAC6B;IALtB,CAA9B;IAOA,IAAIE,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAlBD;;EAmBAnB,sBAAsB,CAACK,SAAvB,CAAiCO,SAAjC,GAA6C,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IACnE,OAAOhC,0CAA0C,CAACO,KAAD,EAAQyB,OAAR,CAAjD;EACH,CAFD;;EAGA3B,sBAAsB,CAACK,SAAvB,CAAiCQ,WAAjC,GAA+C,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IACtE,OAAOjC,4CAA4C,CAACkC,MAAD,EAASD,OAAT,CAAnD;EACH,CAFD;;EAGA,OAAO3B,sBAAP;AACH,CAzC2C,CAyC1CD,QAzC0C,CAA5C;;AA0CA,SAASC,sBAAT","names":["GetBucketPolicyOutput","GetBucketPolicyRequest","deserializeAws_restXmlGetBucketPolicyCommand","serializeAws_restXmlGetBucketPolicyCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","GetBucketPolicyCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-s3/commands/GetBucketPolicyCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { GetBucketPolicyOutput, GetBucketPolicyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlGetBucketPolicyCommand,\n  serializeAws_restXmlGetBucketPolicyCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetBucketPolicyCommandInput = GetBucketPolicyRequest;\nexport type GetBucketPolicyCommandOutput = GetBucketPolicyOutput & __MetadataBearer;\n\n/**\n * <p>Returns the policy of a specified bucket. If you are using an identity other than the\n *          root user of the AWS account that owns the bucket, the calling identity must have the\n *             <code>GetBucketPolicy</code> permissions on the specified bucket and belong to the\n *          bucket owner's account in order to use this operation.</p>\n *\n *          <p>If you don't have <code>GetBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n *             Access Denied</code> error. If you have the correct permissions, but you're not using an\n *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n *             Allowed</code> error.</p>\n *\n *          <important>\n *             <p>As a security precaution, the root user of the AWS account that owns a bucket can\n *             always use this operation, even if the policy explicitly denies the root user the\n *             ability to perform this action.</p>\n *          </important>\n *\n *          <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n *             Policies</a>.</p>\n *\n *          <p>The following operation is related to <code>GetBucketPolicy</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class GetBucketPolicyCommand extends $Command<\n  GetBucketPolicyCommandInput,\n  GetBucketPolicyCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetBucketPolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetBucketPolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetBucketPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketPolicyOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetBucketPolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlGetBucketPolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetBucketPolicyCommandOutput> {\n    return deserializeAws_restXmlGetBucketPolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}