{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport var Attractor = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Attractor, _ExternalInteractorBa);\n\n  var _super = _createSuper(Attractor);\n\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Attractor, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events;\n\n      if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n                  this.hoverAttract();\n                } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n                  this.clickAttract();\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var container = this.container;\n      var attractOptions = container.actualOptions.interactivity.modes.attract;\n      var query = container.particles.quadTree.query(area);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          var _getDistances = getDistances(particle.position, position),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy,\n              distance = _getDistances.distance;\n\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n          var normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n          particle.position.subFrom(normVec);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition;\n\n        if (!mousePos) {\n          return;\n        }\n\n        var attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n  }]);\n\n  return Attractor;\n}(ExternalInteractorBase);","map":{"version":3,"names":["Circle","Constants","ExternalInteractorBase","Vector","calcEasing","clamp","getDistances","isInArray","Attractor","container","options","actualOptions","mouse","interactivity","events","position","onHover","enable","clickPosition","onClick","hoverMode","mode","clickMode","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","x","y","area","attractOptions","modes","attract","query","particles","quadTree","particle","dx","dy","distance","velocity","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom","finish","count","clicking"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/tsparticles/esm/Interactions/External/Attract/Attractor.js"],"sourcesContent":["import { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}