{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\nimport { GraphQLAuthError } from '@aws-amplify/api';\nimport { Logger } from '@aws-amplify/core';\nimport { isEnumFieldType, isGraphQLScalarType, isPredicateObj, isSchemaModel, isTargetNameAssociation, isNonModelFieldType, OpType, ModelOperation } from '../types';\nimport { exhaustiveCheck } from '../util';\nvar logger = new Logger('DataStore');\nvar GraphQLOperationType;\n\n(function (GraphQLOperationType) {\n  GraphQLOperationType[\"LIST\"] = \"query\";\n  GraphQLOperationType[\"CREATE\"] = \"mutation\";\n  GraphQLOperationType[\"UPDATE\"] = \"mutation\";\n  GraphQLOperationType[\"DELETE\"] = \"mutation\";\n  GraphQLOperationType[\"GET\"] = \"query\";\n})(GraphQLOperationType || (GraphQLOperationType = {}));\n\nexport var TransformerMutationType;\n\n(function (TransformerMutationType) {\n  TransformerMutationType[\"CREATE\"] = \"Create\";\n  TransformerMutationType[\"UPDATE\"] = \"Update\";\n  TransformerMutationType[\"DELETE\"] = \"Delete\";\n  TransformerMutationType[\"GET\"] = \"Get\";\n})(TransformerMutationType || (TransformerMutationType = {}));\n\nvar dummyMetadata = {\n  _version: undefined,\n  _lastChangedAt: undefined,\n  _deleted: undefined\n};\nvar metadataFields = Object.keys(dummyMetadata);\nexport function getMetadataFields() {\n  return metadataFields;\n}\nexport function generateSelectionSet(namespace, modelDefinition) {\n  var scalarFields = getScalarFields(modelDefinition);\n  var nonModelFields = getNonModelFields(namespace, modelDefinition);\n  var implicitOwnerField = getImplicitOwnerField(modelDefinition, scalarFields);\n  var scalarAndMetadataFields = Object.values(scalarFields).map(function (_a) {\n    var name = _a.name;\n    return name;\n  }).concat(implicitOwnerField).concat(nonModelFields);\n\n  if (isSchemaModel(modelDefinition)) {\n    scalarAndMetadataFields = scalarAndMetadataFields.concat(getMetadataFields()).concat(getConnectionFields(modelDefinition));\n  }\n\n  var result = scalarAndMetadataFields.join('\\n');\n  return result;\n}\n\nfunction getImplicitOwnerField(modelDefinition, scalarFields) {\n  var ownerFields = getOwnerFields(modelDefinition);\n\n  if (!scalarFields.owner && ownerFields.includes('owner')) {\n    return ['owner'];\n  }\n\n  return [];\n}\n\nfunction getOwnerFields(modelDefinition) {\n  var ownerFields = [];\n\n  if (isSchemaModel(modelDefinition) && modelDefinition.attributes) {\n    modelDefinition.attributes.forEach(function (attr) {\n      if (attr.properties && attr.properties.rules) {\n        var rule = attr.properties.rules.find(function (rule) {\n          return rule.allow === 'owner';\n        });\n\n        if (rule && rule.ownerField) {\n          ownerFields.push(rule.ownerField);\n        }\n      }\n    });\n  }\n\n  return ownerFields;\n}\n\nfunction getScalarFields(modelDefinition) {\n  var fields = modelDefinition.fields;\n  var result = Object.values(fields).filter(function (field) {\n    if (isGraphQLScalarType(field.type) || isEnumFieldType(field.type)) {\n      return true;\n    }\n\n    return false;\n  }).reduce(function (acc, field) {\n    acc[field.name] = field;\n    return acc;\n  }, {});\n  return result;\n}\n\nfunction getConnectionFields(modelDefinition) {\n  var result = [];\n  Object.values(modelDefinition.fields).filter(function (_a) {\n    var association = _a.association;\n    return association && Object.keys(association).length;\n  }).forEach(function (_a) {\n    var name = _a.name,\n        association = _a.association;\n    var connectionType = association.connectionType;\n\n    switch (connectionType) {\n      case 'HAS_ONE':\n      case 'HAS_MANY':\n        // Intentionally blank\n        break;\n\n      case 'BELONGS_TO':\n        if (isTargetNameAssociation(association)) {\n          result.push(name + \" { id _deleted }\");\n        }\n\n        break;\n\n      default:\n        exhaustiveCheck(connectionType);\n    }\n  });\n  return result;\n}\n\nfunction getNonModelFields(namespace, modelDefinition) {\n  var result = [];\n  Object.values(modelDefinition.fields).forEach(function (_a) {\n    var name = _a.name,\n        type = _a.type;\n\n    if (isNonModelFieldType(type)) {\n      var typeDefinition = namespace.nonModels[type.nonModel];\n      var scalarFields = Object.values(getScalarFields(typeDefinition)).map(function (_a) {\n        var name = _a.name;\n        return name;\n      });\n      var nested_1 = [];\n      Object.values(typeDefinition.fields).forEach(function (field) {\n        var type = field.type,\n            name = field.name;\n\n        if (isNonModelFieldType(type)) {\n          var typeDefinition_1 = namespace.nonModels[type.nonModel];\n          nested_1.push(name + \" { \" + generateSelectionSet(namespace, typeDefinition_1) + \" }\");\n        }\n      });\n      result.push(name + \" { \" + scalarFields.join(' ') + \" \" + nested_1.join(' ') + \" }\");\n    }\n  });\n  return result;\n}\n\nexport function getAuthorizationRules(modelDefinition) {\n  // Searching for owner authorization on attributes\n  var authConfig = [].concat(modelDefinition.attributes).find(function (attr) {\n    return attr && attr.type === 'auth';\n  });\n  var _a = (authConfig || {}).properties,\n      _b = (_a === void 0 ? {} : _a).rules,\n      rules = _b === void 0 ? [] : _b;\n  var resultRules = []; // Multiple rules can be declared for allow: owner\n\n  rules.forEach(function (rule) {\n    // setting defaults for backwards compatibility with old cli\n    var _a = rule.identityClaim,\n        identityClaim = _a === void 0 ? 'cognito:username' : _a,\n        _b = rule.ownerField,\n        ownerField = _b === void 0 ? 'owner' : _b,\n        _c = rule.operations,\n        operations = _c === void 0 ? ['create', 'update', 'delete', 'read'] : _c,\n        _d = rule.provider,\n        provider = _d === void 0 ? 'userPools' : _d,\n        _e = rule.groupClaim,\n        groupClaim = _e === void 0 ? 'cognito:groups' : _e,\n        _f = rule.allow,\n        authStrategy = _f === void 0 ? 'iam' : _f,\n        _g = rule.groups,\n        groups = _g === void 0 ? [] : _g;\n    var isReadAuthorized = operations.includes('read');\n    var isOwnerAuth = authStrategy === 'owner';\n\n    if (!isReadAuthorized && !isOwnerAuth) {\n      return;\n    }\n\n    var authRule = {\n      identityClaim: identityClaim,\n      ownerField: ownerField,\n      provider: provider,\n      groupClaim: groupClaim,\n      authStrategy: authStrategy,\n      groups: groups,\n      areSubscriptionsPublic: false\n    };\n\n    if (isOwnerAuth) {\n      // look for the subscription level override\n      // only pay attention to the public level\n      var modelConfig = [].concat(modelDefinition.attributes).find(function (attr) {\n        return attr && attr.type === 'model';\n      }); // find the subscriptions level. ON is default\n\n      var _h = (modelConfig || {}).properties,\n          _j = (_h === void 0 ? {} : _h).subscriptions,\n          _k = (_j === void 0 ? {} : _j).level,\n          level = _k === void 0 ? 'on' : _k; // treat subscriptions as public for owner auth with unprotected reads\n      // when `read` is omitted from `operations`\n\n      authRule.areSubscriptionsPublic = !operations.includes('read') || level === 'public';\n    }\n\n    if (isOwnerAuth) {\n      // owner rules has least priority\n      resultRules.push(authRule);\n      return;\n    }\n\n    resultRules.unshift(authRule);\n  });\n  return resultRules;\n}\nexport function buildSubscriptionGraphQLOperation(namespace, modelDefinition, transformerMutationType, isOwnerAuthorization, ownerField) {\n  var selectionSet = generateSelectionSet(namespace, modelDefinition);\n  var typeName = modelDefinition.name,\n      pluralTypeName = modelDefinition.pluralName;\n  var opName = \"on\" + transformerMutationType + typeName;\n  var docArgs = '';\n  var opArgs = '';\n\n  if (isOwnerAuthorization) {\n    docArgs = \"($\" + ownerField + \": String!)\";\n    opArgs = \"(\" + ownerField + \": $\" + ownerField + \")\";\n  }\n\n  return [transformerMutationType, opName, \"subscription operation\" + docArgs + \"{\\n\\t\\t\\t\" + opName + opArgs + \"{\\n\\t\\t\\t\\t\" + selectionSet + \"\\n\\t\\t\\t}\\n\\t\\t}\"];\n}\nexport function buildGraphQLOperation(namespace, modelDefinition, graphQLOpType) {\n  var selectionSet = generateSelectionSet(namespace, modelDefinition);\n  var typeName = modelDefinition.name,\n      pluralTypeName = modelDefinition.pluralName;\n  var operation;\n  var documentArgs = ' ';\n  var operationArgs = ' ';\n  var transformerMutationType;\n\n  switch (graphQLOpType) {\n    case 'LIST':\n      operation = \"sync\" + pluralTypeName;\n      documentArgs = \"($limit: Int, $nextToken: String, $lastSync: AWSTimestamp, $filter: Model\" + typeName + \"FilterInput)\";\n      operationArgs = '(limit: $limit, nextToken: $nextToken, lastSync: $lastSync, filter: $filter)';\n      selectionSet = \"items {\\n\\t\\t\\t\\t\\t\\t\\t\" + selectionSet + \"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tnextToken\\n\\t\\t\\t\\t\\t\\tstartedAt\";\n      break;\n\n    case 'CREATE':\n      operation = \"create\" + typeName;\n      documentArgs = \"($input: Create\" + typeName + \"Input!)\";\n      operationArgs = '(input: $input)';\n      transformerMutationType = TransformerMutationType.CREATE;\n      break;\n\n    case 'UPDATE':\n      operation = \"update\" + typeName;\n      documentArgs = \"($input: Update\" + typeName + \"Input!, $condition: Model\" + typeName + \"ConditionInput)\";\n      operationArgs = '(input: $input, condition: $condition)';\n      transformerMutationType = TransformerMutationType.UPDATE;\n      break;\n\n    case 'DELETE':\n      operation = \"delete\" + typeName;\n      documentArgs = \"($input: Delete\" + typeName + \"Input!, $condition: Model\" + typeName + \"ConditionInput)\";\n      operationArgs = '(input: $input, condition: $condition)';\n      transformerMutationType = TransformerMutationType.DELETE;\n      break;\n\n    case 'GET':\n      operation = \"get\" + typeName;\n      documentArgs = \"($id: ID!)\";\n      operationArgs = '(id: $id)';\n      transformerMutationType = TransformerMutationType.GET;\n      break;\n\n    default:\n      exhaustiveCheck(graphQLOpType);\n  }\n\n  return [[transformerMutationType, operation, GraphQLOperationType[graphQLOpType] + \" operation\" + documentArgs + \"{\\n\\t\\t\" + operation + operationArgs + \"{\\n\\t\\t\\t\" + selectionSet + \"\\n\\t\\t}\\n\\t}\"]];\n}\nexport function createMutationInstanceFromModelOperation(relationships, modelDefinition, opType, model, element, condition, MutationEventConstructor, modelInstanceCreator, id) {\n  var operation;\n\n  switch (opType) {\n    case OpType.INSERT:\n      operation = TransformerMutationType.CREATE;\n      break;\n\n    case OpType.UPDATE:\n      operation = TransformerMutationType.UPDATE;\n      break;\n\n    case OpType.DELETE:\n      operation = TransformerMutationType.DELETE;\n      break;\n\n    default:\n      exhaustiveCheck(opType);\n  } // stringify nested objects of type AWSJSON\n  // this allows us to return parsed JSON to users (see `castInstanceType()` in datastore.ts),\n  // but still send the object correctly over the wire\n\n\n  var replacer = function (k, v) {\n    var isAWSJSON = k && v !== null && typeof v === 'object' && modelDefinition.fields[k] && modelDefinition.fields[k].type === 'AWSJSON';\n\n    if (isAWSJSON) {\n      return JSON.stringify(v);\n    }\n\n    return v;\n  };\n\n  var mutationEvent = modelInstanceCreator(MutationEventConstructor, __assign(__assign({}, id ? {\n    id: id\n  } : {}), {\n    data: JSON.stringify(element, replacer),\n    modelId: element.id,\n    model: model.name,\n    operation: operation,\n    condition: JSON.stringify(condition)\n  }));\n  return mutationEvent;\n}\nexport function predicateToGraphQLCondition(predicate) {\n  var result = {};\n\n  if (!predicate || !Array.isArray(predicate.predicates)) {\n    return result;\n  }\n\n  predicate.predicates.forEach(function (p) {\n    var _a;\n\n    if (isPredicateObj(p)) {\n      var field = p.field,\n          operator = p.operator,\n          operand = p.operand;\n\n      if (field === 'id') {\n        return;\n      }\n\n      result[field] = (_a = {}, _a[operator] = operand, _a);\n    } else {\n      result[p.type] = predicateToGraphQLCondition(p);\n    }\n  });\n  return result;\n}\nexport function predicateToGraphQLFilter(predicatesGroup) {\n  var result = {};\n\n  if (!predicatesGroup || !Array.isArray(predicatesGroup.predicates)) {\n    return result;\n  }\n\n  var type = predicatesGroup.type,\n      predicates = predicatesGroup.predicates;\n  var isList = type === 'and' || type === 'or';\n  result[type] = isList ? [] : {};\n\n  var appendToFilter = function (value) {\n    return isList ? result[type].push(value) : result[type] = value;\n  };\n\n  predicates.forEach(function (predicate) {\n    var _a, _b;\n\n    if (isPredicateObj(predicate)) {\n      var field = predicate.field,\n          operator = predicate.operator,\n          operand = predicate.operand;\n      var gqlField = (_a = {}, _a[field] = (_b = {}, _b[operator] = operand, _b), _a);\n      appendToFilter(gqlField);\n      return;\n    }\n\n    appendToFilter(predicateToGraphQLFilter(predicate));\n  });\n  return result;\n}\nexport function getUserGroupsFromToken(token, rule) {\n  // validate token against groupClaim\n  var userGroups = token[rule.groupClaim] || [];\n\n  if (typeof userGroups === 'string') {\n    var parsedGroups = void 0;\n\n    try {\n      parsedGroups = JSON.parse(userGroups);\n    } catch (e) {\n      parsedGroups = userGroups;\n    }\n\n    userGroups = [].concat(parsedGroups);\n  }\n\n  return userGroups;\n}\nexport function getModelAuthModes(_a) {\n  var authModeStrategy = _a.authModeStrategy,\n      defaultAuthMode = _a.defaultAuthMode,\n      modelName = _a.modelName,\n      schema = _a.schema;\n  return __awaiter(this, void 0, void 0, function () {\n    var operations, modelAuthModes, error_1;\n\n    var _this = this;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          operations = Object.values(ModelOperation);\n          modelAuthModes = {\n            CREATE: [],\n            READ: [],\n            UPDATE: [],\n            DELETE: []\n          };\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , Promise.all(operations.map(function (operation) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var authModes;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , authModeStrategy({\n                      schema: schema,\n                      modelName: modelName,\n                      operation: operation\n                    })];\n\n                  case 1:\n                    authModes = _a.sent();\n\n                    if (typeof authModes === 'string') {\n                      modelAuthModes[operation] = [authModes];\n                    } else if (Array.isArray(authModes) && authModes.length) {\n                      modelAuthModes[operation] = authModes;\n                    } else {\n                      // Use default auth mode if nothing is returned from authModeStrategy\n                      modelAuthModes[operation] = [defaultAuthMode];\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }))];\n\n        case 2:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          error_1 = _b.sent();\n          logger.debug(\"Error getting auth modes for model: \" + modelName, error_1);\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [2\n          /*return*/\n          , modelAuthModes];\n      }\n    });\n  });\n}\nexport function getForbiddenError(error) {\n  var forbiddenErrorMessages = ['Request failed with status code 401', 'Request failed with status code 403'];\n  var forbiddenError;\n\n  if (error && error.errors) {\n    forbiddenError = error.errors.find(function (err) {\n      return forbiddenErrorMessages.includes(err.message);\n    });\n  } else if (error && error.message) {\n    forbiddenError = error;\n  }\n\n  if (forbiddenError) {\n    return forbiddenError.message;\n  }\n\n  return null;\n}\nexport function getClientSideAuthError(error) {\n  var clientSideAuthErrors = Object.values(GraphQLAuthError);\n  var clientSideError = error && error.message && clientSideAuthErrors.find(function (clientError) {\n    return error.message.includes(clientError);\n  });\n  return clientSideError || null;\n}\nexport function getTokenForCustomAuth(authMode, amplifyConfig) {\n  if (amplifyConfig === void 0) {\n    amplifyConfig = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, functionAuthProvider, token, error_2;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!(authMode === GRAPHQL_AUTH_MODE.AWS_LAMBDA)) return [3\n          /*break*/\n          , 6];\n          _a = amplifyConfig.authProviders, functionAuthProvider = (_a === void 0 ? {\n            functionAuthProvider: null\n          } : _a).functionAuthProvider;\n          if (!(functionAuthProvider && typeof functionAuthProvider === 'function')) return [3\n          /*break*/\n          , 5];\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , functionAuthProvider()];\n\n        case 2:\n          token = _b.sent().token;\n          return [2\n          /*return*/\n          , token];\n\n        case 3:\n          error_2 = _b.sent();\n          throw new Error(\"Error retrieving token from `functionAuthProvider`: \" + error_2);\n\n        case 4:\n          return [3\n          /*break*/\n          , 6];\n\n        case 5:\n          // TODO: add docs link once available\n          throw new Error(\"You must provide a `functionAuthProvider` function to `DataStore.configure` when using \" + GRAPHQL_AUTH_MODE.AWS_LAMBDA);\n\n        case 6:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["GRAPHQL_AUTH_MODE","GraphQLAuthError","Logger","isEnumFieldType","isGraphQLScalarType","isPredicateObj","isSchemaModel","isTargetNameAssociation","isNonModelFieldType","OpType","ModelOperation","exhaustiveCheck","logger","GraphQLOperationType","TransformerMutationType","dummyMetadata","_version","undefined","_lastChangedAt","_deleted","metadataFields","Object","keys","getMetadataFields","generateSelectionSet","namespace","modelDefinition","scalarFields","getScalarFields","nonModelFields","getNonModelFields","implicitOwnerField","getImplicitOwnerField","scalarAndMetadataFields","values","map","_a","name","concat","getConnectionFields","result","join","ownerFields","getOwnerFields","owner","includes","attributes","forEach","attr","properties","rules","rule","find","allow","ownerField","push","fields","filter","field","type","reduce","acc","association","length","connectionType","typeDefinition","nonModels","nonModel","nested_1","typeDefinition_1","getAuthorizationRules","authConfig","_b","resultRules","_c","operations","_d","provider","_e","groupClaim","_f","authStrategy","_g","groups","isReadAuthorized","isOwnerAuth","authRule","identityClaim","areSubscriptionsPublic","modelConfig","_j","_k","level","unshift","buildSubscriptionGraphQLOperation","transformerMutationType","isOwnerAuthorization","selectionSet","pluralTypeName","opName","typeName","docArgs","opArgs","buildGraphQLOperation","graphQLOpType","operation","documentArgs","operationArgs","CREATE","UPDATE","DELETE","GET","createMutationInstanceFromModelOperation","relationships","opType","model","element","condition","MutationEventConstructor","modelInstanceCreator","id","INSERT","replacer","k","v","isAWSJSON","JSON","stringify","mutationEvent","__assign","data","modelId","predicateToGraphQLCondition","predicate","Array","isArray","predicates","p","operator","operand","predicateToGraphQLFilter","predicatesGroup","isList","appendToFilter","value","gqlField","getUserGroupsFromToken","token","userGroups","parsedGroups","parse","e","getModelAuthModes","authModeStrategy","defaultAuthMode","modelName","schema","modelAuthModes","READ","Promise","all","authModes","debug","error_1","getForbiddenError","error","forbiddenErrorMessages","forbiddenError","errors","err","message","getClientSideAuthError","clientSideAuthErrors","clientSideError","clientError","getTokenForCustomAuth","authMode","amplifyConfig","AWS_LAMBDA","functionAuthProvider","Error","error_2"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/datastore/src/sync/utils.ts"],"sourcesContent":["import { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\nimport { GraphQLAuthError } from '@aws-amplify/api';\nimport { Logger } from '@aws-amplify/core';\nimport { ModelInstanceCreator } from '../datastore/datastore';\nimport {\n\tAuthorizationRule,\n\tGraphQLCondition,\n\tGraphQLFilter,\n\tGraphQLField,\n\tisEnumFieldType,\n\tisGraphQLScalarType,\n\tisPredicateObj,\n\tisSchemaModel,\n\tisTargetNameAssociation,\n\tisNonModelFieldType,\n\tModelFields,\n\tModelInstanceMetadata,\n\tOpType,\n\tPersistentModel,\n\tPersistentModelConstructor,\n\tPredicatesGroup,\n\tRelationshipType,\n\tSchemaModel,\n\tSchemaNamespace,\n\tSchemaNonModel,\n\tModelOperation,\n\tInternalSchema,\n\tAuthModeStrategy,\n} from '../types';\nimport { exhaustiveCheck } from '../util';\nimport { MutationEvent } from './';\n\nconst logger = new Logger('DataStore');\n\nenum GraphQLOperationType {\n\tLIST = 'query',\n\tCREATE = 'mutation',\n\tUPDATE = 'mutation',\n\tDELETE = 'mutation',\n\tGET = 'query',\n}\n\nexport enum TransformerMutationType {\n\tCREATE = 'Create',\n\tUPDATE = 'Update',\n\tDELETE = 'Delete',\n\tGET = 'Get',\n}\n\nconst dummyMetadata: Omit<ModelInstanceMetadata, 'id'> = {\n\t_version: undefined,\n\t_lastChangedAt: undefined,\n\t_deleted: undefined,\n};\n\nconst metadataFields = <(keyof ModelInstanceMetadata)[]>(\n\tObject.keys(dummyMetadata)\n);\nexport function getMetadataFields(): ReadonlyArray<string> {\n\treturn metadataFields;\n}\n\nexport function generateSelectionSet(\n\tnamespace: SchemaNamespace,\n\tmodelDefinition: SchemaModel | SchemaNonModel\n): string {\n\tconst scalarFields = getScalarFields(modelDefinition);\n\tconst nonModelFields = getNonModelFields(namespace, modelDefinition);\n\tconst implicitOwnerField = getImplicitOwnerField(\n\t\tmodelDefinition,\n\t\tscalarFields\n\t);\n\n\tlet scalarAndMetadataFields = Object.values(scalarFields)\n\t\t.map(({ name }) => name)\n\t\t.concat(implicitOwnerField)\n\t\t.concat(nonModelFields);\n\n\tif (isSchemaModel(modelDefinition)) {\n\t\tscalarAndMetadataFields = scalarAndMetadataFields\n\t\t\t.concat(getMetadataFields())\n\t\t\t.concat(getConnectionFields(modelDefinition));\n\t}\n\n\tconst result = scalarAndMetadataFields.join('\\n');\n\n\treturn result;\n}\n\nfunction getImplicitOwnerField(\n\tmodelDefinition: SchemaModel | SchemaNonModel,\n\tscalarFields: ModelFields\n) {\n\tconst ownerFields = getOwnerFields(modelDefinition);\n\n\tif (!scalarFields.owner && ownerFields.includes('owner')) {\n\t\treturn ['owner'];\n\t}\n\treturn [];\n}\n\nfunction getOwnerFields(\n\tmodelDefinition: SchemaModel | SchemaNonModel\n): string[] {\n\tconst ownerFields: string[] = [];\n\tif (isSchemaModel(modelDefinition) && modelDefinition.attributes) {\n\t\tmodelDefinition.attributes.forEach(attr => {\n\t\t\tif (attr.properties && attr.properties.rules) {\n\t\t\t\tconst rule = attr.properties.rules.find(rule => rule.allow === 'owner');\n\t\t\t\tif (rule && rule.ownerField) {\n\t\t\t\t\townerFields.push(rule.ownerField);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn ownerFields;\n}\n\nfunction getScalarFields(\n\tmodelDefinition: SchemaModel | SchemaNonModel\n): ModelFields {\n\tconst { fields } = modelDefinition;\n\n\tconst result = Object.values(fields)\n\t\t.filter(field => {\n\t\t\tif (isGraphQLScalarType(field.type) || isEnumFieldType(field.type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t})\n\t\t.reduce((acc, field) => {\n\t\t\tacc[field.name] = field;\n\n\t\t\treturn acc;\n\t\t}, {} as ModelFields);\n\n\treturn result;\n}\n\nfunction getConnectionFields(modelDefinition: SchemaModel): string[] {\n\tconst result = [];\n\n\tObject.values(modelDefinition.fields)\n\t\t.filter(({ association }) => association && Object.keys(association).length)\n\t\t.forEach(({ name, association }) => {\n\t\t\tconst { connectionType } = association;\n\n\t\t\tswitch (connectionType) {\n\t\t\t\tcase 'HAS_ONE':\n\t\t\t\tcase 'HAS_MANY':\n\t\t\t\t\t// Intentionally blank\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BELONGS_TO':\n\t\t\t\t\tif (isTargetNameAssociation(association)) {\n\t\t\t\t\t\tresult.push(`${name} { id _deleted }`);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\texhaustiveCheck(connectionType);\n\t\t\t}\n\t\t});\n\n\treturn result;\n}\n\nfunction getNonModelFields(\n\tnamespace: SchemaNamespace,\n\tmodelDefinition: SchemaModel | SchemaNonModel\n): string[] {\n\tconst result = [];\n\n\tObject.values(modelDefinition.fields).forEach(({ name, type }) => {\n\t\tif (isNonModelFieldType(type)) {\n\t\t\tconst typeDefinition = namespace.nonModels![type.nonModel];\n\t\t\tconst scalarFields = Object.values(getScalarFields(typeDefinition)).map(\n\t\t\t\t({ name }) => name\n\t\t\t);\n\n\t\t\tconst nested = [];\n\t\t\tObject.values(typeDefinition.fields).forEach(field => {\n\t\t\t\tconst { type, name } = field;\n\n\t\t\t\tif (isNonModelFieldType(type)) {\n\t\t\t\t\tconst typeDefinition = namespace.nonModels![type.nonModel];\n\n\t\t\t\t\tnested.push(\n\t\t\t\t\t\t`${name} { ${generateSelectionSet(namespace, typeDefinition)} }`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tresult.push(`${name} { ${scalarFields.join(' ')} ${nested.join(' ')} }`);\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getAuthorizationRules(\n\tmodelDefinition: SchemaModel\n): AuthorizationRule[] {\n\t// Searching for owner authorization on attributes\n\tconst authConfig = []\n\t\t.concat(modelDefinition.attributes)\n\t\t.find(attr => attr && attr.type === 'auth');\n\n\tconst { properties: { rules = [] } = {} } = authConfig || {};\n\n\tconst resultRules: AuthorizationRule[] = [];\n\t// Multiple rules can be declared for allow: owner\n\trules.forEach(rule => {\n\t\t// setting defaults for backwards compatibility with old cli\n\t\tconst {\n\t\t\tidentityClaim = 'cognito:username',\n\t\t\townerField = 'owner',\n\t\t\toperations = ['create', 'update', 'delete', 'read'],\n\t\t\tprovider = 'userPools',\n\t\t\tgroupClaim = 'cognito:groups',\n\t\t\tallow: authStrategy = 'iam',\n\t\t\tgroups = [],\n\t\t} = rule;\n\n\t\tconst isReadAuthorized = operations.includes('read');\n\t\tconst isOwnerAuth = authStrategy === 'owner';\n\n\t\tif (!isReadAuthorized && !isOwnerAuth) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst authRule: AuthorizationRule = {\n\t\t\tidentityClaim,\n\t\t\townerField,\n\t\t\tprovider,\n\t\t\tgroupClaim,\n\t\t\tauthStrategy,\n\t\t\tgroups,\n\t\t\tareSubscriptionsPublic: false,\n\t\t};\n\n\t\tif (isOwnerAuth) {\n\t\t\t// look for the subscription level override\n\t\t\t// only pay attention to the public level\n\t\t\tconst modelConfig = (<typeof modelDefinition.attributes>[])\n\t\t\t\t.concat(modelDefinition.attributes)\n\t\t\t\t.find(attr => attr && attr.type === 'model');\n\n\t\t\t// find the subscriptions level. ON is default\n\t\t\tconst { properties: { subscriptions: { level = 'on' } = {} } = {} } =\n\t\t\t\tmodelConfig || {};\n\n\t\t\t// treat subscriptions as public for owner auth with unprotected reads\n\t\t\t// when `read` is omitted from `operations`\n\t\t\tauthRule.areSubscriptionsPublic =\n\t\t\t\t!operations.includes('read') || level === 'public';\n\t\t}\n\n\t\tif (isOwnerAuth) {\n\t\t\t// owner rules has least priority\n\t\t\tresultRules.push(authRule);\n\t\t\treturn;\n\t\t}\n\n\t\tresultRules.unshift(authRule);\n\t});\n\n\treturn resultRules;\n}\n\nexport function buildSubscriptionGraphQLOperation(\n\tnamespace: SchemaNamespace,\n\tmodelDefinition: SchemaModel,\n\ttransformerMutationType: TransformerMutationType,\n\tisOwnerAuthorization: boolean,\n\townerField: string\n): [TransformerMutationType, string, string] {\n\tconst selectionSet = generateSelectionSet(namespace, modelDefinition);\n\n\tconst { name: typeName, pluralName: pluralTypeName } = modelDefinition;\n\n\tconst opName = `on${transformerMutationType}${typeName}`;\n\tlet docArgs = '';\n\tlet opArgs = '';\n\n\tif (isOwnerAuthorization) {\n\t\tdocArgs = `($${ownerField}: String!)`;\n\t\topArgs = `(${ownerField}: $${ownerField})`;\n\t}\n\n\treturn [\n\t\ttransformerMutationType,\n\t\topName,\n\t\t`subscription operation${docArgs}{\n\t\t\t${opName}${opArgs}{\n\t\t\t\t${selectionSet}\n\t\t\t}\n\t\t}`,\n\t];\n}\n\nexport function buildGraphQLOperation(\n\tnamespace: SchemaNamespace,\n\tmodelDefinition: SchemaModel,\n\tgraphQLOpType: keyof typeof GraphQLOperationType\n): [TransformerMutationType, string, string][] {\n\tlet selectionSet = generateSelectionSet(namespace, modelDefinition);\n\n\tconst { name: typeName, pluralName: pluralTypeName } = modelDefinition;\n\n\tlet operation: string;\n\tlet documentArgs: string = ' ';\n\tlet operationArgs: string = ' ';\n\tlet transformerMutationType: TransformerMutationType;\n\n\tswitch (graphQLOpType) {\n\t\tcase 'LIST':\n\t\t\toperation = `sync${pluralTypeName}`;\n\t\t\tdocumentArgs = `($limit: Int, $nextToken: String, $lastSync: AWSTimestamp, $filter: Model${typeName}FilterInput)`;\n\t\t\toperationArgs =\n\t\t\t\t'(limit: $limit, nextToken: $nextToken, lastSync: $lastSync, filter: $filter)';\n\t\t\tselectionSet = `items {\n\t\t\t\t\t\t\t${selectionSet}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextToken\n\t\t\t\t\t\tstartedAt`;\n\t\t\tbreak;\n\t\tcase 'CREATE':\n\t\t\toperation = `create${typeName}`;\n\t\t\tdocumentArgs = `($input: Create${typeName}Input!)`;\n\t\t\toperationArgs = '(input: $input)';\n\t\t\ttransformerMutationType = TransformerMutationType.CREATE;\n\t\t\tbreak;\n\t\tcase 'UPDATE':\n\t\t\toperation = `update${typeName}`;\n\t\t\tdocumentArgs = `($input: Update${typeName}Input!, $condition: Model${typeName}ConditionInput)`;\n\t\t\toperationArgs = '(input: $input, condition: $condition)';\n\t\t\ttransformerMutationType = TransformerMutationType.UPDATE;\n\t\t\tbreak;\n\t\tcase 'DELETE':\n\t\t\toperation = `delete${typeName}`;\n\t\t\tdocumentArgs = `($input: Delete${typeName}Input!, $condition: Model${typeName}ConditionInput)`;\n\t\t\toperationArgs = '(input: $input, condition: $condition)';\n\t\t\ttransformerMutationType = TransformerMutationType.DELETE;\n\t\t\tbreak;\n\t\tcase 'GET':\n\t\t\toperation = `get${typeName}`;\n\t\t\tdocumentArgs = `($id: ID!)`;\n\t\t\toperationArgs = '(id: $id)';\n\t\t\ttransformerMutationType = TransformerMutationType.GET;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\texhaustiveCheck(graphQLOpType);\n\t}\n\n\treturn [\n\t\t[\n\t\t\ttransformerMutationType,\n\t\t\toperation,\n\t\t\t`${GraphQLOperationType[graphQLOpType]} operation${documentArgs}{\n\t\t${operation}${operationArgs}{\n\t\t\t${selectionSet}\n\t\t}\n\t}`,\n\t\t],\n\t];\n}\n\nexport function createMutationInstanceFromModelOperation<\n\tT extends PersistentModel\n>(\n\trelationships: RelationshipType,\n\tmodelDefinition: SchemaModel,\n\topType: OpType,\n\tmodel: PersistentModelConstructor<T>,\n\telement: T,\n\tcondition: GraphQLCondition,\n\tMutationEventConstructor: PersistentModelConstructor<MutationEvent>,\n\tmodelInstanceCreator: ModelInstanceCreator,\n\tid?: string\n): MutationEvent {\n\tlet operation: TransformerMutationType;\n\n\tswitch (opType) {\n\t\tcase OpType.INSERT:\n\t\t\toperation = TransformerMutationType.CREATE;\n\t\t\tbreak;\n\t\tcase OpType.UPDATE:\n\t\t\toperation = TransformerMutationType.UPDATE;\n\t\t\tbreak;\n\t\tcase OpType.DELETE:\n\t\t\toperation = TransformerMutationType.DELETE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\texhaustiveCheck(opType);\n\t}\n\n\t// stringify nested objects of type AWSJSON\n\t// this allows us to return parsed JSON to users (see `castInstanceType()` in datastore.ts),\n\t// but still send the object correctly over the wire\n\tconst replacer = (k, v) => {\n\t\tconst isAWSJSON =\n\t\t\tk &&\n\t\t\tv !== null &&\n\t\t\ttypeof v === 'object' &&\n\t\t\tmodelDefinition.fields[k] &&\n\t\t\tmodelDefinition.fields[k].type === 'AWSJSON';\n\n\t\tif (isAWSJSON) {\n\t\t\treturn JSON.stringify(v);\n\t\t}\n\t\treturn v;\n\t};\n\n\tconst mutationEvent = modelInstanceCreator(MutationEventConstructor, {\n\t\t...(id ? { id } : {}),\n\t\tdata: JSON.stringify(element, replacer),\n\t\tmodelId: element.id,\n\t\tmodel: model.name,\n\t\toperation,\n\t\tcondition: JSON.stringify(condition),\n\t});\n\n\treturn mutationEvent;\n}\n\nexport function predicateToGraphQLCondition(\n\tpredicate: PredicatesGroup<any>\n): GraphQLCondition {\n\tconst result = {};\n\n\tif (!predicate || !Array.isArray(predicate.predicates)) {\n\t\treturn result;\n\t}\n\n\tpredicate.predicates.forEach(p => {\n\t\tif (isPredicateObj(p)) {\n\t\t\tconst { field, operator, operand } = p;\n\n\t\t\tif (field === 'id') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult[field] = { [operator]: operand };\n\t\t} else {\n\t\t\tresult[p.type] = predicateToGraphQLCondition(p);\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function predicateToGraphQLFilter(\n\tpredicatesGroup: PredicatesGroup<any>\n): GraphQLFilter {\n\tconst result: GraphQLFilter = {};\n\n\tif (!predicatesGroup || !Array.isArray(predicatesGroup.predicates)) {\n\t\treturn result;\n\t}\n\n\tconst { type, predicates } = predicatesGroup;\n\tconst isList = type === 'and' || type === 'or';\n\n\tresult[type] = isList ? [] : {};\n\n\tconst appendToFilter = value =>\n\t\tisList ? result[type].push(value) : (result[type] = value);\n\n\tpredicates.forEach(predicate => {\n\t\tif (isPredicateObj(predicate)) {\n\t\t\tconst { field, operator, operand } = predicate;\n\n\t\t\tconst gqlField: GraphQLField = {\n\t\t\t\t[field]: { [operator]: operand },\n\t\t\t};\n\n\t\t\tappendToFilter(gqlField);\n\t\t\treturn;\n\t\t}\n\n\t\tappendToFilter(predicateToGraphQLFilter(predicate));\n\t});\n\n\treturn result;\n}\n\nexport function getUserGroupsFromToken(\n\ttoken: { [field: string]: any },\n\trule: AuthorizationRule\n): string[] {\n\t// validate token against groupClaim\n\tlet userGroups: string[] | string = token[rule.groupClaim] || [];\n\n\tif (typeof userGroups === 'string') {\n\t\tlet parsedGroups;\n\t\ttry {\n\t\t\tparsedGroups = JSON.parse(userGroups);\n\t\t} catch (e) {\n\t\t\tparsedGroups = userGroups;\n\t\t}\n\t\tuserGroups = [].concat(parsedGroups);\n\t}\n\n\treturn userGroups;\n}\n\nexport async function getModelAuthModes({\n\tauthModeStrategy,\n\tdefaultAuthMode,\n\tmodelName,\n\tschema,\n}: {\n\tauthModeStrategy: AuthModeStrategy;\n\tdefaultAuthMode: GRAPHQL_AUTH_MODE;\n\tmodelName: string;\n\tschema: InternalSchema;\n}): Promise<{\n\t[key in ModelOperation]: GRAPHQL_AUTH_MODE[];\n}> {\n\tconst operations = Object.values(ModelOperation);\n\n\tconst modelAuthModes: {\n\t\t[key in ModelOperation]: GRAPHQL_AUTH_MODE[];\n\t} = {\n\t\tCREATE: [],\n\t\tREAD: [],\n\t\tUPDATE: [],\n\t\tDELETE: [],\n\t};\n\n\ttry {\n\t\tawait Promise.all(\n\t\t\toperations.map(async operation => {\n\t\t\t\tconst authModes = await authModeStrategy({\n\t\t\t\t\tschema,\n\t\t\t\t\tmodelName,\n\t\t\t\t\toperation,\n\t\t\t\t});\n\n\t\t\t\tif (typeof authModes === 'string') {\n\t\t\t\t\tmodelAuthModes[operation] = [authModes];\n\t\t\t\t} else if (Array.isArray(authModes) && authModes.length) {\n\t\t\t\t\tmodelAuthModes[operation] = authModes;\n\t\t\t\t} else {\n\t\t\t\t\t// Use default auth mode if nothing is returned from authModeStrategy\n\t\t\t\t\tmodelAuthModes[operation] = [defaultAuthMode];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t} catch (error) {\n\t\tlogger.debug(`Error getting auth modes for model: ${modelName}`, error);\n\t}\n\treturn modelAuthModes;\n}\n\nexport function getForbiddenError(error) {\n\tconst forbiddenErrorMessages = [\n\t\t'Request failed with status code 401',\n\t\t'Request failed with status code 403',\n\t];\n\tlet forbiddenError;\n\tif (error && error.errors) {\n\t\tforbiddenError = (error.errors as [any]).find(err =>\n\t\t\tforbiddenErrorMessages.includes(err.message)\n\t\t);\n\t} else if (error && error.message) {\n\t\tforbiddenError = error;\n\t}\n\n\tif (forbiddenError) {\n\t\treturn forbiddenError.message;\n\t}\n\treturn null;\n}\n\nexport function getClientSideAuthError(error) {\n\tconst clientSideAuthErrors = Object.values(GraphQLAuthError);\n\tconst clientSideError =\n\t\terror &&\n\t\terror.message &&\n\t\tclientSideAuthErrors.find(clientError =>\n\t\t\terror.message.includes(clientError)\n\t\t);\n\treturn clientSideError || null;\n}\n\nexport async function getTokenForCustomAuth(\n\tauthMode: GRAPHQL_AUTH_MODE,\n\tamplifyConfig: Record<string, any> = {}\n): Promise<string | undefined> {\n\tif (authMode === GRAPHQL_AUTH_MODE.AWS_LAMBDA) {\n\t\tconst {\n\t\t\tauthProviders: { functionAuthProvider } = { functionAuthProvider: null },\n\t\t} = amplifyConfig;\n\t\tif (functionAuthProvider && typeof functionAuthProvider === 'function') {\n\t\t\ttry {\n\t\t\t\tconst { token } = await functionAuthProvider();\n\t\t\t\treturn token;\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Error retrieving token from \\`functionAuthProvider\\`: ${error}`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\t// TODO: add docs link once available\n\t\t\tthrow new Error(\n\t\t\t\t`You must provide a \\`functionAuthProvider\\` function to \\`DataStore.configure\\` when using ${GRAPHQL_AUTH_MODE.AWS_LAMBDA}`\n\t\t\t);\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}