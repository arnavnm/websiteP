{"ast":null,"code":"import * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useSize as r } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as p } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport a from \"@babel/runtime/helpers/esm/extends\";\nconst [c, l] = n(\"Popper\");\nexport { l as createPopperScope };\nconst [f, d] = c(\"Popper\");\nexport const Popper = e => {\n  const {\n    __scopePopper: o,\n    children: r\n  } = e,\n        [t, n] = s.useState(null);\n  /*#__PURE__*/\n\n  return s.createElement(f, {\n    scope: o,\n    anchor: t,\n    onAnchorChange: n\n  }, r);\n};\n/*#__PURE__*/\n\nexport const PopperAnchor = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n    __scopePopper: t,\n    virtualRef: n,\n    ...p\n  } = e,\n        c = d(\"PopperAnchor\", t),\n        l = s.useRef(null),\n        f = i(r, l);\n  return s.useEffect(() => {\n    c.onAnchorChange((null == n ? void 0 : n.current) || l.current);\n  }), n ? null : /*#__PURE__*/s.createElement(o.div, a({}, p, {\n    ref: f\n  }));\n});\n/*#__PURE__*/\n\nconst [u, m] = c(\"PopperContent\");\nexport const PopperContent = /*#__PURE__*/s.forwardRef((e, n) => {\n  const {\n    __scopePopper: c,\n    side: l = \"bottom\",\n    sideOffset: f,\n    align: m = \"center\",\n    alignOffset: w,\n    collisionTolerance: h,\n    avoidCollisions: x = !0,\n    ...v\n  } = e,\n        P = d(\"PopperContent\", c),\n        [A, g] = s.useState(),\n        E = t(P.anchor),\n        [y, C] = s.useState(null),\n        S = r(y),\n        [R, O] = s.useState(null),\n        _ = r(R),\n        b = i(n, e => C(e)),\n        z = function () {\n    const [e, o] = s.useState(void 0);\n    return s.useEffect(() => {\n      let e;\n\n      function r() {\n        o({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }\n\n      function t() {\n        window.clearTimeout(e), e = window.setTimeout(r, 100);\n      }\n\n      return r(), window.addEventListener(\"resize\", t), () => window.removeEventListener(\"resize\", t);\n    }, []), e;\n  }(),\n        T = z ? DOMRect.fromRect({ ...z,\n    x: 0,\n    y: 0\n  }) : void 0,\n        {\n    popperStyles: k,\n    arrowStyles: L,\n    placedSide: B,\n    placedAlign: D\n  } = p({\n    anchorRect: E,\n    popperSize: S,\n    arrowSize: _,\n    arrowOffset: A,\n    side: l,\n    sideOffset: f,\n    align: m,\n    alignOffset: w,\n    shouldAvoidCollisions: x,\n    collisionBoundariesRect: T,\n    collisionTolerance: h\n  }),\n        H = void 0 !== B;\n  /*#__PURE__*/\n\n\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(u, {\n    scope: c,\n    arrowStyles: L,\n    onArrowChange: O,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(o.div, a({\n    \"data-side\": B,\n    \"data-align\": D\n  }, v, {\n    style: { ...v.style,\n      animation: H ? void 0 : \"none\"\n    },\n    ref: b\n  }))));\n});\n/*#__PURE__*/\n\nexport const PopperArrow = /*#__PURE__*/s.forwardRef(function (o, r) {\n  const {\n    __scopePopper: t,\n    offset: n,\n    ...i\n  } = o,\n        p = m(\"PopperArrow\", t),\n        {\n    onArrowOffsetChange: c\n  } = p;\n  return s.useEffect(() => c(n), [c, n]), /*#__PURE__*/s.createElement(\"span\", {\n    style: { ...p.arrowStyles,\n      pointerEvents: \"none\"\n    }\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: p.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, a({}, i, {\n    ref: r,\n    style: { ...i.style,\n      display: \"block\"\n    }\n  }))));\n});\n/*#__PURE__*/\n\nexport const Root = Popper;\nexport const Anchor = PopperAnchor;\nexport const Content = PopperContent;\nexport const Arrow = PopperArrow;","map":{"version":3,"mappings":"AAAA,OAAM,KAAIA,CAAV,MAAgB,uBAAhB;AAAwC,SAAOC,SAAS,IAAIC,CAApB,QAA0B,2BAA1B;AAAsD,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,0BAAxB;AAAmD,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,0BAAxB;AAAmD,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,yBAAnC;AAA6D,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,8BAAhC;AAA+D,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,kBAAjC;AAAoD,OAAM,KAAIC,CAAV,MAAgB,OAAhB;AAAwB,OAAOC,CAAP,MAAa,oCAAb;AAAkD,MAAK,CAACC,CAAD,EAAGC,CAAH,IAAMR,CAAC,CAAC,QAAD,CAAZ;AAAuB,SAAOQ,CAAC,IAAIC,iBAAZ;AAA+B,MAAK,CAACC,CAAD,EAAGC,CAAH,IAAMJ,CAAC,CAAC,QAAD,CAAZ;AAAuB,OAAO,MAAMK,MAAM,GAACpB,CAAC,IAAE;EAAC,MAAK;IAACqB,aAAa,EAACnB,CAAf;IAAiBoB,QAAQ,EAAClB;EAA1B,IAA6BJ,CAAlC;EAAA,MAAoC,CAACM,CAAD,EAAGE,CAAH,IAAMK,CAAC,CAACU,QAAF,CAAW,IAAX,CAA1C;EAA2D;;EAAa,OAAOV,CAAC,CAACW,aAAF,CAAgBN,CAAhB,EAAkB;IAACO,KAAK,EAACvB,CAAP;IAASwB,MAAM,EAACpB,CAAhB;IAAkBqB,cAAc,EAACnB;EAAjC,CAAlB,EAAsDJ,CAAtD,CAAP;AAAgE,CAAzJ;AAA0J;;AAAa,OAAO,MAAMwB,YAAY,GAAC,aAAaf,CAAC,CAACgB,UAAF,CAAc,CAAC7B,CAAD,EAAGI,CAAH,KAAO;EAAC,MAAK;IAACiB,aAAa,EAACf,CAAf;IAAiBwB,UAAU,EAACtB,CAA5B;IAA8B,GAAGI;EAAjC,IAAoCZ,CAAzC;EAAA,MAA2Ce,CAAC,GAACI,CAAC,CAAC,cAAD,EAAgBb,CAAhB,CAA9C;EAAA,MAAiEU,CAAC,GAACH,CAAC,CAACkB,MAAF,CAAS,IAAT,CAAnE;EAAA,MAAkFb,CAAC,GAACR,CAAC,CAACN,CAAD,EAAGY,CAAH,CAArF;EAA2F,OAAOH,CAAC,CAACmB,SAAF,CAAa,MAAI;IAACjB,CAAC,CAACY,cAAF,CAAiB,CAAC,QAAMnB,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACyB,OAAlB,KAA4BjB,CAAC,CAACiB,OAA/C;EAAwD,CAA1E,GAA6EzB,CAAC,GAAC,IAAD,GAAM,aAAaK,CAAC,CAACW,aAAF,CAAgBtB,CAAC,CAACgC,GAAlB,EAAsBpB,CAAC,CAAC,EAAD,EAAIF,CAAJ,EAAM;IAACuB,GAAG,EAACjB;EAAL,CAAN,CAAvB,CAAxG;AAA+I,CAAhQ,CAAhC;AAAmS;;AAAa,MAAK,CAACkB,CAAD,EAAGC,CAAH,IAAMtB,CAAC,CAAC,eAAD,CAAZ;AAA8B,OAAO,MAAMuB,aAAa,GAAC,aAAazB,CAAC,CAACgB,UAAF,CAAc,CAAC7B,CAAD,EAAGQ,CAAH,KAAO;EAAC,MAAK;IAACa,aAAa,EAACN,CAAf;IAAiBwB,IAAI,EAACvB,CAAC,GAAC,QAAxB;IAAiCwB,UAAU,EAACtB,CAA5C;IAA8CuB,KAAK,EAACJ,CAAC,GAAC,QAAtD;IAA+DK,WAAW,EAACC,CAA3E;IAA6EC,kBAAkB,EAACC,CAAhG;IAAkGC,eAAe,EAACC,CAAC,GAAC,CAAC,CAArH;IAAuH,GAAGC;EAA1H,IAA6HhD,CAAlI;EAAA,MAAoIiD,CAAC,GAAC9B,CAAC,CAAC,eAAD,EAAiBJ,CAAjB,CAAvI;EAAA,MAA2J,CAACmC,CAAD,EAAGC,CAAH,IAAMtC,CAAC,CAACU,QAAF,EAAjK;EAAA,MAA8K6B,CAAC,GAAC9C,CAAC,CAAC2C,CAAC,CAACvB,MAAH,CAAjL;EAAA,MAA4L,CAAC2B,CAAD,EAAGC,CAAH,IAAMzC,CAAC,CAACU,QAAF,CAAW,IAAX,CAAlM;EAAA,MAAmNgC,CAAC,GAACnD,CAAC,CAACiD,CAAD,CAAtN;EAAA,MAA0N,CAACG,CAAD,EAAGC,CAAH,IAAM5C,CAAC,CAACU,QAAF,CAAW,IAAX,CAAhO;EAAA,MAAiPmC,CAAC,GAACtD,CAAC,CAACoD,CAAD,CAApP;EAAA,MAAwPG,CAAC,GAACjD,CAAC,CAACF,CAAD,EAAIR,CAAC,IAAEsD,CAAC,CAACtD,CAAD,CAAR,CAA3P;EAAA,MAAyQ4D,CAAC,GAAC,YAAU;IAAC,MAAK,CAAC5D,CAAD,EAAGE,CAAH,IAAMW,CAAC,CAACU,QAAF,CAAW,KAAK,CAAhB,CAAX;IAA8B,OAAOV,CAAC,CAACmB,SAAF,CAAa,MAAI;MAAC,IAAIhC,CAAJ;;MAAM,SAASI,CAAT,GAAY;QAACF,CAAC,CAAC;UAAC2D,KAAK,EAACC,MAAM,CAACC,UAAd;UAAyBC,MAAM,EAACF,MAAM,CAACG;QAAvC,CAAD,CAAD;MAAuD;;MAAA,SAAS3D,CAAT,GAAY;QAACwD,MAAM,CAACI,YAAP,CAAoBlE,CAApB,GAAuBA,CAAC,GAAC8D,MAAM,CAACK,UAAP,CAAkB/D,CAAlB,EAAoB,GAApB,CAAzB;MAAkD;;MAAA,OAAOA,CAAC,IAAG0D,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiC9D,CAAjC,CAAH,EAAuC,MAAIwD,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoC/D,CAApC,CAAnD;IAA0F,CAArP,EAAuP,EAAvP,GAA2PN,CAAlQ;EAAoQ,CAA7S,EAA3Q;EAAA,MAA2jBsE,CAAC,GAACV,CAAC,GAACW,OAAO,CAACC,QAAR,CAAiB,EAAC,GAAGZ,CAAJ;IAAMb,CAAC,EAAC,CAAR;IAAUM,CAAC,EAAC;EAAZ,CAAjB,CAAD,GAAkC,KAAK,CAArmB;EAAA,MAAumB;IAACoB,YAAY,EAACC,CAAd;IAAgBC,WAAW,EAACC,CAA5B;IAA8BC,UAAU,EAACC,CAAzC;IAA2CC,WAAW,EAACC;EAAvD,IAA0DpE,CAAC,CAAC;IAACqE,UAAU,EAAC7B,CAAZ;IAAc8B,UAAU,EAAC3B,CAAzB;IAA2B4B,SAAS,EAACzB,CAArC;IAAuC0B,WAAW,EAAClC,CAAnD;IAAqDX,IAAI,EAACvB,CAA1D;IAA4DwB,UAAU,EAACtB,CAAvE;IAAyEuB,KAAK,EAACJ,CAA/E;IAAiFK,WAAW,EAACC,CAA7F;IAA+F0C,qBAAqB,EAACtC,CAArH;IAAuHuC,uBAAuB,EAAChB,CAA/I;IAAiJ1B,kBAAkB,EAACC;EAApK,CAAD,CAAlqB;EAAA,MAA20B0C,CAAC,GAAC,KAAK,CAAL,KAAST,CAAt1B;EAAw1B;;;EAAa,OAAOjE,CAAC,CAACW,aAAF,CAAgB,KAAhB,EAAsB;IAACgE,KAAK,EAACd,CAAP;IAAS,qCAAoC;EAA7C,CAAtB,EAAuE,aAAa7D,CAAC,CAACW,aAAF,CAAgBY,CAAhB,EAAkB;IAACX,KAAK,EAACV,CAAP;IAAS4D,WAAW,EAACC,CAArB;IAAuBa,aAAa,EAAChC,CAArC;IAAuCiC,mBAAmB,EAACvC;EAA3D,CAAlB,EAAgF,aAAatC,CAAC,CAACW,aAAF,CAAgBtB,CAAC,CAACgC,GAAlB,EAAsBpB,CAAC,CAAC;IAAC,aAAYgE,CAAb;IAAe,cAAaE;EAA5B,CAAD,EAAgChC,CAAhC,EAAkC;IAACwC,KAAK,EAAC,EAAC,GAAGxC,CAAC,CAACwC,KAAN;MAAYG,SAAS,EAACJ,CAAC,GAAC,KAAK,CAAN,GAAQ;IAA/B,CAAP;IAA8CpD,GAAG,EAACwB;EAAlD,CAAlC,CAAvB,CAA7F,CAApF,CAAP;AAA0S,CAArqC,CAAjC;AAAysC;;AAAa,OAAO,MAAMiC,WAAW,GAAC,aAAa/E,CAAC,CAACgB,UAAF,CAAc,UAAS3B,CAAT,EAAWE,CAAX,EAAa;EAAC,MAAK;IAACiB,aAAa,EAACf,CAAf;IAAiBuF,MAAM,EAACrF,CAAxB;IAA0B,GAAGE;EAA7B,IAAgCR,CAArC;EAAA,MAAuCU,CAAC,GAACyB,CAAC,CAAC,aAAD,EAAe/B,CAAf,CAA1C;EAAA,MAA4D;IAACoF,mBAAmB,EAAC3E;EAArB,IAAwBH,CAApF;EAAsF,OAAOC,CAAC,CAACmB,SAAF,CAAa,MAAIjB,CAAC,CAACP,CAAD,CAAlB,EAAuB,CAACO,CAAD,EAAGP,CAAH,CAAvB,GAA8B,aAAaK,CAAC,CAACW,aAAF,CAAgB,MAAhB,EAAuB;IAACgE,KAAK,EAAC,EAAC,GAAG5E,CAAC,CAAC+D,WAAN;MAAkBmB,aAAa,EAAC;IAAhC;EAAP,CAAvB,EAAuE,aAAajF,CAAC,CAACW,aAAF,CAAgB,MAAhB,EAAuB;IAACW,GAAG,EAACvB,CAAC,CAAC6E,aAAP;IAAqBD,KAAK,EAAC;MAACO,OAAO,EAAC,cAAT;MAAwBC,aAAa,EAAC,KAAtC;MAA4CF,aAAa,EAAC;IAA1D;EAA3B,CAAvB,EAAqH,aAAajF,CAAC,CAACW,aAAF,CAAgBxB,CAAC,CAACiG,IAAlB,EAAuBnF,CAAC,CAAC,EAAD,EAAIJ,CAAJ,EAAM;IAACyB,GAAG,EAAC/B,CAAL;IAAOoF,KAAK,EAAC,EAAC,GAAG9E,CAAC,CAAC8E,KAAN;MAAYO,OAAO,EAAC;IAApB;EAAb,CAAN,CAAxB,CAAlI,CAApF,CAAlD;AAAqV,CAAvc,CAA/B;AAAye;;AAAa,OAAO,MAAME,IAAI,GAAC7E,MAAX;AAAkB,OAAO,MAAM8E,MAAM,GAACtE,YAAb;AAA0B,OAAO,MAAMuE,OAAO,GAAC7D,aAAd;AAA4B,OAAO,MAAM8D,KAAK,GAACR,WAAZ","names":["createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","useState","_react","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","scope","onAnchorChange","PopperAnchor","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","div","_babelRuntimeHelpersEsmExtends","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","collisionTolerance","avoidCollisions","contentProps","arrowOffset","setArrowOffset","anchorRect","useRect","content","setContent","contentSize","useSize","arrow","setArrow","arrowSize","node","windowSize","setWindowSize","undefined","debounceTimerId","updateWindowSize","width","window","innerWidth","height","innerHeight","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","useWindowSize","collisionBoundariesRect","DOMRect","fromRect","x","y","popperStyles","arrowStyles","placedSide","placedAlign","getPlacementData","popperSize","shouldAvoidCollisions","isPlaced","style","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","animation","PopperArrow","offset","arrowProps","pointerEvents","display","verticalAlign","_radixUiReactArrow","Root","Anchor","Content","Arrow"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  collisionTolerance?: number;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset,\n      align = 'center',\n      alignOffset,\n      collisionTolerance,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [arrowOffset, setArrowOffset] = React.useState<number>();\n    const anchorRect = useRect(context.anchor);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const contentSize = useSize(content);\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const windowSize = useWindowSize();\n    const collisionBoundariesRect = windowSize\n      ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n      : undefined;\n\n    const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n      anchorRect,\n      popperSize: contentSize,\n      arrowSize,\n\n      // config\n      arrowOffset,\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      shouldAvoidCollisions: avoidCollisions,\n      collisionBoundariesRect,\n      collisionTolerance,\n    });\n    const isPlaced = placedSide !== undefined;\n\n    return (\n      <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n        <PopperContentProvider\n          scope={__scopePopper}\n          arrowStyles={arrowStyles}\n          onArrowChange={setArrow}\n          onArrowOffsetChange={setArrowOffset}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPlaced ? 'none' : undefined,\n            }}\n            ref={composedRefs}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {\n  offset?: number;\n}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME, __scopePopper);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"]},"metadata":{},"sourceType":"module"}