{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport API from '@aws-amplify/api';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore'; // ! We have to use this exact reference, since it gets mutated with Amplify.Auth\n\nimport { Amplify } from './index';\nvar requiredModules = [// API cannot function without Auth\nAuth, // Auth cannot function without Credentials\nCredentials]; // These modules have been tested with SSR\n\nvar defaultModules = [API, Auth, DataStore];\nexport function withSSRContext(context) {\n  if (context === void 0) {\n    context = {};\n  }\n\n  var _a = context.modules,\n      modules = _a === void 0 ? defaultModules : _a,\n      req = context.req;\n  var previousConfig = Amplify.configure();\n  var amplify = new AmplifyClass();\n  var storage = new UniversalStorage({\n    req: req\n  });\n  requiredModules.forEach(function (m) {\n    if (!modules.includes(m)) {\n      // @ts-ignore This expression is not constructable.\n      // Type 'Function' has no construct signatures.ts(2351)\n      amplify.register(new m.constructor());\n    }\n  }); // Associate new module instances with this amplify\n\n  modules.forEach(function (m) {\n    amplify.register(new m.constructor());\n  }); // Configure new Amplify instances with previous configuration\n\n  amplify.configure(__assign(__assign({}, previousConfig), {\n    storage: storage\n  }));\n  return amplify;\n}","map":{"version":3,"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd;QAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;MADJ;IAEH;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,GAAP,MAAgB,kBAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,QAA4D,mBAA5D;AACA,SAASC,SAAT,QAA0B,wBAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,IAAIC,eAAe,GAAG,CAClB;AACAN,IAFkB,EAGlB;AACAE,WAJkB,CAAtB,C,CAMA;;AACA,IAAIK,cAAc,GAAG,CAACR,GAAD,EAAMC,IAAN,EAAYI,SAAZ,CAArB;AACA,OAAO,SAASI,cAAT,CAAwBC,OAAxB,EAAiC;EACpC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,EAAE,GAAGD,OAAO,CAACE,OAAjB;EAAA,IAA0BA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBH,cAAhB,GAAiCG,EAArE;EAAA,IAAyEE,GAAG,GAAGH,OAAO,CAACG,GAAvF;EACA,IAAIC,cAAc,GAAGR,OAAO,CAACS,SAAR,EAArB;EACA,IAAIC,OAAO,GAAG,IAAId,YAAJ,EAAd;EACA,IAAIe,OAAO,GAAG,IAAIb,gBAAJ,CAAqB;IAAES,GAAG,EAAEA;EAAP,CAArB,CAAd;EACAN,eAAe,CAACW,OAAhB,CAAwB,UAAUC,CAAV,EAAa;IACjC,IAAI,CAACP,OAAO,CAACQ,QAAR,CAAiBD,CAAjB,CAAL,EAA0B;MACtB;MACA;MACAH,OAAO,CAACK,QAAR,CAAiB,IAAIF,CAAC,CAACG,WAAN,EAAjB;IACH;EACJ,CAND,EANoC,CAapC;;EACAV,OAAO,CAACM,OAAR,CAAgB,UAAUC,CAAV,EAAa;IACzBH,OAAO,CAACK,QAAR,CAAiB,IAAIF,CAAC,CAACG,WAAN,EAAjB;EACH,CAFD,EAdoC,CAiBpC;;EACAN,OAAO,CAACD,SAAR,CAAkB7B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK4B,cAAL,CAAT,EAA+B;IAAEG,OAAO,EAAEA;EAAX,CAA/B,CAA1B;EACA,OAAOD,OAAP;AACH","names":["API","Auth","AmplifyClass","Credentials","UniversalStorage","DataStore","Amplify","requiredModules","defaultModules","withSSRContext","context","req","previousConfig","configure","amplify","storage","forEach","modules","includes","m","register","constructor","__assign"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/aws-amplify/src/withSSRContext.ts"],"sourcesContent":["import API from '@aws-amplify/api';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore';\n\n// ! We have to use this exact reference, since it gets mutated with Amplify.Auth\nimport { Amplify } from './index';\n\nconst requiredModules = [\n\t// API cannot function without Auth\n\tAuth,\n\t// Auth cannot function without Credentials\n\tCredentials,\n];\n\n// These modules have been tested with SSR\nconst defaultModules = [API, Auth, DataStore];\n\ntype Context = {\n\treq?: any;\n\tmodules?: any[];\n};\n\nexport function withSSRContext(context: Context = {}) {\n\tconst { modules = defaultModules, req } = context;\n\tconst previousConfig = Amplify.configure();\n\tconst amplify = new AmplifyClass();\n\tconst storage = new UniversalStorage({ req });\n\n\trequiredModules.forEach(m => {\n\t\tif (!modules.includes(m)) {\n\t\t\t// @ts-ignore This expression is not constructable.\n\t\t\t// Type 'Function' has no construct signatures.ts(2351)\n\t\t\tamplify.register(new m.constructor());\n\t\t}\n\t});\n\n\t// Associate new module instances with this amplify\n\tmodules.forEach(m => {\n\t\tamplify.register(new m.constructor());\n\t});\n\n\t// Configure new Amplify instances with previous configuration\n\tamplify.configure({ ...previousConfig, storage });\n\n\treturn amplify;\n}\n"]},"metadata":{},"sourceType":"module"}