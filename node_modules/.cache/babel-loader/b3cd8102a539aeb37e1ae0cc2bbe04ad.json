{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function applyMd5BodyChecksumMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request, body, headers, digest, hash, _a, _b, _c, _d, _e;\n\n        var _f, _g;\n\n        return __generator(this, function (_h) {\n          switch (_h.label) {\n            case 0:\n              request = args.request;\n              if (!HttpRequest.isInstance(request)) return [3\n              /*break*/\n              , 2];\n              body = request.body, headers = request.headers;\n              if (!!hasHeader(\"Content-MD5\", headers)) return [3\n              /*break*/\n              , 2];\n              digest = void 0;\n\n              if (body === undefined || typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n                hash = new options.md5();\n                hash.update(body || \"\");\n                digest = hash.digest();\n              } else {\n                digest = options.streamHasher(options.md5, body);\n              }\n\n              _a = [__assign({}, request)];\n              _f = {};\n              _b = [__assign({}, headers)];\n              _g = {};\n              _c = \"Content-MD5\";\n              _e = (_d = options).base64Encoder;\n              return [4\n              /*yield*/\n              , digest];\n\n            case 1:\n              request = __assign.apply(void 0, _a.concat([(_f.headers = __assign.apply(void 0, _b.concat([(_g[_c] = _e.apply(_d, [_h.sent()]), _g)])), _f)]));\n              _h.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n}\nexport var applyMd5BodyChecksumMiddlewareOptions = {\n  name: \"applyMd5BodyChecksumMiddleware\",\n  step: \"build\",\n  tags: [\"SET_CONTENT_MD5\", \"BODY_CHECKSUM\"],\n  override: true\n};\nexport var getApplyMd5BodyChecksumPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(applyMd5BodyChecksumMiddleware(config), applyMd5BodyChecksumMiddlewareOptions);\n    }\n  };\n};\n\nfunction hasHeader(soughtHeader, headers) {\n  var e_1, _a;\n\n  soughtHeader = soughtHeader.toLowerCase();\n\n  try {\n    for (var _b = __values(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n\n      if (soughtHeader === headerName.toLowerCase()) {\n        return true;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["isArrayBuffer","HttpRequest","applyMd5BodyChecksumMiddleware","options","next","args","request","isInstance","body","headers","hasHeader","digest","undefined","ArrayBuffer","isView","hash","md5","update","streamHasher","_c","_e","base64Encoder","_f","__assign","_g","_h","applyMd5BodyChecksumMiddlewareOptions","name","step","tags","override","getApplyMd5BodyChecksumPlugin","config","applyToStack","clientStack","add","soughtHeader","toLowerCase","keys","headerName"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/middleware-apply-body-checksum/src/applyMd5BodyChecksumMiddleware.ts"],"sourcesContent":["import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  BuildMiddleware,\n  HeaderBag,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { Md5BodyChecksumResolvedConfig } from \"./md5Configuration\";\n\nexport function applyMd5BodyChecksumMiddleware(options: Md5BodyChecksumResolvedConfig): BuildMiddleware<any, any> {\n  return <Output extends MetadataBearer>(next: BuildHandler<any, Output>): BuildHandler<any, Output> => async (\n    args: BuildHandlerArguments<any>\n  ): Promise<BuildHandlerOutput<Output>> => {\n    let { request } = args;\n    if (HttpRequest.isInstance(request)) {\n      const { body, headers } = request;\n      if (!hasHeader(\"Content-MD5\", headers)) {\n        let digest: Promise<Uint8Array>;\n        if (body === undefined || typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n          const hash = new options.md5();\n          hash.update(body || \"\");\n          digest = hash.digest();\n        } else {\n          digest = options.streamHasher(options.md5, body);\n        }\n\n        request = {\n          ...request,\n          headers: {\n            ...headers,\n            \"Content-MD5\": options.base64Encoder(await digest),\n          },\n        };\n      }\n    }\n    return next({\n      ...args,\n      request,\n    });\n  };\n}\n\nexport const applyMd5BodyChecksumMiddlewareOptions: BuildHandlerOptions = {\n  name: \"applyMd5BodyChecksumMiddleware\",\n  step: \"build\",\n  tags: [\"SET_CONTENT_MD5\", \"BODY_CHECKSUM\"],\n  override: true,\n};\n\nexport const getApplyMd5BodyChecksumPlugin = (config: Md5BodyChecksumResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(applyMd5BodyChecksumMiddleware(config), applyMd5BodyChecksumMiddlewareOptions);\n  },\n});\n\nfunction hasHeader(soughtHeader: string, headers: HeaderBag): boolean {\n  soughtHeader = soughtHeader.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (soughtHeader === headerName.toLowerCase()) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}