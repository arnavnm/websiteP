{"ast":null,"code":"import { constructStack } from \"@aws-sdk/middleware-stack\";\n\nvar Client =\n/** @class */\nfunction () {\n  function Client(config) {\n    this.middlewareStack = constructStack();\n    this.config = config;\n  }\n\n  Client.prototype.send = function (command, optionsOrCb, cb) {\n    var options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n    var callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n    var handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n\n    if (callback) {\n      handler(command).then(function (result) {\n        return callback(null, result.output);\n      }, function (err) {\n        return callback(err);\n      }).catch( // prevent any errors thrown in the callback from triggering an\n      // unhandled promise rejection\n      function () {});\n    } else {\n      return handler(command).then(function (result) {\n        return result.output;\n      });\n    }\n  };\n\n  Client.prototype.destroy = function () {\n    if (this.config.requestHandler.destroy) this.config.requestHandler.destroy();\n  };\n\n  return Client;\n}();\n\nexport { Client };","map":{"version":3,"mappings":"AAAA,SAASA,cAAT,QAA+B,2BAA/B;;AACA,IAAIC,MAAM;AAAG;AAAe,YAAY;EACpC,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;IACpB,KAAKC,eAAL,GAAuBH,cAAc,EAArC;IACA,KAAKE,MAAL,GAAcA,MAAd;EACH;;EACDD,MAAM,CAACG,SAAP,CAAiBC,IAAjB,GAAwB,UAAUC,OAAV,EAAmBC,WAAnB,EAAgCC,EAAhC,EAAoC;IACxD,IAAIC,OAAO,GAAG,OAAOF,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkDG,SAAhE;IACA,IAAIC,QAAQ,GAAG,OAAOJ,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkDC,EAAjE;IACA,IAAII,OAAO,GAAGN,OAAO,CAACO,iBAAR,CAA0B,KAAKV,eAA/B,EAAgD,KAAKD,MAArD,EAA6DO,OAA7D,CAAd;;IACA,IAAIE,QAAJ,EAAc;MACVC,OAAO,CAACN,OAAD,CAAP,CACKQ,IADL,CACU,UAAUC,MAAV,EAAkB;QAAE,OAAOJ,QAAQ,CAAC,IAAD,EAAOI,MAAM,CAACC,MAAd,CAAf;MAAuC,CADrE,EACuE,UAAUC,GAAV,EAAe;QAAE,OAAON,QAAQ,CAACM,GAAD,CAAf;MAAuB,CAD/G,EAEKC,KAFL,EAGA;MACA;MACA,YAAY,CAAG,CALf;IAMH,CAPD,MAQK;MACD,OAAON,OAAO,CAACN,OAAD,CAAP,CAAiBQ,IAAjB,CAAsB,UAAUC,MAAV,EAAkB;QAAE,OAAOA,MAAM,CAACC,MAAd;MAAuB,CAAjE,CAAP;IACH;EACJ,CAfD;;EAgBAf,MAAM,CAACG,SAAP,CAAiBe,OAAjB,GAA2B,YAAY;IACnC,IAAI,KAAKjB,MAAL,CAAYkB,cAAZ,CAA2BD,OAA/B,EACI,KAAKjB,MAAL,CAAYkB,cAAZ,CAA2BD,OAA3B;EACP,CAHD;;EAIA,OAAOlB,MAAP;AACH,CA1B2B,EAA5B;;AA2BA,SAASA,MAAT","names":["constructStack","config","Client","command","optionsOrCb","cb","options","undefined","callback","handler","resolveMiddleware","middlewareStack","then","result","output","err","catch","requestHandler","destroy"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/smithy-client/src/client.ts"],"sourcesContent":["import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Client as IClient, Command, MetadataBearer, RequestHandler } from \"@aws-sdk/types\";\n\nexport interface SmithyConfiguration<HandlerOptions> {\n  requestHandler: RequestHandler<any, any, HandlerOptions>;\n  /**\n   * The API version set internally by the SDK, and is\n   * not planned to be used by customer code.\n   * @internal\n   */\n  readonly apiVersion: string;\n}\n\nexport type SmithyResolvedConfiguration<HandlerOptions> = SmithyConfiguration<HandlerOptions>;\n\nexport class Client<\n  HandlerOptions,\n  ClientInput extends object,\n  ClientOutput extends MetadataBearer,\n  ResolvedClientConfiguration extends SmithyResolvedConfiguration<HandlerOptions>\n> implements IClient<ClientInput, ClientOutput, ResolvedClientConfiguration> {\n  public middlewareStack = constructStack<ClientInput, ClientOutput>();\n  readonly config: ResolvedClientConfiguration;\n  constructor(config: ResolvedClientConfiguration) {\n    this.config = config;\n  }\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options?: HandlerOptions\n  ): Promise<OutputType>;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options: HandlerOptions,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    optionsOrCb?: HandlerOptions | ((err: any, data?: OutputType) => void),\n    cb?: (err: any, data?: OutputType) => void\n  ): Promise<OutputType> | void {\n    const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n    const callback = typeof optionsOrCb === \"function\" ? (optionsOrCb as (err: any, data?: OutputType) => void) : cb;\n    const handler = command.resolveMiddleware(this.middlewareStack as any, this.config, options);\n    if (callback) {\n      handler(command)\n        .then(\n          (result) => callback(null, result.output),\n          (err: any) => callback(err)\n        )\n        .catch(\n          // prevent any errors thrown in the callback from triggering an\n          // unhandled promise rejection\n          () => {}\n        );\n    } else {\n      return handler(command).then((result) => result.output);\n    }\n  }\n\n  destroy() {\n    if (this.config.requestHandler.destroy) this.config.requestHandler.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}