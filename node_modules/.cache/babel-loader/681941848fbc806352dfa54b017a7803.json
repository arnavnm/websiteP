{"ast":null,"code":"import * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nfunction AttributionControl(props) {\n  var ctrl = useControl(function (_ref) {\n    var mapLib = _ref.mapLib;\n    return new mapLib.AttributionControl(props);\n  }, {\n    position: props.position\n  });\n  useEffect(function () {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n}\n\nexport default React.memo(AttributionControl);","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAC/B,IAAMC,IAAI,GAAGH,UAAU,CAAC;IAAA,IAAGI,MAAH,QAAGA,MAAH;IAAA,OAAgB,IAAIA,MAAM,CAACH,kBAAX,CAA8BC,KAA9B,CAAhB;EAAA,CAAD,EAAuD;IAC1EG,QAAQ,EAAEH,KAAK,CAACG;EAD0D,CAAvD,CAAvB;EAGAP,SAAS,CAAC,YAAM;IACZ;IACAC,eAAe,CAACI,IAAI,CAACG,UAAN,EAAkBJ,KAAK,CAACK,KAAxB,CAAf;EACH,CAHQ,EAGN,CAACL,KAAK,CAACK,KAAP,CAHM,CAAT;EAIA,OAAO,IAAP;AACH;;AACD,eAAeV,KAAK,CAACW,IAAN,CAAWP,kBAAX,CAAf","names":["React","useEffect","applyReactStyle","useControl","AttributionControl","props","ctrl","mapLib","position","_container","style","memo"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/react-map-gl/src/components/attribution-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl<MapboxAttributionControl>(\n    ({mapLib}) => new mapLib.AttributionControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n"]},"metadata":{},"sourceType":"module"}