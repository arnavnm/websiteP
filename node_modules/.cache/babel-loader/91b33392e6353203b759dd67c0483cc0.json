{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *\t http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { isUsernamePasswordOpts, isCognitoHostedOpts, isFederatedSignInOptions, isFederatedSignInOptionsCustom, hasCustomState } from './types';\nimport { Amplify, ConsoleLogger as Logger, Credentials, Hub, StorageHelper, Parser, browserOrNode, UniversalStorage, urlSafeDecode } from '@aws-amplify/core';\nimport { CookieStorage, CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserAttribute, CognitoIdToken, CognitoRefreshToken, CognitoAccessToken } from 'amazon-cognito-identity-js';\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport { AuthErrorTypes, CognitoHostedUIIdentityProvider } from './types/Auth';\nvar logger = new Logger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin'; // 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\n\nvar OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAuthEvent = function (event, data, message) {\n  Hub.dispatch('auth', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Auth', AMPLIFY_SYMBOL);\n}; // Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\n\n\nvar MAX_DEVICES = 60;\nvar MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\n/**\n * Provide authentication steps\n */\n\nvar AuthClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Auth with AWS configurations\n   * @param {Object} config - Configuration of the Auth\n   */\n  function AuthClass(config) {\n    var _this = this;\n\n    this.userPool = null;\n    this.user = null;\n    this.oAuthFlowInProgress = false;\n    this.autoSignInInitiated = false;\n    this.Credentials = Credentials;\n\n    this.wrapRefreshSessionCallback = function (callback) {\n      var wrapped = function (error, data) {\n        if (data) {\n          dispatchAuthEvent('tokenRefresh', undefined, \"New token retrieved\");\n        } else {\n          dispatchAuthEvent('tokenRefresh_failure', error, \"Failed to retrieve new token\");\n        }\n\n        return callback(error, data);\n      };\n\n      return wrapped;\n    }; // prettier-ignore\n\n\n    this.configure(config);\n    this.currentCredentials = this.currentCredentials.bind(this);\n    this.currentUserCredentials = this.currentUserCredentials.bind(this);\n    Hub.listen('auth', function (_a) {\n      var payload = _a.payload;\n      var event = payload.event;\n\n      switch (event) {\n        case 'signIn':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n\n          break;\n\n        case 'signOut':\n          _this._storage.removeItem('amplify-signin-with-hostedUI');\n\n          break;\n\n        case 'cognitoHostedUI':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n\n          break;\n      }\n    });\n  }\n\n  AuthClass.prototype.getModuleName = function () {\n    return 'Auth';\n  };\n\n  AuthClass.prototype.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config || {};\n    logger.debug('configure Auth');\n    var conf = Object.assign({}, this._config, Parser.parseMobilehubConfig(config).Auth, config);\n    this._config = conf;\n    var _a = this._config,\n        userPoolId = _a.userPoolId,\n        userPoolWebClientId = _a.userPoolWebClientId,\n        cookieStorage = _a.cookieStorage,\n        oauth = _a.oauth,\n        region = _a.region,\n        identityPoolId = _a.identityPoolId,\n        mandatorySignIn = _a.mandatorySignIn,\n        refreshHandlers = _a.refreshHandlers,\n        identityPoolRegion = _a.identityPoolRegion,\n        clientMetadata = _a.clientMetadata,\n        endpoint = _a.endpoint;\n\n    if (!this._config.storage) {\n      // backward compatability\n      if (cookieStorage) this._storage = new CookieStorage(cookieStorage);else {\n        this._storage = config.ssr ? new UniversalStorage() : new StorageHelper().getStorage();\n      }\n    } else {\n      if (!this._isValidAuthStorage(this._config.storage)) {\n        logger.error('The storage in the Auth config is not valid!');\n        throw new Error('Empty storage object');\n      }\n\n      this._storage = this._config.storage;\n    }\n\n    this._storageSync = Promise.resolve();\n\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n\n    if (userPoolId) {\n      var userPoolData = {\n        UserPoolId: userPoolId,\n        ClientId: userPoolWebClientId,\n        endpoint: endpoint\n      };\n      userPoolData.Storage = this._storage;\n      this.userPool = new CognitoUserPool(userPoolData, this.wrapRefreshSessionCallback);\n    }\n\n    this.Credentials.configure({\n      mandatorySignIn: mandatorySignIn,\n      region: identityPoolRegion || region,\n      userPoolId: userPoolId,\n      identityPoolId: identityPoolId,\n      refreshHandlers: refreshHandlers,\n      storage: this._storage\n    }); // initialize cognitoauth client if hosted ui options provided\n    // to keep backward compatibility:\n\n    var cognitoHostedUIConfig = oauth ? isCognitoHostedOpts(this._config.oauth) ? oauth : oauth.awsCognito : undefined;\n\n    if (cognitoHostedUIConfig) {\n      var cognitoAuthParams = Object.assign({\n        cognitoClientId: userPoolWebClientId,\n        UserPoolId: userPoolId,\n        domain: cognitoHostedUIConfig['domain'],\n        scopes: cognitoHostedUIConfig['scope'],\n        redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n        redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n        responseType: cognitoHostedUIConfig['responseType'],\n        Storage: this._storage,\n        urlOpener: cognitoHostedUIConfig['urlOpener'],\n        clientMetadata: clientMetadata\n      }, cognitoHostedUIConfig['options']);\n      this._oAuthHandler = new OAuth({\n        scopes: cognitoAuthParams.scopes,\n        config: cognitoAuthParams,\n        cognitoClientId: cognitoAuthParams.cognitoClientId\n      }); // **NOTE** - Remove this in a future major release as it is a breaking change\n      // Prevents _handleAuthResponse from being called multiple times in Expo\n      // See https://github.com/aws-amplify/amplify-js/issues/4388\n\n      var usedResponseUrls_1 = {};\n      urlListener(function (_a) {\n        var url = _a.url;\n\n        if (usedResponseUrls_1[url]) {\n          return;\n        }\n\n        usedResponseUrls_1[url] = true;\n\n        _this._handleAuthResponse(url);\n      });\n    }\n\n    dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n\n    if (!this.autoSignInInitiated && typeof this._storage['getItem'] === 'function') {\n      var pollingInitiated = this.isTrueStorageValue('amplify-polling-started');\n\n      if (pollingInitiated) {\n        dispatchAuthEvent('autoSignIn_failure', null, AuthErrorTypes.AutoSignInError);\n\n        this._storage.removeItem('amplify-auto-sign-in');\n      }\n\n      this._storage.removeItem('amplify-polling-started');\n    }\n\n    return this._config;\n  };\n  /**\n   * Sign up with username, password and other attributes like phone, email\n   * @param {String | object} params - The user attributes used for signin\n   * @param {String[]} restOfAttrs - for the backward compatability\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.signUp = function (params) {\n    var _this = this;\n\n    var restOfAttrs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      restOfAttrs[_i - 1] = arguments[_i];\n    }\n\n    var _a, _b, _c;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var attributes = [];\n    var validationData = null;\n    var clientMetadata;\n    var autoSignIn = {\n      enabled: false\n    };\n    var autoSignInValidationData = {};\n    var autoSignInClientMetaData = {};\n\n    if (params && typeof params === 'string') {\n      username = params;\n      password = restOfAttrs ? restOfAttrs[0] : null;\n      var email = restOfAttrs ? restOfAttrs[1] : null;\n      var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n      if (email) attributes.push(new CognitoUserAttribute({\n        Name: 'email',\n        Value: email\n      }));\n      if (phone_number) attributes.push(new CognitoUserAttribute({\n        Name: 'phone_number',\n        Value: phone_number\n      }));\n    } else if (params && typeof params === 'object') {\n      username = params['username'];\n      password = params['password'];\n\n      if (params && params.clientMetadata) {\n        clientMetadata = params.clientMetadata;\n      } else if (this._config.clientMetadata) {\n        clientMetadata = this._config.clientMetadata;\n      }\n\n      var attrs_1 = params['attributes'];\n\n      if (attrs_1) {\n        Object.keys(attrs_1).map(function (key) {\n          attributes.push(new CognitoUserAttribute({\n            Name: key,\n            Value: attrs_1[key]\n          }));\n        });\n      }\n\n      var validationDataObject_1 = params['validationData'];\n\n      if (validationDataObject_1) {\n        validationData = [];\n        Object.keys(validationDataObject_1).map(function (key) {\n          validationData.push(new CognitoUserAttribute({\n            Name: key,\n            Value: validationDataObject_1[key]\n          }));\n        });\n      }\n\n      autoSignIn = (_a = params.autoSignIn) !== null && _a !== void 0 ? _a : {\n        enabled: false\n      };\n\n      if (autoSignIn.enabled) {\n        this._storage.setItem('amplify-auto-sign-in', 'true');\n\n        autoSignInValidationData = (_b = autoSignIn.validationData) !== null && _b !== void 0 ? _b : {};\n        autoSignInClientMetaData = (_c = autoSignIn.clientMetaData) !== null && _c !== void 0 ? _c : {};\n      }\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.SignUpError);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    logger.debug('signUp attrs:', attributes);\n    logger.debug('signUp validation data:', validationData);\n    return new Promise(function (resolve, reject) {\n      _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n        if (err) {\n          dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n          reject(err);\n        } else {\n          dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n\n          if (autoSignIn.enabled) {\n            _this.handleAutoSignIn(username, password, autoSignInValidationData, autoSignInClientMetaData, data);\n          }\n\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.handleAutoSignIn = function (username, password, validationData, clientMetadata, data) {\n    this.autoSignInInitiated = true;\n    var authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    });\n\n    if (data.userConfirmed) {\n      this.signInAfterUserConfirmed(authDetails);\n    } else if (this._config.signUpVerificationMethod === 'link') {\n      this.handleLinkAutoSignIn(authDetails);\n    } else {\n      this.handleCodeAutoSignIn(authDetails);\n    }\n  };\n\n  AuthClass.prototype.handleCodeAutoSignIn = function (authDetails) {\n    var _this = this;\n\n    var listenEvent = function (_a) {\n      var payload = _a.payload;\n\n      if (payload.event === 'confirmSignUp') {\n        _this.signInAfterUserConfirmed(authDetails, listenEvent);\n      }\n    };\n\n    Hub.listen('auth', listenEvent);\n  };\n\n  AuthClass.prototype.handleLinkAutoSignIn = function (authDetails) {\n    var _this = this;\n\n    this._storage.setItem('amplify-polling-started', 'true');\n\n    var start = Date.now();\n    var autoSignInPollingIntervalId = setInterval(function () {\n      if (Date.now() - start > MAX_AUTOSIGNIN_POLLING_MS) {\n        clearInterval(autoSignInPollingIntervalId);\n        dispatchAuthEvent('autoSignIn_failure', null, 'Please confirm your account and use your credentials to sign in.');\n\n        _this._storage.removeItem('amplify-auto-sign-in');\n      } else {\n        _this.signInAfterUserConfirmed(authDetails, null, autoSignInPollingIntervalId);\n      }\n    }, 5000);\n  };\n\n  AuthClass.prototype.signInAfterUserConfirmed = function (authDetails, listenEvent, autoSignInPollingIntervalId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var user, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            user = this.createCognitoUser(authDetails.getUsername());\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , user.authenticateUser(authDetails, this.authCallbacks(user, function (value) {\n              dispatchAuthEvent('autoSignIn', value, authDetails.getUsername() + \" has signed in successfully\");\n\n              if (listenEvent) {\n                Hub.remove('auth', listenEvent);\n              }\n\n              if (autoSignInPollingIntervalId) {\n                clearInterval(autoSignInPollingIntervalId);\n\n                _this._storage.removeItem('amplify-polling-started');\n              }\n\n              _this._storage.removeItem('amplify-auto-sign-in');\n            }, function (error) {\n              logger.error(error);\n\n              _this._storage.removeItem('amplify-auto-sign-in');\n            }))];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n            logger.error(error_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Send the verification code to confirm sign up\n   * @param {String} username - The username to be confirmed\n   * @param {String} code - The verification code\n   * @param {ConfirmSignUpOptions} options - other options for confirm signup\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.confirmSignUp = function (username, code, options) {\n    var _this = this;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var user = this.createCognitoUser(username);\n    var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean' ? options.forceAliasCreation : true;\n    var clientMetadata;\n\n    if (options && options.clientMetadata) {\n      clientMetadata = options.clientMetadata;\n    } else if (this._config.clientMetadata) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          dispatchAuthEvent('confirmSignUp', data, username + \" has been confirmed successfully\");\n\n          var autoSignIn = _this.isTrueStorageValue('amplify-auto-sign-in');\n\n          if (autoSignIn && !_this.autoSignInInitiated) {\n            dispatchAuthEvent('autoSignIn_failure', null, AuthErrorTypes.AutoSignInError);\n\n            _this._storage.removeItem('amplify-auto-sign-in');\n          }\n\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.isTrueStorageValue = function (value) {\n    var item = this._storage.getItem(value);\n\n    return item ? item === 'true' : false;\n  };\n  /**\n   * Resend the verification code\n   * @param {String} username - The username to be confirmed\n   * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n   * @return - A promise resolves code delivery details if successful\n   */\n\n\n  AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.resendConfirmationCode(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Sign in\n   * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n   * @param {String} password - The password of the username\n   * @return - A promise resolves the CognitoUser\n   */\n\n\n  AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var validationData = {}; // for backward compatibility\n\n    if (typeof usernameOrSignInOpts === 'string') {\n      username = usernameOrSignInOpts;\n      password = pw;\n    } else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n      if (typeof pw !== 'undefined') {\n        logger.warn('The password should be defined under the first parameter object!');\n      }\n\n      username = usernameOrSignInOpts.username;\n      password = usernameOrSignInOpts.password;\n      validationData = usernameOrSignInOpts.validationData;\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    });\n\n    if (password) {\n      return this.signInWithPassword(authDetails);\n    } else {\n      return this.signInWithoutPassword(authDetails);\n    }\n  };\n  /**\n   * Return an object with the authentication callbacks\n   * @param {CognitoUser} user - the cognito user object\n   * @param {} resolve - function called when resolving the current step\n   * @param {} reject - function called when rejecting the current step\n   * @return - an object with the callback methods for user authentication\n   */\n\n\n  AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n    var _this = this;\n\n    var that = this;\n    return {\n      onSuccess: function (session) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cred, e_1, currentUser, e_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug(session);\n                delete user['challengeName'];\n                delete user['challengeParam'];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 4, 5, 9]);\n\n                return [4\n                /*yield*/\n                , this.Credentials.clear()];\n\n              case 2:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , this.Credentials.set(session, 'session')];\n\n              case 3:\n                cred = _a.sent();\n                logger.debug('succeed to get cognito credentials', cred);\n                return [3\n                /*break*/\n                , 9];\n\n              case 4:\n                e_1 = _a.sent();\n                logger.debug('cannot get cognito credentials', e_1);\n                return [3\n                /*break*/\n                , 9];\n\n              case 5:\n                _a.trys.push([5, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , this.currentUserPoolUser()];\n\n              case 6:\n                currentUser = _a.sent();\n                that.user = currentUser;\n                dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                resolve(currentUser);\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                e_2 = _a.sent();\n                logger.error('Failed to get the signed in user', e_2);\n                reject(e_2);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [7\n                /*endfinally*/\n                ];\n\n              case 9:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      },\n      onFailure: function (err) {\n        logger.debug('signIn failure', err);\n        dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n        reject(err);\n      },\n      customChallenge: function (challengeParam) {\n        logger.debug('signIn custom challenge answer required');\n        user['challengeName'] = 'CUSTOM_CHALLENGE';\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaRequired: function (challengeName, challengeParam) {\n        logger.debug('signIn MFA required');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaSetup: function (challengeName, challengeParam) {\n        logger.debug('signIn mfa setup', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      newPasswordRequired: function (userAttributes, requiredAttributes) {\n        logger.debug('signIn new password');\n        user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n        user['challengeParam'] = {\n          userAttributes: userAttributes,\n          requiredAttributes: requiredAttributes\n        };\n        resolve(user);\n      },\n      totpRequired: function (challengeName, challengeParam) {\n        logger.debug('signIn totpRequired');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      selectMFAType: function (challengeName, challengeParam) {\n        logger.debug('signIn selectMFAType', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      }\n    };\n  };\n  /**\n   * Sign in with a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithPassword = function (authDetails) {\n    var _this = this;\n\n    if (this.pendingSignIn) {\n      throw new Error('Pending sign-in attempt already in progress');\n    }\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    this.pendingSignIn = new Promise(function (resolve, reject) {\n      user.authenticateUser(authDetails, _this.authCallbacks(user, function (value) {\n        _this.pendingSignIn = null;\n        resolve(value);\n      }, function (error) {\n        _this.pendingSignIn = null;\n        reject(error);\n      }));\n    });\n    return this.pendingSignIn;\n  };\n  /**\n   * Sign in without a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n    var _this = this;\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    user.setAuthenticationFlowType('CUSTOM_AUTH');\n    return new Promise(function (resolve, reject) {\n      user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n    });\n  };\n  /**\n   * This was previously used by an authenticated user to get MFAOptions,\n   * but no longer returns a meaningful response. Refer to the documentation for\n   * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves the current preferred mfa option if success\n   */\n\n\n  AuthClass.prototype.getMFAOptions = function (user) {\n    return new Promise(function (res, rej) {\n      user.getMFAOptions(function (err, mfaOptions) {\n        if (err) {\n          logger.debug('get MFA Options failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('get MFA options success', mfaOptions);\n        res(mfaOptions);\n        return;\n      });\n    });\n  };\n  /**\n   * get preferred mfa method\n   * @param {CognitoUser} user - the current cognito user\n   * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n   */\n\n\n  AuthClass.prototype.getPreferredMFA = function (user, params) {\n    var _this = this;\n\n    var that = this;\n    return new Promise(function (res, rej) {\n      var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n      var bypassCache = params ? params.bypassCache : false;\n      user.getUserData(function (err, data) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cleanUpError_1, mfaType;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!err) return [3\n                /*break*/\n                , 5];\n                logger.debug('getting preferred mfa failed', err);\n                if (!this.isSessionInvalid(err)) return [3\n                /*break*/\n                , 4];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.cleanUpInvalidSession(user)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                cleanUpError_1 = _a.sent();\n                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_1.message));\n                return [2\n                /*return*/\n                ];\n\n              case 4:\n                rej(err);\n                return [2\n                /*return*/\n                ];\n\n              case 5:\n                mfaType = that._getMfaTypeFromUserData(data);\n\n                if (!mfaType) {\n                  rej('invalid MFA Type');\n                  return [2\n                  /*return*/\n                  ];\n                } else {\n                  res(mfaType);\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, {\n        bypassCache: bypassCache,\n        clientMetadata: clientMetadata\n      });\n    });\n  };\n\n  AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n    var ret = null;\n    var preferredMFA = data.PreferredMfaSetting; // if the user has used Auth.setPreferredMFA() to setup the mfa type\n    // then the \"PreferredMfaSetting\" would exist in the response\n\n    if (preferredMFA) {\n      ret = preferredMFA;\n    } else {\n      // if mfaList exists but empty, then its noMFA\n      var mfaList = data.UserMFASettingList;\n\n      if (!mfaList) {\n        // if SMS was enabled by using Auth.enableSMS(),\n        // the response would contain MFAOptions\n        // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n        // if it does not exist, then it should be NOMFA\n        var MFAOptions = data.MFAOptions;\n\n        if (MFAOptions) {\n          ret = 'SMS_MFA';\n        } else {\n          ret = 'NOMFA';\n        }\n      } else if (mfaList.length === 0) {\n        ret = 'NOMFA';\n      } else {\n        logger.debug('invalid case for getPreferredMFA', data);\n      }\n    }\n\n    return ret;\n  };\n\n  AuthClass.prototype._getUserData = function (user, params) {\n    var _this = this;\n\n    return new Promise(function (res, rej) {\n      user.getUserData(function (err, data) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cleanUpError_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!err) return [3\n                /*break*/\n                , 5];\n                logger.debug('getting user data failed', err);\n                if (!this.isSessionInvalid(err)) return [3\n                /*break*/\n                , 4];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.cleanUpInvalidSession(user)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                cleanUpError_2 = _a.sent();\n                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_2.message));\n                return [2\n                /*return*/\n                ];\n\n              case 4:\n                rej(err);\n                return [2\n                /*return*/\n                ];\n\n              case 5:\n                res(data);\n                _a.label = 6;\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, params);\n    });\n  };\n  /**\n   * set preferred MFA method\n   * @param {CognitoUser} user - the current Cognito user\n   * @param {string} mfaMethod - preferred mfa method\n   * @return - A promise resolve if success\n   */\n\n\n  AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientMetadata, userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            clientMetadata = this._config.clientMetadata;\n            return [4\n            /*yield*/\n            , this._getUserData(user, {\n              bypassCache: true,\n              clientMetadata: clientMetadata\n            })];\n\n          case 1:\n            userData = _b.sent();\n            smsMfaSettings = null;\n            totpMfaSettings = null;\n            _a = mfaMethod;\n\n            switch (_a) {\n              case 'TOTP':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SOFTWARE_TOKEN_MFA':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SMS':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'SMS_MFA':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'NOMFA':\n                return [3\n                /*break*/\n                , 4];\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 2:\n            totpMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 3:\n            smsMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 4:\n            mfaList = userData['UserMFASettingList'];\n            return [4\n            /*yield*/\n            , this._getMfaTypeFromUserData(userData)];\n\n          case 5:\n            currentMFAType = _b.sent();\n\n            if (currentMFAType === 'NOMFA') {\n              return [2\n              /*return*/\n              , Promise.resolve('No change for mfa type')];\n            } else if (currentMFAType === 'SMS_MFA') {\n              smsMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n              totpMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else {\n              return [2\n              /*return*/\n              , this.rejectAuthError(AuthErrorTypes.InvalidMFA)];\n            } // if there is a UserMFASettingList in the response\n            // we need to disable every mfa type in that list\n\n\n            if (mfaList && mfaList.length !== 0) {\n              // to disable SMS or TOTP if exists in that list\n              mfaList.forEach(function (mfaType) {\n                if (mfaType === 'SMS_MFA') {\n                  smsMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                } else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                  totpMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                }\n              });\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            logger.debug('no validmfa method provided');\n            return [2\n            /*return*/\n            , this.rejectAuthError(AuthErrorTypes.NoMFA)];\n\n          case 7:\n            that = this;\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                if (err) {\n                  logger.debug('Set user mfa preference error', err);\n                  return rej(err);\n                }\n\n                logger.debug('Set user mfa success', result);\n                logger.debug('Caching the latest user data into local'); // cache the latest result into user data\n\n                user.getUserData(function (err, data) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var cleanUpError_3;\n                    return __generator(this, function (_a) {\n                      switch (_a.label) {\n                        case 0:\n                          if (!err) return [3\n                          /*break*/\n                          , 5];\n                          logger.debug('getting user data failed', err);\n                          if (!this.isSessionInvalid(err)) return [3\n                          /*break*/\n                          , 4];\n                          _a.label = 1;\n\n                        case 1:\n                          _a.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.cleanUpInvalidSession(user)];\n\n                        case 2:\n                          _a.sent();\n\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          cleanUpError_3 = _a.sent();\n                          rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_3.message));\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 4:\n                          return [2\n                          /*return*/\n                          , rej(err)];\n\n                        case 5:\n                          return [2\n                          /*return*/\n                          , res(result)];\n                      }\n                    });\n                  });\n                }, {\n                  bypassCache: true,\n                  clientMetadata: clientMetadata\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * disable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.disableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.disableMFA(function (err, data) {\n        if (err) {\n          logger.debug('disable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('disable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * enable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.enableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.enableMFA(function (err, data) {\n        if (err) {\n          logger.debug('enable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('enable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * Setup TOTP\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves with the secret code if success\n   */\n\n\n  AuthClass.prototype.setupTOTP = function (user) {\n    return new Promise(function (res, rej) {\n      user.associateSoftwareToken({\n        onFailure: function (err) {\n          logger.debug('associateSoftwareToken failed', err);\n          rej(err);\n          return;\n        },\n        associateSecretCode: function (secretCode) {\n          logger.debug('associateSoftwareToken sucess', secretCode);\n          res(secretCode);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * verify TOTP setup\n   * @param {CognitoUser} user - the current user\n   * @param {string} challengeAnswer - challenge answer\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n    logger.debug('verification totp token', user, challengeAnswer);\n    return new Promise(function (res, rej) {\n      user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n        onFailure: function (err) {\n          logger.debug('verifyTotpToken failed', err);\n          rej(err);\n          return;\n        },\n        onSuccess: function (data) {\n          dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n          logger.debug('verifyTotpToken success', data);\n          res(data);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * Send MFA code to confirm sign in\n   * @param {Object} user - The CognitoUser object\n   * @param {String} code - The confirmation code\n   */\n\n\n  AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendMFACode(code, {\n        onSuccess: function (session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_3;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_3 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_3);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function (err) {\n          logger.debug('confirm signIn failure', err);\n          reject(err);\n        }\n      }, mfaType, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n    var _this = this;\n\n    if (requiredAttributes === void 0) {\n      requiredAttributes = {};\n    }\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.completeNewPasswordChallenge(password, requiredAttributes, {\n        onSuccess: function (session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_4;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_4 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_4);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function (err) {\n          logger.debug('completeNewPassword failure', err);\n          dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n          reject(err);\n        },\n        mfaRequired: function (challengeName, challengeParam) {\n          logger.debug('signIn MFA required');\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        mfaSetup: function (challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        totpRequired: function (challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Send the answer to a custom challenge\n   * @param {CognitoUser} user - The CognitoUser object\n   * @param {String} challengeResponses - The confirmation code\n   */\n\n\n  AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!challengeResponses) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n    });\n  };\n  /**\n   * Delete an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.deleteUserAttributes = function (user, attributeNames) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        user.deleteAttributes(attributeNames, function (err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        });\n      });\n    });\n  };\n  /**\n   * Delete the current authenticated user\n   * @return {Promise}\n   **/\n  // TODO: Check return type void\n\n\n  AuthClass.prototype.deleteUser = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_5, isSignedInHostedUI;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_5 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_5);\n            throw new Error(e_5);\n\n          case 3:\n            isSignedInHostedUI = this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var user_1;\n\n                var _this = this;\n\n                return __generator(this, function (_a) {\n                  if (this.userPool) {\n                    user_1 = this.userPool.getCurrentUser();\n\n                    if (!user_1) {\n                      logger.debug('Failed to get user from user pool');\n                      return [2\n                      /*return*/\n                      , rej(new Error('No current user.'))];\n                    } else {\n                      user_1.getSession(function (err, session) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var cleanUpError_4;\n\n                          var _this = this;\n\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                if (!err) return [3\n                                /*break*/\n                                , 5];\n                                logger.debug('Failed to get the user session', err);\n                                if (!this.isSessionInvalid(err)) return [3\n                                /*break*/\n                                , 4];\n                                _a.label = 1;\n\n                              case 1:\n                                _a.trys.push([1, 3,, 4]);\n\n                                return [4\n                                /*yield*/\n                                , this.cleanUpInvalidSession(user_1)];\n\n                              case 2:\n                                _a.sent();\n\n                                return [3\n                                /*break*/\n                                , 4];\n\n                              case 3:\n                                cleanUpError_4 = _a.sent();\n                                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_4.message));\n                                return [2\n                                /*return*/\n                                ];\n\n                              case 4:\n                                return [2\n                                /*return*/\n                                , rej(err)];\n\n                              case 5:\n                                user_1.deleteUser(function (err, result) {\n                                  if (err) {\n                                    rej(err);\n                                  } else {\n                                    dispatchAuthEvent('userDeleted', result, 'The authenticated user has been deleted.');\n                                    user_1.signOut();\n                                    _this.user = null;\n\n                                    try {\n                                      _this.cleanCachedItems(); // clean aws credentials\n\n                                    } catch (e) {\n                                      // TODO: change to rejects in refactor\n                                      logger.debug('failed to clear cached items');\n                                    }\n\n                                    if (isSignedInHostedUI) {\n                                      _this.oAuthSignOutRedirect(res, rej);\n                                    } else {\n                                      dispatchAuthEvent('signOut', _this.user, \"A user has been signed out\");\n                                      res(result);\n                                    }\n                                  }\n                                });\n                                _a.label = 6;\n\n                              case 6:\n                                return [2\n                                /*return*/\n                                ];\n                            }\n                          });\n                        });\n                      });\n                    }\n                  } else {\n                    logger.debug('no Congito User pool');\n                    rej(new Error('Cognito User pool does not exist'));\n                  }\n\n                  return [2\n                  /*return*/\n                  ];\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Update an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    var attributeList = [];\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        for (var key in attributes) {\n          if (key !== 'sub' && key.indexOf('_verified') < 0) {\n            var attr = {\n              Name: key,\n              Value: attributes[key]\n            };\n            attributeList.push(attr);\n          }\n        }\n\n        user.updateAttributes(attributeList, function (err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Return user attributes\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to user attributes if success\n   */\n\n\n  AuthClass.prototype.userAttributes = function (user) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.getUserAttributes(function (err, attributes) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(attributes);\n          }\n        });\n      });\n    });\n  };\n\n  AuthClass.prototype.verifiedContact = function (user) {\n    var that = this;\n    return this.userAttributes(user).then(function (attributes) {\n      var attrs = that.attributesToObject(attributes);\n      var unverified = {};\n      var verified = {};\n\n      if (attrs['email']) {\n        if (attrs['email_verified']) {\n          verified['email'] = attrs['email'];\n        } else {\n          unverified['email'] = attrs['email'];\n        }\n      }\n\n      if (attrs['phone_number']) {\n        if (attrs['phone_number_verified']) {\n          verified['phone_number'] = attrs['phone_number'];\n        } else {\n          unverified['phone_number'] = attrs['phone_number'];\n        }\n      }\n\n      return {\n        verified: verified,\n        unverified: unverified\n      };\n    });\n  };\n\n  AuthClass.prototype.isErrorWithMessage = function (err) {\n    return typeof err === 'object' && Object.prototype.hasOwnProperty.call(err, 'message');\n  }; // Session revoked by another app\n\n\n  AuthClass.prototype.isTokenRevokedError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Access Token has been revoked';\n  };\n\n  AuthClass.prototype.isRefreshTokenRevokedError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Refresh Token has been revoked';\n  };\n\n  AuthClass.prototype.isUserDisabledError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'User is disabled.';\n  };\n\n  AuthClass.prototype.isUserDoesNotExistError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'User does not exist.';\n  };\n\n  AuthClass.prototype.isRefreshTokenExpiredError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Refresh Token has expired';\n  };\n\n  AuthClass.prototype.isSignedInHostedUI = function () {\n    return this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n  };\n\n  AuthClass.prototype.isSessionInvalid = function (err) {\n    return this.isUserDisabledError(err) || this.isUserDoesNotExistError(err) || this.isTokenRevokedError(err) || this.isRefreshTokenRevokedError(err) || this.isRefreshTokenExpiredError(err);\n  };\n\n  AuthClass.prototype.cleanUpInvalidSession = function (user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_6;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            user.signOut();\n            this.user = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.cleanCachedItems()];\n\n          case 2:\n            _a.sent(); // clean aws credentials\n\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_6 = _a.sent();\n            logger.debug('failed to clear cached items');\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            if (this.isSignedInHostedUI()) {\n              return [2\n              /*return*/\n              , new Promise(function (res, rej) {\n                _this.oAuthSignOutRedirect(res, rej);\n              })];\n            } else {\n              dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get current authenticated user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentUserPoolUser = function (params) {\n    var _this = this;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    return new Promise(function (res, rej) {\n      _this._storageSync.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, clientMetadata;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.isOAuthInProgress()) return [3\n                /*break*/\n                , 2];\n                logger.debug('OAuth signIn in progress, waiting for resolution...');\n                return [4\n                /*yield*/\n                , new Promise(function (res) {\n                  var timeoutId = setTimeout(function () {\n                    logger.debug('OAuth signIn in progress timeout');\n                    Hub.remove('auth', hostedUISignCallback);\n                    res();\n                  }, OAUTH_FLOW_MS_TIMEOUT);\n                  Hub.listen('auth', hostedUISignCallback);\n\n                  function hostedUISignCallback(_a) {\n                    var payload = _a.payload;\n                    var event = payload.event;\n\n                    if (event === 'cognitoHostedUI' || event === 'cognitoHostedUI_failure') {\n                      logger.debug(\"OAuth signIn resolved: \" + event);\n                      clearTimeout(timeoutId);\n                      Hub.remove('auth', hostedUISignCallback);\n                      res();\n                    }\n                  }\n                })];\n\n              case 1:\n                _a.sent();\n\n                _a.label = 2;\n\n              case 2:\n                user = this.userPool.getCurrentUser();\n\n                if (!user) {\n                  logger.debug('Failed to get user from user pool');\n                  rej('No current user');\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                clientMetadata = this._config.clientMetadata; // refresh the session if the session expired.\n\n                user.getSession(function (err, session) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var cleanUpError_5, bypassCache, clientMetadata, _a, scope;\n\n                    var _this = this;\n\n                    return __generator(this, function (_b) {\n                      switch (_b.label) {\n                        case 0:\n                          if (!err) return [3\n                          /*break*/\n                          , 5];\n                          logger.debug('Failed to get the user session', err);\n                          if (!this.isSessionInvalid(err)) return [3\n                          /*break*/\n                          , 4];\n                          _b.label = 1;\n\n                        case 1:\n                          _b.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.cleanUpInvalidSession(user)];\n\n                        case 2:\n                          _b.sent();\n\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          cleanUpError_5 = _b.sent();\n                          rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_5.message));\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 4:\n                          rej(err);\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 5:\n                          bypassCache = params ? params.bypassCache : false;\n                          if (!bypassCache) return [3\n                          /*break*/\n                          , 7];\n                          return [4\n                          /*yield*/\n                          , this.Credentials.clear()];\n\n                        case 6:\n                          _b.sent();\n\n                          _b.label = 7;\n\n                        case 7:\n                          clientMetadata = this._config.clientMetadata;\n                          _a = session.getAccessToken().decodePayload().scope, scope = _a === void 0 ? '' : _a;\n\n                          if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n                            user.getUserData(function (err, data) {\n                              return __awaiter(_this, void 0, void 0, function () {\n                                var cleanUpError_6, preferredMFA, attributeList, i, attribute, userAttribute, attributes;\n                                return __generator(this, function (_a) {\n                                  switch (_a.label) {\n                                    case 0:\n                                      if (!err) return [3\n                                      /*break*/\n                                      , 7];\n                                      logger.debug('getting user data failed', err);\n                                      if (!this.isSessionInvalid(err)) return [3\n                                      /*break*/\n                                      , 5];\n                                      _a.label = 1;\n\n                                    case 1:\n                                      _a.trys.push([1, 3,, 4]);\n\n                                      return [4\n                                      /*yield*/\n                                      , this.cleanUpInvalidSession(user)];\n\n                                    case 2:\n                                      _a.sent();\n\n                                      return [3\n                                      /*break*/\n                                      , 4];\n\n                                    case 3:\n                                      cleanUpError_6 = _a.sent();\n                                      rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_6.message));\n                                      return [2\n                                      /*return*/\n                                      ];\n\n                                    case 4:\n                                      rej(err);\n                                      return [3\n                                      /*break*/\n                                      , 6];\n\n                                    case 5:\n                                      res(user);\n                                      _a.label = 6;\n\n                                    case 6:\n                                      return [2\n                                      /*return*/\n                                      ];\n\n                                    case 7:\n                                      preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n                                      attributeList = [];\n\n                                      for (i = 0; i < data.UserAttributes.length; i++) {\n                                        attribute = {\n                                          Name: data.UserAttributes[i].Name,\n                                          Value: data.UserAttributes[i].Value\n                                        };\n                                        userAttribute = new CognitoUserAttribute(attribute);\n                                        attributeList.push(userAttribute);\n                                      }\n\n                                      attributes = this.attributesToObject(attributeList);\n                                      Object.assign(user, {\n                                        attributes: attributes,\n                                        preferredMFA: preferredMFA\n                                      });\n                                      return [2\n                                      /*return*/\n                                      , res(user)];\n                                  }\n                                });\n                              });\n                            }, {\n                              bypassCache: bypassCache,\n                              clientMetadata: clientMetadata\n                            });\n                          } else {\n                            logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" + \"is not in the scopes of the access token\");\n                            return [2\n                            /*return*/\n                            , res(user)];\n                          }\n\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                }, {\n                  clientMetadata: clientMetadata\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to sync cache info into memory', e);\n        return rej(e);\n      });\n    });\n  };\n\n  AuthClass.prototype.isOAuthInProgress = function () {\n    return this.oAuthFlowInProgress;\n  };\n  /**\n   * Get current authenticated user\n   * @param {CurrentUserOpts} - options for getting the current user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentAuthenticatedUser = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var federatedUser, e_7, federatedInfo, user, e_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting current authenticated user');\n            federatedUser = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_7 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_7);\n            throw e_7;\n\n          case 4:\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n\n              if (federatedInfo) {\n                federatedUser = __assign(__assign({}, federatedInfo.user), {\n                  token: federatedInfo.token\n                });\n              }\n            } catch (e) {\n              logger.debug('cannot load federated user from auth storage');\n            }\n\n            if (!federatedUser) return [3\n            /*break*/\n            , 5];\n            this.user = federatedUser;\n            logger.debug('get current authenticated federated user', this.user);\n            return [2\n            /*return*/\n            , this.user];\n\n          case 5:\n            logger.debug('get current authenticated userpool user');\n            user = null;\n            _a.label = 6;\n\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser(params)];\n\n          case 7:\n            user = _a.sent();\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_8 = _a.sent();\n\n            if (e_8 === 'No userPool') {\n              logger.error('Cannot get the current user because the user pool is missing. ' + 'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n            }\n\n            logger.debug('The user is not authenticated by the error', e_8);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 9:\n            this.user = user;\n            return [2\n            /*return*/\n            , this.user];\n        }\n      });\n    });\n  };\n  /**\n   * Get current user's session\n   * @return - A promise resolves to session object if success\n   */\n\n\n  AuthClass.prototype.currentSession = function () {\n    var that = this;\n    logger.debug('Getting current session'); // Purposely not calling the reject method here because we don't need a console error\n\n    if (!this.userPool) {\n      return Promise.reject(new Error('No User Pool in the configuration.'));\n    }\n\n    return new Promise(function (res, rej) {\n      that.currentUserPoolUser().then(function (user) {\n        that.userSession(user).then(function (session) {\n          res(session);\n          return;\n        }).catch(function (e) {\n          logger.debug('Failed to get the current session', e);\n          rej(e);\n          return;\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to get the current user', e);\n        rej(e);\n        return;\n      });\n    });\n  };\n  /**\n   * Get the corresponding user session\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to the session\n   */\n\n\n  AuthClass.prototype.userSession = function (user) {\n    var _this = this;\n\n    if (!user) {\n      logger.debug('the user is null');\n      return this.rejectAuthError(AuthErrorTypes.NoUserSession);\n    }\n\n    var clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n    return new Promise(function (res, rej) {\n      logger.debug('Getting the session from this user:', user);\n      user.getSession(function (err, session) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cleanUpError_7;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!err) return [3\n                /*break*/\n                , 5];\n                logger.debug('Failed to get the session from user', user);\n                if (!this.isSessionInvalid(err)) return [3\n                /*break*/\n                , 4];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.cleanUpInvalidSession(user)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                cleanUpError_7 = _a.sent();\n                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_7.message));\n                return [2\n                /*return*/\n                ];\n\n              case 4:\n                rej(err);\n                return [2\n                /*return*/\n                ];\n\n              case 5:\n                logger.debug('Succeed to get the user session', session);\n                res(session);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, {\n        clientMetadata: clientMetadata\n      });\n    });\n  };\n  /**\n   * Get authenticated credentials of current user.\n   * @return - A promise resolves to be current user's credentials\n   */\n\n\n  AuthClass.prototype.currentUserCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_9, federatedInfo;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('Getting current user credentials');\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_9 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_9);\n            throw e_9;\n\n          case 4:\n            federatedInfo = null;\n\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n            } catch (e) {\n              logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n            }\n\n            if (federatedInfo) {\n              // refresh the jwt token here if necessary\n              return [2\n              /*return*/\n              , this.Credentials.refreshFederatedToken(federatedInfo)];\n            } else {\n              return [2\n              /*return*/\n              , this.currentSession().then(function (session) {\n                logger.debug('getting session success', session);\n                return _this.Credentials.set(session, 'session');\n              }).catch(function () {\n                logger.debug('getting guest credentials');\n                return _this.Credentials.set(null, 'guest');\n              })];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.currentCredentials = function () {\n    logger.debug('getting current credentials');\n    return this.Credentials.get();\n  };\n  /**\n   * Initiate an attribute confirmation request\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attributes to be verified\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.getAttributeVerificationCode(attr, {\n        onSuccess: function (success) {\n          return resolve(success);\n        },\n        onFailure: function (err) {\n          return reject(err);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm an attribute using a confirmation code\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.verifyAttribute(attr, code, {\n        onSuccess: function (data) {\n          resolve(data);\n          return;\n        },\n        onFailure: function (err) {\n          reject(err);\n          return;\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttribute(user, attr);\n    });\n  };\n  /**\n   * Confirm current user's attribute using a confirmation code\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttributeSubmit(user, attr, code);\n    });\n  };\n\n  AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_10, isSignedInHostedUI;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_10 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_10);\n            throw e_10;\n\n          case 3:\n            isSignedInHostedUI = this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              if (opts && opts.global) {\n                logger.debug('user global sign out', user); // in order to use global signout\n                // we must validate the user as an authenticated user by using getSession\n\n                var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n                user.getSession(function (err, result) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var cleanUpError_8;\n\n                    var _this = this;\n\n                    return __generator(this, function (_a) {\n                      switch (_a.label) {\n                        case 0:\n                          if (!err) return [3\n                          /*break*/\n                          , 5];\n                          logger.debug('failed to get the user session', err);\n                          if (!this.isSessionInvalid(err)) return [3\n                          /*break*/\n                          , 4];\n                          _a.label = 1;\n\n                        case 1:\n                          _a.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.cleanUpInvalidSession(user)];\n\n                        case 2:\n                          _a.sent();\n\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          cleanUpError_8 = _a.sent();\n                          rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_8.message));\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 4:\n                          return [2\n                          /*return*/\n                          , rej(err)];\n\n                        case 5:\n                          user.globalSignOut({\n                            onSuccess: function (data) {\n                              logger.debug('global sign out success');\n\n                              if (isSignedInHostedUI) {\n                                _this.oAuthSignOutRedirect(res, rej);\n                              } else {\n                                return res();\n                              }\n                            },\n                            onFailure: function (err) {\n                              logger.debug('global sign out failed', err);\n                              return rej(err);\n                            }\n                          });\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                }, {\n                  clientMetadata: clientMetadata\n                });\n              } else {\n                logger.debug('user sign out', user);\n                user.signOut(function () {\n                  if (isSignedInHostedUI) {\n                    _this.oAuthSignOutRedirect(res, rej);\n                  } else {\n                    return res();\n                  }\n                });\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.oAuthSignOutRedirect = function (resolve, reject) {\n    var isBrowser = browserOrNode().isBrowser;\n\n    if (isBrowser) {\n      this.oAuthSignOutRedirectOrReject(reject);\n    } else {\n      this.oAuthSignOutAndResolve(resolve);\n    }\n  };\n\n  AuthClass.prototype.oAuthSignOutAndResolve = function (resolve) {\n    this._oAuthHandler.signOut();\n\n    resolve();\n  };\n\n  AuthClass.prototype.oAuthSignOutRedirectOrReject = function (reject) {\n    this._oAuthHandler.signOut(); // this method redirects url\n    // App should be redirected to another url otherwise it will reject\n\n\n    setTimeout(function () {\n      return reject(Error('Signout timeout fail'));\n    }, 3000);\n  };\n  /**\n   * Sign out method\n   * @\n   * @return - A promise resolved if success\n   */\n\n\n  AuthClass.prototype.signOut = function (opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_11, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.cleanCachedItems()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_11 = _a.sent();\n            logger.debug('failed to clear cached items');\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            if (!this.userPool) return [3\n            /*break*/\n            , 7];\n            user = this.userPool.getCurrentUser();\n            if (!user) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.cognitoIdentitySignOut(opts, user)];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            logger.debug('no current Cognito user');\n            _a.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            logger.debug('no Cognito User pool');\n            _a.label = 8;\n\n          case 8:\n            /**\n             * Note for future refactor - no reliable way to get username with\n             * Cognito User Pools vs Identity when federating with Social Providers\n             * This is why we need a well structured session object that can be inspected\n             * and information passed back in the message below for Hub dispatch\n             */\n            dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n            this.user = null;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.cleanCachedItems = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // clear cognito cached item\n            return [4\n            /*yield*/\n            , this.Credentials.clear()];\n\n          case 1:\n            // clear cognito cached item\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Change a password for an authenticated user\n   * @param {Object} user - The CognitoUser object\n   * @param {String} oldPassword - the current password\n   * @param {String} newPassword - the requested new password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.changePassword(oldPassword, newPassword, function (err, data) {\n          if (err) {\n            logger.debug('change password failure', err);\n            return reject(err);\n          } else {\n            return resolve(data);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Initiate a forgot password request\n   * @param {String} username - the username to change password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.forgotPassword({\n        onSuccess: function () {\n          resolve();\n          return;\n        },\n        onFailure: function (err) {\n          logger.debug('forgot password failure', err);\n          dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n          reject(err);\n          return;\n        },\n        inputVerificationCode: function (data) {\n          dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n          resolve(data);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm a new password using a confirmation Code\n   * @param {String} username - The username\n   * @param {String} code - The confirmation code\n   * @param {String} password - The new password\n   * @return - A promise that resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.confirmPassword(code, password, {\n        onSuccess: function (success) {\n          dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n          resolve(success);\n          return;\n        },\n        onFailure: function (err) {\n          dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n          reject(err);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Get user information\n   * @async\n   * @return {Object }- current User's information\n   */\n\n\n  AuthClass.prototype.currentUserInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var source, user, attributes, userAttrs, credentials, e_12, info, err_1, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            source = this.Credentials.getCredSource();\n            if (!(!source || source === 'aws' || source === 'userPool')) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser().catch(function (err) {\n              return logger.error(err);\n            })];\n\n          case 1:\n            user = _a.sent();\n\n            if (!user) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.userAttributes(user)];\n\n          case 3:\n            attributes = _a.sent();\n            userAttrs = this.attributesToObject(attributes);\n            credentials = null;\n            _a.label = 4;\n\n          case 4:\n            _a.trys.push([4, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this.currentCredentials()];\n\n          case 5:\n            credentials = _a.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_12 = _a.sent();\n            logger.debug('Failed to retrieve credentials while getting current user info', e_12);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            info = {\n              id: credentials ? credentials.identityId : undefined,\n              username: user.getUsername(),\n              attributes: userAttrs\n            };\n            return [2\n            /*return*/\n            , info];\n\n          case 8:\n            err_1 = _a.sent();\n            logger.error('currentUserInfo error', err_1);\n            return [2\n            /*return*/\n            , {}];\n\n          case 9:\n            if (source === 'federated') {\n              user = this.user;\n              return [2\n              /*return*/\n              , user ? user : {}];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._config.identityPoolId && !this._config.userPoolId) {\n              throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n            } // Ensure backwards compatability\n\n\n            if (typeof providerOrOptions === 'undefined') {\n              if (this._config.identityPoolId && !this._config.userPoolId) {\n                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n              }\n            }\n\n            if (!(isFederatedSignInOptions(providerOrOptions) || isFederatedSignInOptionsCustom(providerOrOptions) || hasCustomState(providerOrOptions) || typeof providerOrOptions === 'undefined')) return [3\n            /*break*/\n            , 1];\n            options = providerOrOptions || {\n              provider: CognitoHostedUIIdentityProvider.Cognito\n            };\n            provider = isFederatedSignInOptions(options) ? options.provider : options.customProvider;\n            customState = isFederatedSignInOptions(options) ? options.customState : options.customState;\n\n            if (this._config.userPoolId) {\n              client_id = isCognitoHostedOpts(this._config.oauth) ? this._config.userPoolWebClientId : this._config.oauth.clientID;\n              redirect_uri = isCognitoHostedOpts(this._config.oauth) ? this._config.oauth.redirectSignIn : this._config.oauth.redirectUri;\n\n              this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            provider = providerOrOptions; // To check if the user is already logged in\n\n            try {\n              loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n\n              if (loggedInUser) {\n                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n              }\n            } catch (e) {}\n\n            token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n            return [4\n            /*yield*/\n            , this.Credentials.set({\n              provider: provider,\n              token: token,\n              identity_id: identity_id,\n              user: user,\n              expires_at: expires_at\n            }, 'federation')];\n\n          case 2:\n            credentials = _a.sent();\n            return [4\n            /*yield*/\n            , this.currentAuthenticatedUser()];\n\n          case 3:\n            currentUser = _a.sent();\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n            logger.debug('federated sign in credentials', credentials);\n            return [2\n            /*return*/\n            , credentials];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Used to complete the OAuth flow with or without the Cognito Hosted UI\n   * @param {String} URL - optional parameter for customers to pass in the response URL\n   */\n\n\n  AuthClass.prototype._handleAuthResponse = function (URL) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, customState, err_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this.oAuthFlowInProgress) {\n              logger.debug(\"Skipping URL \" + URL + \" current flow in progress\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1,, 8, 9]);\n\n            this.oAuthFlowInProgress = true;\n\n            if (!this._config.userPoolId) {\n              throw new Error(\"OAuth responses require a User Pool defined in config\");\n            }\n\n            dispatchAuthEvent('parsingCallbackUrl', {\n              url: URL\n            }, \"The callback url is being parsed\");\n            currentUrl = URL || (browserOrNode().isBrowser ? window.location.href : '');\n            hasCodeOrError = !!(parse(currentUrl).query || '').split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return k === 'code' || k === 'error';\n            });\n            hasTokenOrError = !!(parse(currentUrl).hash || '#').substr(1).split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return k === 'access_token' || k === 'error';\n            });\n            if (!(hasCodeOrError || hasTokenOrError)) return [3\n            /*break*/\n            , 7];\n\n            this._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this._oAuthHandler.handleAuthResponse(currentUrl)];\n\n          case 3:\n            _a = _b.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n            session = new CognitoUserSession({\n              IdToken: new CognitoIdToken({\n                IdToken: idToken\n              }),\n              RefreshToken: new CognitoRefreshToken({\n                RefreshToken: refreshToken\n              }),\n              AccessToken: new CognitoAccessToken({\n                AccessToken: accessToken\n              })\n            });\n            credentials = void 0;\n            if (!this._config.identityPoolId) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.Credentials.set(session, 'session')];\n\n          case 4:\n            credentials = _b.sent();\n            logger.debug('AWS credentials', credentials);\n            _b.label = 5;\n\n          case 5:\n            isCustomStateIncluded = /-/.test(state);\n            currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']); // This calls cacheTokens() in Cognito SDK\n\n            currentUser.setSignInUserSession(session);\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n            }\n\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n            dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n\n            if (isCustomStateIncluded) {\n              customState = state.split('-').splice(1).join('-');\n              dispatchAuthEvent('customOAuthState', urlSafeDecode(customState), \"State for user \" + currentUser.getUsername());\n            } //#endregion\n\n\n            return [2\n            /*return*/\n            , credentials];\n\n          case 6:\n            err_2 = _b.sent();\n            logger.debug('Error in cognito hosted auth response', err_2); // Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n            // Otherwise, reloading the page will throw errors as the `code` has already been spent.\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n            }\n\n            dispatchAuthEvent('signIn_failure', err_2, \"The OAuth response flow failed\");\n            dispatchAuthEvent('cognitoHostedUI_failure', err_2, \"A failure occurred when returning to the Cognito Hosted UI\");\n            dispatchAuthEvent('customState_failure', err_2, \"A failure occurred when returning state\");\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            this.oAuthFlowInProgress = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n\n\n  AuthClass.prototype.essentialCredentials = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n\n  AuthClass.prototype.attributesToObject = function (attributes) {\n    var _this = this;\n\n    var obj = {};\n\n    if (attributes) {\n      attributes.map(function (attribute) {\n        if (attribute.Name === 'email_verified' || attribute.Name === 'phone_number_verified') {\n          obj[attribute.Name] = _this.isTruthyString(attribute.Value) || attribute.Value === true;\n        } else {\n          obj[attribute.Name] = attribute.Value;\n        }\n      });\n    }\n\n    return obj;\n  };\n\n  AuthClass.prototype.isTruthyString = function (value) {\n    return typeof value.toLowerCase === 'function' && value.toLowerCase() === 'true';\n  };\n\n  AuthClass.prototype.createCognitoUser = function (username) {\n    var userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    userData.Storage = this._storage;\n    var authenticationFlowType = this._config.authenticationFlowType;\n    var user = new CognitoUser(userData);\n\n    if (authenticationFlowType) {\n      user.setAuthenticationFlowType(authenticationFlowType);\n    }\n\n    return user;\n  };\n\n  AuthClass.prototype._isValidAuthStorage = function (obj) {\n    // We need to check if the obj has the functions of Storage\n    return !!obj && typeof obj.getItem === 'function' && typeof obj.setItem === 'function' && typeof obj.removeItem === 'function' && typeof obj.clear === 'function';\n  };\n\n  AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n    if (config) {\n      if (!config.userPoolId || !config.identityPoolId) {\n        return AuthErrorTypes.MissingAuthConfig;\n      }\n    }\n\n    return AuthErrorTypes.NoConfig;\n  };\n\n  AuthClass.prototype.rejectAuthError = function (type) {\n    return Promise.reject(new AuthError(type));\n  };\n\n  AuthClass.prototype.rejectNoUserPool = function () {\n    var type = this.noUserPoolErrorHandler(this._config);\n    return Promise.reject(new NoUserPoolError(type));\n  };\n\n  AuthClass.prototype.rememberDevice = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_2 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_2);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              currUser.setDeviceStatusRemembered({\n                onSuccess: function (data) {\n                  res(data);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.forgetDevice = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_3 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_3);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              currUser.forgetDevice({\n                onSuccess: function (data) {\n                  res(data);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.fetchDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_4 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_4);\n            throw new Error('The user is not authenticated');\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              var cb = {\n                onSuccess: function (data) {\n                  var deviceList = data.Devices.map(function (device) {\n                    var deviceName = device.DeviceAttributes.find(function (_a) {\n                      var Name = _a.Name;\n                      return Name === 'device_name';\n                    }) || {};\n                    var deviceInfo = {\n                      id: device.DeviceKey,\n                      name: deviceName.Value\n                    };\n                    return deviceInfo;\n                  });\n                  res(deviceList);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              };\n              currUser.listDevices(MAX_DEVICES, null, cb);\n            })];\n        }\n      });\n    });\n  };\n\n  return AuthClass;\n}();\n\nexport { AuthClass };\nexport var Auth = new AuthClass(null);\nAmplify.register(Auth);","map":{"version":3,"mappings":"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","names":["isUsernamePasswordOpts","isCognitoHostedOpts","isFederatedSignInOptions","isFederatedSignInOptionsCustom","hasCustomState","Amplify","ConsoleLogger","Logger","Credentials","Hub","StorageHelper","Parser","browserOrNode","UniversalStorage","urlSafeDecode","CookieStorage","CognitoUserPool","AuthenticationDetails","CognitoUser","CognitoUserSession","CognitoUserAttribute","CognitoIdToken","CognitoRefreshToken","CognitoAccessToken","parse","OAuth","default","urlListener","AuthError","NoUserPoolError","AuthErrorTypes","CognitoHostedUIIdentityProvider","logger","USER_ADMIN_SCOPE","OAUTH_FLOW_MS_TIMEOUT","AMPLIFY_SYMBOL","Symbol","for","dispatchAuthEvent","event","data","message","dispatch","MAX_DEVICES","MAX_AUTOSIGNIN_POLLING_MS","config","callback","wrapped","error","undefined","configure","currentCredentials","bind","currentUserCredentials","listen","_a","payload","_this","_storage","setItem","removeItem","AuthClass","_config","debug","conf","Object","assign","parseMobilehubConfig","Auth","userPoolId","userPoolWebClientId","cookieStorage","oauth","region","identityPoolId","mandatorySignIn","refreshHandlers","identityPoolRegion","clientMetadata","endpoint","storage","ssr","getStorage","_isValidAuthStorage","Error","_storageSync","Promise","resolve","userPoolData","UserPoolId","ClientId","Storage","userPool","wrapRefreshSessionCallback","cognitoHostedUIConfig","awsCognito","cognitoAuthParams","cognitoClientId","domain","scopes","redirectSignIn","redirectSignOut","responseType","urlOpener","_oAuthHandler","usedResponseUrls_1","url","_handleAuthResponse","autoSignInInitiated","pollingInitiated","isTrueStorageValue","AutoSignInError","params","restOfAttrs","rejectNoUserPool","username","password","attributes","validationData","autoSignIn","enabled","autoSignInValidationData","autoSignInClientMetaData","email","phone_number","push","Name","Value","attrs_1","keys","map","key","validationDataObject_1","_b","clientMetaData","_c","rejectAuthError","SignUpError","EmptyUsername","EmptyPassword","reject","signUp","err","handleAutoSignIn","authDetails","Username","Password","ValidationData","ClientMetadata","userConfirmed","signInAfterUserConfirmed","signUpVerificationMethod","handleLinkAutoSignIn","handleCodeAutoSignIn","listenEvent","start","Date","now","autoSignInPollingIntervalId","setInterval","clearInterval","user","createCognitoUser","getUsername","authenticateUser","authCallbacks","value","remove","error_1","code","options","EmptyCode","forceAliasCreation","confirmRegistration","item","getItem","resendConfirmationCode","usernameOrSignInOpts","pw","warn","InvalidUsername","signInWithPassword","signInWithoutPassword","that","onSuccess","session","clear","set","cred","e_1","currentUserPoolUser","currentUser","e_2","onFailure","customChallenge","challengeParam","mfaRequired","challengeName","mfaSetup","newPasswordRequired","userAttributes","requiredAttributes","totpRequired","selectMFAType","pendingSignIn","setAuthenticationFlowType","initiateAuth","res","rej","getMFAOptions","mfaOptions","bypassCache","getUserData","isSessionInvalid","cleanUpInvalidSession","cleanUpError_1","mfaType","_getMfaTypeFromUserData","ret","preferredMFA","PreferredMfaSetting","mfaList","UserMFASettingList","MFAOptions","length","cleanUpError_2","mfaMethod","_getUserData","userData","smsMfaSettings","totpMfaSettings","PreferredMfa","Enabled","currentMFAType","InvalidMFA","forEach","NoMFA","setUserMfaPreference","result","cleanUpError_3","disableMFA","enableMFA","associateSoftwareToken","associateSecretCode","secretCode","challengeAnswer","verifySoftwareToken","sendMFACode","e_3","completeNewPasswordChallenge","e_4","challengeResponses","EmptyChallengeResponse","sendCustomChallengeAnswer","attributeNames","userSession","then","deleteAttributes","e_5","isSignedInHostedUI","user_1","getCurrentUser","getSession","cleanUpError_4","deleteUser","signOut","cleanCachedItems","e","oAuthSignOutRedirect","attributeList","indexOf","attr","updateAttributes","getUserAttributes","attrs","attributesToObject","unverified","verified","prototype","hasOwnProperty","call","isErrorWithMessage","isUserDisabledError","isUserDoesNotExistError","isTokenRevokedError","isRefreshTokenRevokedError","isRefreshTokenExpiredError","isOAuthInProgress","timeoutId","setTimeout","hostedUISignCallback","clearTimeout","cleanUpError_5","getAccessToken","decodePayload","scope","split","includes","cleanUpError_6","i","UserAttributes","attribute","userAttribute","catch","oAuthFlowInProgress","federatedUser","e_7","federatedInfo","JSON","token","e_8","NoUserSession","cleanUpError_7","e_9","refreshFederatedToken","currentSession","get","getAttributeVerificationCode","success","verifyAttribute","verifyUserAttribute","verifyUserAttributeSubmit","opts","e_10","global","cleanUpError_8","globalSignOut","isBrowser","oAuthSignOutRedirectOrReject","oAuthSignOutAndResolve","cognitoIdentitySignOut","oldPassword","newPassword","changePassword","forgotPassword","inputVerificationCode","confirmPassword","source","getCredSource","userAttrs","credentials","e_12","info","id","identityId","err_1","providerOrOptions","response","provider","Cognito","customProvider","customState","client_id","clientID","redirect_uri","redirectUri","oauthSignIn","loggedInUser","stringify","identity_id","expires_at","currentAuthenticatedUser","URL","currentUrl","window","location","href","hasCodeOrError","query","find","k","hasTokenOrError","hash","substr","handleAuthResponse","accessToken","idToken","refreshToken","state","IdToken","RefreshToken","AccessToken","isCustomStateIncluded","test","getIdToken","setSignInUserSession","history","replaceState","splice","join","err_2","accessKeyId","sessionToken","secretAccessKey","authenticated","obj","isTruthyString","toLowerCase","Pool","authenticationFlowType","MissingAuthConfig","NoConfig","type","noUserPoolErrorHandler","currUser","error_2","getCachedDeviceKeyAndPassword","setDeviceStatusRemembered","DeviceConfig","NetworkError","error_3","forgetDevice","error_4","cb","deviceList","Devices","deviceName","device","DeviceAttributes","deviceInfo","DeviceKey","name","listDevices","register"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/auth/src/Auth.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *\t http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tAuthOptions,\n\tFederatedResponse,\n\tSignUpParams,\n\tFederatedUser,\n\tConfirmSignUpOptions,\n\tSignOutOpts,\n\tCurrentUserOpts,\n\tGetPreferredMFAOpts,\n\tSignInOpts,\n\tisUsernamePasswordOpts,\n\tisCognitoHostedOpts,\n\tisFederatedSignInOptions,\n\tisFederatedSignInOptionsCustom,\n\thasCustomState,\n\tFederatedSignInOptionsCustom,\n\tLegacyProvider,\n\tFederatedSignInOptions,\n\tAwsCognitoOAuthOpts,\n\tClientMetaData,\n} from './types';\n\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n\tHub,\n\tStorageHelper,\n\tICredentials,\n\tParser,\n\tbrowserOrNode,\n\tUniversalStorage,\n\turlSafeDecode,\n\tHubCallback,\n} from '@aws-amplify/core';\nimport {\n\tCookieStorage,\n\tCognitoUserPool,\n\tAuthenticationDetails,\n\tICognitoUserPoolData,\n\tICognitoUserData,\n\tISignUpResult,\n\tCognitoUser,\n\tMFAOption,\n\tCognitoUserSession,\n\tIAuthenticationCallback,\n\tICognitoUserAttributeData,\n\tCognitoUserAttribute,\n\tCognitoIdToken,\n\tCognitoRefreshToken,\n\tCognitoAccessToken,\n\tNodeCallback,\n} from 'amazon-cognito-identity-js';\n\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport {\n\tAuthErrorTypes,\n\tAutoSignInOptions,\n\tCognitoHostedUIIdentityProvider,\n\tIAuthDevice,\n} from './types/Auth';\n\nconst logger = new Logger('AuthClass');\nconst USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin';\n\n// 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\nconst OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\n\nconst AMPLIFY_SYMBOL = (\n\ttypeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n\t\t? Symbol.for('amplify_default')\n\t\t: '@@amplify_default'\n) as Symbol;\n\nconst dispatchAuthEvent = (event: string, data: any, message: string) => {\n\tHub.dispatch('auth', { event, data, message }, 'Auth', AMPLIFY_SYMBOL);\n};\n\n// Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nconst MAX_DEVICES = 60;\n\nconst MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\n\n/**\n * Provide authentication steps\n */\nexport class AuthClass {\n\tprivate _config: AuthOptions;\n\tprivate userPool: CognitoUserPool = null;\n\tprivate user: any = null;\n\tprivate _oAuthHandler: OAuth;\n\tprivate _storage;\n\tprivate _storageSync;\n\tprivate oAuthFlowInProgress: boolean = false;\n\tprivate pendingSignIn: ReturnType<AuthClass['signInWithPassword']> | null;\n\tprivate autoSignInInitiated: boolean = false;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize Auth with AWS configurations\n\t * @param {Object} config - Configuration of the Auth\n\t */\n\tconstructor(config: AuthOptions) {\n\t\tthis.configure(config);\n\t\tthis.currentCredentials = this.currentCredentials.bind(this);\n\t\tthis.currentUserCredentials = this.currentUserCredentials.bind(this);\n\n\t\tHub.listen('auth', ({ payload }) => {\n\t\t\tconst { event } = payload;\n\t\t\tswitch (event) {\n\t\t\t\tcase 'signIn':\n\t\t\t\t\tthis._storage.setItem('amplify-signin-with-hostedUI', 'false');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'signOut':\n\t\t\t\t\tthis._storage.removeItem('amplify-signin-with-hostedUI');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'cognitoHostedUI':\n\t\t\t\t\tthis._storage.setItem('amplify-signin-with-hostedUI', 'true');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'Auth';\n\t}\n\n\tconfigure(config?) {\n\t\tif (!config) return this._config || {};\n\t\tlogger.debug('configure Auth');\n\t\tconst conf = Object.assign(\n\t\t\t{},\n\t\t\tthis._config,\n\t\t\tParser.parseMobilehubConfig(config).Auth,\n\t\t\tconfig\n\t\t);\n\t\tthis._config = conf;\n\t\tconst {\n\t\t\tuserPoolId,\n\t\t\tuserPoolWebClientId,\n\t\t\tcookieStorage,\n\t\t\toauth,\n\t\t\tregion,\n\t\t\tidentityPoolId,\n\t\t\tmandatorySignIn,\n\t\t\trefreshHandlers,\n\t\t\tidentityPoolRegion,\n\t\t\tclientMetadata,\n\t\t\tendpoint,\n\t\t} = this._config;\n\n\t\tif (!this._config.storage) {\n\t\t\t// backward compatability\n\t\t\tif (cookieStorage) this._storage = new CookieStorage(cookieStorage);\n\t\t\telse {\n\t\t\t\tthis._storage = config.ssr\n\t\t\t\t\t? new UniversalStorage()\n\t\t\t\t\t: new StorageHelper().getStorage();\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._isValidAuthStorage(this._config.storage)) {\n\t\t\t\tlogger.error('The storage in the Auth config is not valid!');\n\t\t\t\tthrow new Error('Empty storage object');\n\t\t\t}\n\t\t\tthis._storage = this._config.storage;\n\t\t}\n\n\t\tthis._storageSync = Promise.resolve();\n\t\tif (typeof this._storage['sync'] === 'function') {\n\t\t\tthis._storageSync = this._storage['sync']();\n\t\t}\n\n\t\tif (userPoolId) {\n\t\t\tconst userPoolData: ICognitoUserPoolData = {\n\t\t\t\tUserPoolId: userPoolId,\n\t\t\t\tClientId: userPoolWebClientId,\n\t\t\t\tendpoint,\n\t\t\t};\n\t\t\tuserPoolData.Storage = this._storage;\n\n\t\t\tthis.userPool = new CognitoUserPool(\n\t\t\t\tuserPoolData,\n\t\t\t\tthis.wrapRefreshSessionCallback\n\t\t\t);\n\t\t}\n\n\t\tthis.Credentials.configure({\n\t\t\tmandatorySignIn,\n\t\t\tregion: identityPoolRegion || region,\n\t\t\tuserPoolId,\n\t\t\tidentityPoolId,\n\t\t\trefreshHandlers,\n\t\t\tstorage: this._storage,\n\t\t});\n\n\t\t// initialize cognitoauth client if hosted ui options provided\n\t\t// to keep backward compatibility:\n\t\tconst cognitoHostedUIConfig = oauth\n\t\t\t? isCognitoHostedOpts(this._config.oauth)\n\t\t\t\t? oauth\n\t\t\t\t: (<any>oauth).awsCognito\n\t\t\t: undefined;\n\n\t\tif (cognitoHostedUIConfig) {\n\t\t\tconst cognitoAuthParams = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tcognitoClientId: userPoolWebClientId,\n\t\t\t\t\tUserPoolId: userPoolId,\n\t\t\t\t\tdomain: cognitoHostedUIConfig['domain'],\n\t\t\t\t\tscopes: cognitoHostedUIConfig['scope'],\n\t\t\t\t\tredirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n\t\t\t\t\tredirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n\t\t\t\t\tresponseType: cognitoHostedUIConfig['responseType'],\n\t\t\t\t\tStorage: this._storage,\n\t\t\t\t\turlOpener: cognitoHostedUIConfig['urlOpener'],\n\t\t\t\t\tclientMetadata,\n\t\t\t\t},\n\t\t\t\tcognitoHostedUIConfig['options']\n\t\t\t);\n\n\t\t\tthis._oAuthHandler = new OAuth({\n\t\t\t\tscopes: cognitoAuthParams.scopes,\n\t\t\t\tconfig: cognitoAuthParams,\n\t\t\t\tcognitoClientId: cognitoAuthParams.cognitoClientId,\n\t\t\t});\n\n\t\t\t// **NOTE** - Remove this in a future major release as it is a breaking change\n\t\t\t// Prevents _handleAuthResponse from being called multiple times in Expo\n\t\t\t// See https://github.com/aws-amplify/amplify-js/issues/4388\n\t\t\tconst usedResponseUrls = {};\n\t\t\turlListener(({ url }) => {\n\t\t\t\tif (usedResponseUrls[url]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tusedResponseUrls[url] = true;\n\t\t\t\tthis._handleAuthResponse(url);\n\t\t\t});\n\t\t}\n\n\t\tdispatchAuthEvent(\n\t\t\t'configured',\n\t\t\tnull,\n\t\t\t`The Auth category has been configured successfully`\n\t\t);\n\n\t\tif (\n\t\t\t!this.autoSignInInitiated &&\n\t\t\ttypeof this._storage['getItem'] === 'function'\n\t\t) {\n\t\t\tconst pollingInitiated = this.isTrueStorageValue(\n\t\t\t\t'amplify-polling-started'\n\t\t\t);\n\t\t\tif (pollingInitiated) {\n\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t'autoSignIn_failure',\n\t\t\t\t\tnull,\n\t\t\t\t\tAuthErrorTypes.AutoSignInError\n\t\t\t\t);\n\t\t\t\tthis._storage.removeItem('amplify-auto-sign-in');\n\t\t\t}\n\t\t\tthis._storage.removeItem('amplify-polling-started');\n\t\t}\n\t\treturn this._config;\n\t}\n\n\twrapRefreshSessionCallback = (callback: NodeCallback.Any) => {\n\t\tconst wrapped: NodeCallback.Any = (error, data) => {\n\t\t\tif (data) {\n\t\t\t\tdispatchAuthEvent('tokenRefresh', undefined, `New token retrieved`);\n\t\t\t} else {\n\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t'tokenRefresh_failure',\n\t\t\t\t\terror,\n\t\t\t\t\t`Failed to retrieve new token`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn callback(error, data);\n\t\t};\n\t\treturn wrapped;\n\t} // prettier-ignore\n\n\t/**\n\t * Sign up with username, password and other attributes like phone, email\n\t * @param {String | object} params - The user attributes used for signin\n\t * @param {String[]} restOfAttrs - for the backward compatability\n\t * @return - A promise resolves callback data if success\n\t */\n\tpublic signUp(\n\t\tparams: string | SignUpParams,\n\t\t...restOfAttrs: string[]\n\t): Promise<ISignUpResult> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\n\t\tlet username: string = null;\n\t\tlet password: string = null;\n\t\tconst attributes: CognitoUserAttribute[] = [];\n\t\tlet validationData: CognitoUserAttribute[] = null;\n\t\tlet clientMetadata;\n\t\tlet autoSignIn: AutoSignInOptions = { enabled: false };\n\t\tlet autoSignInValidationData = {};\n\t\tlet autoSignInClientMetaData: ClientMetaData = {};\n\n\t\tif (params && typeof params === 'string') {\n\t\t\tusername = params;\n\t\t\tpassword = restOfAttrs ? restOfAttrs[0] : null;\n\t\t\tconst email: string = restOfAttrs ? restOfAttrs[1] : null;\n\t\t\tconst phone_number: string = restOfAttrs ? restOfAttrs[2] : null;\n\n\t\t\tif (email)\n\t\t\t\tattributes.push(\n\t\t\t\t\tnew CognitoUserAttribute({ Name: 'email', Value: email })\n\t\t\t\t);\n\n\t\t\tif (phone_number)\n\t\t\t\tattributes.push(\n\t\t\t\t\tnew CognitoUserAttribute({\n\t\t\t\t\t\tName: 'phone_number',\n\t\t\t\t\t\tValue: phone_number,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t} else if (params && typeof params === 'object') {\n\t\t\tusername = params['username'];\n\t\t\tpassword = params['password'];\n\n\t\t\tif (params && params.clientMetadata) {\n\t\t\t\tclientMetadata = params.clientMetadata;\n\t\t\t} else if (this._config.clientMetadata) {\n\t\t\t\tclientMetadata = this._config.clientMetadata;\n\t\t\t}\n\n\t\t\tconst attrs = params['attributes'];\n\t\t\tif (attrs) {\n\t\t\t\tObject.keys(attrs).map(key => {\n\t\t\t\t\tattributes.push(\n\t\t\t\t\t\tnew CognitoUserAttribute({ Name: key, Value: attrs[key] })\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst validationDataObject = params['validationData'];\n\t\t\tif (validationDataObject) {\n\t\t\t\tvalidationData = [];\n\t\t\t\tObject.keys(validationDataObject).map(key => {\n\t\t\t\t\tvalidationData.push(\n\t\t\t\t\t\tnew CognitoUserAttribute({\n\t\t\t\t\t\t\tName: key,\n\t\t\t\t\t\t\tValue: validationDataObject[key],\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tautoSignIn = params.autoSignIn ?? { enabled: false };\n\t\t\tif (autoSignIn.enabled) {\n\t\t\t\tthis._storage.setItem('amplify-auto-sign-in', 'true');\n\t\t\t\tautoSignInValidationData = autoSignIn.validationData ?? {};\n\t\t\t\tautoSignInClientMetaData = autoSignIn.clientMetaData ?? {};\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.SignUpError);\n\t\t}\n\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tif (!password) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n\t\t}\n\n\t\tlogger.debug('signUp attrs:', attributes);\n\t\tlogger.debug('signUp validation data:', validationData);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.userPool.signUp(\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tattributes,\n\t\t\t\tvalidationData,\n\t\t\t\t(err, data) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'signUp_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${username} failed to signup`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'signUp',\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t`${username} has signed up successfully`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (autoSignIn.enabled) {\n\t\t\t\t\t\t\tthis.handleAutoSignIn(\n\t\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tautoSignInValidationData,\n\t\t\t\t\t\t\t\tautoSignInClientMetaData,\n\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate handleAutoSignIn(\n\t\tusername: string,\n\t\tpassword: string,\n\t\tvalidationData: {},\n\t\tclientMetadata: any,\n\t\tdata: any\n\t) {\n\t\tthis.autoSignInInitiated = true;\n\t\tconst authDetails = new AuthenticationDetails({\n\t\t\tUsername: username,\n\t\t\tPassword: password,\n\t\t\tValidationData: validationData,\n\t\t\tClientMetadata: clientMetadata,\n\t\t});\n\t\tif (data.userConfirmed) {\n\t\t\tthis.signInAfterUserConfirmed(authDetails);\n\t\t} else if (this._config.signUpVerificationMethod === 'link') {\n\t\t\tthis.handleLinkAutoSignIn(authDetails);\n\t\t} else {\n\t\t\tthis.handleCodeAutoSignIn(authDetails);\n\t\t}\n\t}\n\n\tprivate handleCodeAutoSignIn(authDetails: AuthenticationDetails) {\n\t\tconst listenEvent = ({ payload }) => {\n\t\t\tif (payload.event === 'confirmSignUp') {\n\t\t\t\tthis.signInAfterUserConfirmed(authDetails, listenEvent);\n\t\t\t}\n\t\t};\n\t\tHub.listen('auth', listenEvent);\n\t}\n\n\tprivate handleLinkAutoSignIn(authDetails: AuthenticationDetails) {\n\t\tthis._storage.setItem('amplify-polling-started', 'true');\n\t\tconst start = Date.now();\n\t\tconst autoSignInPollingIntervalId = setInterval(() => {\n\t\t\tif (Date.now() - start > MAX_AUTOSIGNIN_POLLING_MS) {\n\t\t\t\tclearInterval(autoSignInPollingIntervalId);\n\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t'autoSignIn_failure',\n\t\t\t\t\tnull,\n\t\t\t\t\t'Please confirm your account and use your credentials to sign in.'\n\t\t\t\t);\n\t\t\t\tthis._storage.removeItem('amplify-auto-sign-in');\n\t\t\t} else {\n\t\t\t\tthis.signInAfterUserConfirmed(\n\t\t\t\t\tauthDetails,\n\t\t\t\t\tnull,\n\t\t\t\t\tautoSignInPollingIntervalId\n\t\t\t\t);\n\t\t\t}\n\t\t}, 5000);\n\t}\n\n\tprivate async signInAfterUserConfirmed(\n\t\tauthDetails: AuthenticationDetails,\n\t\tlistenEvent?: HubCallback,\n\t\tautoSignInPollingIntervalId?: ReturnType<typeof setInterval>\n\t) {\n\t\tconst user = this.createCognitoUser(authDetails.getUsername());\n\t\ttry {\n\t\t\tawait user.authenticateUser(\n\t\t\t\tauthDetails,\n\t\t\t\tthis.authCallbacks(\n\t\t\t\t\tuser,\n\t\t\t\t\tvalue => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'autoSignIn',\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t`${authDetails.getUsername()} has signed in successfully`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (listenEvent) {\n\t\t\t\t\t\t\tHub.remove('auth', listenEvent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (autoSignInPollingIntervalId) {\n\t\t\t\t\t\t\tclearInterval(autoSignInPollingIntervalId);\n\t\t\t\t\t\t\tthis._storage.removeItem('amplify-polling-started');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._storage.removeItem('amplify-auto-sign-in');\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tlogger.error(error);\n\t\t\t\t\t\tthis._storage.removeItem('amplify-auto-sign-in');\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tlogger.error(error);\n\t\t}\n\t}\n\n\t/**\n\t * Send the verification code to confirm sign up\n\t * @param {String} username - The username to be confirmed\n\t * @param {String} code - The verification code\n\t * @param {ConfirmSignUpOptions} options - other options for confirm signup\n\t * @return - A promise resolves callback data if success\n\t */\n\tpublic confirmSignUp(\n\t\tusername: string,\n\t\tcode: string,\n\t\toptions?: ConfirmSignUpOptions\n\t): Promise<any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\tconst forceAliasCreation =\n\t\t\toptions && typeof options.forceAliasCreation === 'boolean'\n\t\t\t\t? options.forceAliasCreation\n\t\t\t\t: true;\n\n\t\tlet clientMetadata;\n\t\tif (options && options.clientMetadata) {\n\t\t\tclientMetadata = options.clientMetadata;\n\t\t} else if (this._config.clientMetadata) {\n\t\t\tclientMetadata = this._config.clientMetadata;\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.confirmRegistration(\n\t\t\t\tcode,\n\t\t\t\tforceAliasCreation,\n\t\t\t\t(err, data) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'confirmSignUp',\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t`${username} has been confirmed successfully`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst autoSignIn = this.isTrueStorageValue('amplify-auto-sign-in');\n\t\t\t\t\t\tif (autoSignIn && !this.autoSignInInitiated) {\n\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t'autoSignIn_failure',\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tAuthErrorTypes.AutoSignInError\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._storage.removeItem('amplify-auto-sign-in');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate isTrueStorageValue(value: string) {\n\t\tconst item = this._storage.getItem(value);\n\t\treturn item ? item === 'true' : false;\n\t}\n\n\t/**\n\t * Resend the verification code\n\t * @param {String} username - The username to be confirmed\n\t * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n\t * @return - A promise resolves code delivery details if successful\n\t */\n\tpublic resendSignUp(\n\t\tusername: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.resendConfirmationCode((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t}, clientMetadata);\n\t\t});\n\t}\n\n\t/**\n\t * Sign in\n\t * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n\t * @param {String} password - The password of the username\n\t * @return - A promise resolves the CognitoUser\n\t */\n\tpublic signIn(\n\t\tusernameOrSignInOpts: string | SignInOpts,\n\t\tpw?: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\n\t\tlet username = null;\n\t\tlet password = null;\n\t\tlet validationData = {};\n\n\t\t// for backward compatibility\n\t\tif (typeof usernameOrSignInOpts === 'string') {\n\t\t\tusername = usernameOrSignInOpts;\n\t\t\tpassword = pw;\n\t\t} else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n\t\t\tif (typeof pw !== 'undefined') {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t'The password should be defined under the first parameter object!'\n\t\t\t\t);\n\t\t\t}\n\t\t\tusername = usernameOrSignInOpts.username;\n\t\t\tpassword = usernameOrSignInOpts.password;\n\t\t\tvalidationData = usernameOrSignInOpts.validationData;\n\t\t} else {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tconst authDetails = new AuthenticationDetails({\n\t\t\tUsername: username,\n\t\t\tPassword: password,\n\t\t\tValidationData: validationData,\n\t\t\tClientMetadata: clientMetadata,\n\t\t});\n\t\tif (password) {\n\t\t\treturn this.signInWithPassword(authDetails);\n\t\t} else {\n\t\t\treturn this.signInWithoutPassword(authDetails);\n\t\t}\n\t}\n\n\t/**\n\t * Return an object with the authentication callbacks\n\t * @param {CognitoUser} user - the cognito user object\n\t * @param {} resolve - function called when resolving the current step\n\t * @param {} reject - function called when rejecting the current step\n\t * @return - an object with the callback methods for user authentication\n\t */\n\tprivate authCallbacks(\n\t\tuser: CognitoUser,\n\t\tresolve: (value?: CognitoUser | any) => void,\n\t\treject: (value?: any) => void\n\t): IAuthenticationCallback {\n\t\tconst that = this;\n\t\treturn {\n\t\t\tonSuccess: async session => {\n\t\t\t\tlogger.debug(session);\n\t\t\t\tdelete user['challengeName'];\n\t\t\t\tdelete user['challengeParam'];\n\t\t\t\ttry {\n\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\tconst cred = await this.Credentials.set(session, 'session');\n\t\t\t\t\tlogger.debug('succeed to get cognito credentials', cred);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.debug('cannot get cognito credentials', e);\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// In order to get user attributes and MFA methods\n\t\t\t\t\t\t// We need to trigger currentUserPoolUser again\n\t\t\t\t\t\tconst currentUser = await this.currentUserPoolUser();\n\t\t\t\t\t\tthat.user = currentUser;\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(currentUser);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error('Failed to get the signed in user', e);\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonFailure: err => {\n\t\t\t\tlogger.debug('signIn failure', err);\n\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t'signIn_failure',\n\t\t\t\t\terr,\n\t\t\t\t\t`${user.getUsername()} failed to signin`\n\t\t\t\t);\n\t\t\t\treject(err);\n\t\t\t},\n\t\t\tcustomChallenge: challengeParam => {\n\t\t\t\tlogger.debug('signIn custom challenge answer required');\n\t\t\t\tuser['challengeName'] = 'CUSTOM_CHALLENGE';\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tmfaRequired: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn MFA required');\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tmfaSetup: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn mfa setup', challengeName);\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tnewPasswordRequired: (userAttributes, requiredAttributes) => {\n\t\t\t\tlogger.debug('signIn new password');\n\t\t\t\tuser['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n\t\t\t\tuser['challengeParam'] = {\n\t\t\t\t\tuserAttributes,\n\t\t\t\t\trequiredAttributes,\n\t\t\t\t};\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\ttotpRequired: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn totpRequired');\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tselectMFAType: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn selectMFAType', challengeName);\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Sign in with a password\n\t * @private\n\t * @param {AuthenticationDetails} authDetails - the user sign in data\n\t * @return - A promise resolves the CognitoUser object if success or mfa required\n\t */\n\tprivate signInWithPassword(\n\t\tauthDetails: AuthenticationDetails\n\t): Promise<CognitoUser | any> {\n\t\tif (this.pendingSignIn) {\n\t\t\tthrow new Error('Pending sign-in attempt already in progress');\n\t\t}\n\n\t\tconst user = this.createCognitoUser(authDetails.getUsername());\n\n\t\tthis.pendingSignIn = new Promise((resolve, reject) => {\n\t\t\tuser.authenticateUser(\n\t\t\t\tauthDetails,\n\t\t\t\tthis.authCallbacks(\n\t\t\t\t\tuser,\n\t\t\t\t\tvalue => {\n\t\t\t\t\t\tthis.pendingSignIn = null;\n\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tthis.pendingSignIn = null;\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\treturn this.pendingSignIn;\n\t}\n\n\t/**\n\t * Sign in without a password\n\t * @private\n\t * @param {AuthenticationDetails} authDetails - the user sign in data\n\t * @return - A promise resolves the CognitoUser object if success or mfa required\n\t */\n\tprivate signInWithoutPassword(\n\t\tauthDetails: AuthenticationDetails\n\t): Promise<CognitoUser | any> {\n\t\tconst user = this.createCognitoUser(authDetails.getUsername());\n\t\tuser.setAuthenticationFlowType('CUSTOM_AUTH');\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.initiateAuth(authDetails, this.authCallbacks(user, resolve, reject));\n\t\t});\n\t}\n\n\t/**\n\t * This was previously used by an authenticated user to get MFAOptions,\n\t * but no longer returns a meaningful response. Refer to the documentation for\n\t * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n\t * @deprecated\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves the current preferred mfa option if success\n\t */\n\tpublic getMFAOptions(user: CognitoUser | any): Promise<MFAOption[]> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.getMFAOptions((err, mfaOptions) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('get MFA Options failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.debug('get MFA options success', mfaOptions);\n\t\t\t\tres(mfaOptions);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * get preferred mfa method\n\t * @param {CognitoUser} user - the current cognito user\n\t * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n\t */\n\tpublic getPreferredMFA(\n\t\tuser: CognitoUser | any,\n\t\tparams?: GetPreferredMFAOpts\n\t): Promise<string> {\n\t\tconst that = this;\n\t\treturn new Promise((res, rej) => {\n\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\tconst bypassCache = params ? params.bypassCache : false;\n\t\t\tuser.getUserData(\n\t\t\t\tasync (err, data) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('getting preferred mfa failed', err);\n\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mfaType = that._getMfaTypeFromUserData(data);\n\t\t\t\t\tif (!mfaType) {\n\t\t\t\t\t\trej('invalid MFA Type');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(mfaType);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ bypassCache, clientMetadata }\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate _getMfaTypeFromUserData(data) {\n\t\tlet ret = null;\n\t\tconst preferredMFA = data.PreferredMfaSetting;\n\t\t// if the user has used Auth.setPreferredMFA() to setup the mfa type\n\t\t// then the \"PreferredMfaSetting\" would exist in the response\n\t\tif (preferredMFA) {\n\t\t\tret = preferredMFA;\n\t\t} else {\n\t\t\t// if mfaList exists but empty, then its noMFA\n\t\t\tconst mfaList = data.UserMFASettingList;\n\t\t\tif (!mfaList) {\n\t\t\t\t// if SMS was enabled by using Auth.enableSMS(),\n\t\t\t\t// the response would contain MFAOptions\n\t\t\t\t// as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n\t\t\t\t// if it does not exist, then it should be NOMFA\n\t\t\t\tconst MFAOptions = data.MFAOptions;\n\t\t\t\tif (MFAOptions) {\n\t\t\t\t\tret = 'SMS_MFA';\n\t\t\t\t} else {\n\t\t\t\t\tret = 'NOMFA';\n\t\t\t\t}\n\t\t\t} else if (mfaList.length === 0) {\n\t\t\t\tret = 'NOMFA';\n\t\t\t} else {\n\t\t\t\tlogger.debug('invalid case for getPreferredMFA', data);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate _getUserData(user, params) {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.getUserData(async (err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('getting user data failed', err);\n\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tres(data);\n\t\t\t\t}\n\t\t\t}, params);\n\t\t});\n\t}\n\n\t/**\n\t * set preferred MFA method\n\t * @param {CognitoUser} user - the current Cognito user\n\t * @param {string} mfaMethod - preferred mfa method\n\t * @return - A promise resolve if success\n\t */\n\tpublic async setPreferredMFA(\n\t\tuser: CognitoUser | any,\n\t\tmfaMethod: 'TOTP' | 'SMS' | 'NOMFA' | 'SMS_MFA' | 'SOFTWARE_TOKEN_MFA'\n\t): Promise<string> {\n\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\tconst userData = await this._getUserData(user, {\n\t\t\tbypassCache: true,\n\t\t\tclientMetadata,\n\t\t});\n\t\tlet smsMfaSettings = null;\n\t\tlet totpMfaSettings = null;\n\n\t\tswitch (mfaMethod) {\n\t\t\tcase 'TOTP':\n\t\t\tcase 'SOFTWARE_TOKEN_MFA':\n\t\t\t\ttotpMfaSettings = {\n\t\t\t\t\tPreferredMfa: true,\n\t\t\t\t\tEnabled: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'SMS':\n\t\t\tcase 'SMS_MFA':\n\t\t\t\tsmsMfaSettings = {\n\t\t\t\t\tPreferredMfa: true,\n\t\t\t\t\tEnabled: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'NOMFA':\n\t\t\t\tconst mfaList = userData['UserMFASettingList'];\n\t\t\t\tconst currentMFAType = await this._getMfaTypeFromUserData(userData);\n\t\t\t\tif (currentMFAType === 'NOMFA') {\n\t\t\t\t\treturn Promise.resolve('No change for mfa type');\n\t\t\t\t} else if (currentMFAType === 'SMS_MFA') {\n\t\t\t\t\tsmsMfaSettings = {\n\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t};\n\t\t\t\t} else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n\t\t\t\t\ttotpMfaSettings = {\n\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn this.rejectAuthError(AuthErrorTypes.InvalidMFA);\n\t\t\t\t}\n\t\t\t\t// if there is a UserMFASettingList in the response\n\t\t\t\t// we need to disable every mfa type in that list\n\t\t\t\tif (mfaList && mfaList.length !== 0) {\n\t\t\t\t\t// to disable SMS or TOTP if exists in that list\n\t\t\t\t\tmfaList.forEach(mfaType => {\n\t\t\t\t\t\tif (mfaType === 'SMS_MFA') {\n\t\t\t\t\t\t\tsmsMfaSettings = {\n\t\t\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n\t\t\t\t\t\t\ttotpMfaSettings = {\n\t\t\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.debug('no validmfa method provided');\n\t\t\t\treturn this.rejectAuthError(AuthErrorTypes.NoMFA);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise<string>((res, rej) => {\n\t\t\tuser.setUserMfaPreference(\n\t\t\t\tsmsMfaSettings,\n\t\t\t\ttotpMfaSettings,\n\t\t\t\t(err, result) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('Set user mfa preference error', err);\n\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.debug('Set user mfa success', result);\n\t\t\t\t\tlogger.debug('Caching the latest user data into local');\n\t\t\t\t\t// cache the latest result into user data\n\t\t\t\t\tuser.getUserData(\n\t\t\t\t\t\tasync (err, data) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tlogger.debug('getting user data failed', err);\n\t\t\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn res(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbypassCache: true,\n\t\t\t\t\t\t\tclientMetadata,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * disable SMS\n\t * @deprecated\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves is success\n\t */\n\tpublic disableSMS(user: CognitoUser): Promise<string> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.disableMFA((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('disable mfa failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.debug('disable mfa succeed', data);\n\t\t\t\tres(data);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * enable SMS\n\t * @deprecated\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves is success\n\t */\n\tpublic enableSMS(user: CognitoUser): Promise<string> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.enableMFA((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('enable mfa failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.debug('enable mfa succeed', data);\n\t\t\t\tres(data);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Setup TOTP\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves with the secret code if success\n\t */\n\tpublic setupTOTP(user: CognitoUser | any): Promise<string> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.associateSoftwareToken({\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tlogger.debug('associateSoftwareToken failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tassociateSecretCode: secretCode => {\n\t\t\t\t\tlogger.debug('associateSoftwareToken sucess', secretCode);\n\t\t\t\t\tres(secretCode);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * verify TOTP setup\n\t * @param {CognitoUser} user - the current user\n\t * @param {string} challengeAnswer - challenge answer\n\t * @return - A promise resolves is success\n\t */\n\tpublic verifyTotpToken(\n\t\tuser: CognitoUser | any,\n\t\tchallengeAnswer: string\n\t): Promise<CognitoUserSession> {\n\t\tlogger.debug('verification totp token', user, challengeAnswer);\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tlogger.debug('verifyTotpToken failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t);\n\t\t\t\t\tlogger.debug('verifyTotpToken success', data);\n\t\t\t\t\tres(data);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send MFA code to confirm sign in\n\t * @param {Object} user - The CognitoUser object\n\t * @param {String} code - The confirmation code\n\t */\n\tpublic confirmSignIn(\n\t\tuser: CognitoUser | any,\n\t\tcode: string,\n\t\tmfaType?: 'SMS_MFA' | 'SOFTWARE_TOKEN_MFA' | null,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.sendMFACode(\n\t\t\t\tcode,\n\t\t\t\t{\n\t\t\t\t\tonSuccess: async session => {\n\t\t\t\t\t\tlogger.debug(session);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\t\t\tconst cred = await this.Credentials.set(session, 'session');\n\t\t\t\t\t\t\tlogger.debug('succeed to get cognito credentials', cred);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('cannot get cognito credentials', e);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthat.user = user;\n\n\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tlogger.debug('confirm signIn failure', err);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmfaType,\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic completeNewPassword(\n\t\tuser: CognitoUser | any,\n\t\tpassword: string,\n\t\trequiredAttributes: any = {},\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!password) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.completeNewPasswordChallenge(\n\t\t\t\tpassword,\n\t\t\t\trequiredAttributes,\n\t\t\t\t{\n\t\t\t\t\tonSuccess: async session => {\n\t\t\t\t\t\tlogger.debug(session);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\t\t\tconst cred = await this.Credentials.set(session, 'session');\n\t\t\t\t\t\t\tlogger.debug('succeed to get cognito credentials', cred);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('cannot get cognito credentials', e);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthat.user = user;\n\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tlogger.debug('completeNewPassword failure', err);\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'completeNewPassword_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${this.user} failed to complete the new password flow`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t},\n\t\t\t\t\tmfaRequired: (challengeName, challengeParam) => {\n\t\t\t\t\t\tlogger.debug('signIn MFA required');\n\t\t\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t},\n\t\t\t\t\tmfaSetup: (challengeName, challengeParam) => {\n\t\t\t\t\t\tlogger.debug('signIn mfa setup', challengeName);\n\t\t\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t},\n\t\t\t\t\ttotpRequired: (challengeName, challengeParam) => {\n\t\t\t\t\t\tlogger.debug('signIn mfa setup', challengeName);\n\t\t\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Send the answer to a custom challenge\n\t * @param {CognitoUser} user - The CognitoUser object\n\t * @param {String} challengeResponses - The confirmation code\n\t */\n\tpublic sendCustomChallengeAnswer(\n\t\tuser: CognitoUser | any,\n\t\tchallengeResponses: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!challengeResponses) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.sendCustomChallengeAnswer(\n\t\t\t\tchallengeResponses,\n\t\t\t\tthis.authCallbacks(user, resolve, reject),\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Delete an authenticated users' attributes\n\t * @param {CognitoUser} - The currently logged in user object\n\t * @return {Promise}\n\t **/\n\tpublic deleteUserAttributes(\n\t\tuser: CognitoUser | any,\n\t\tattributeNames: string[]\n\t) {\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthat.userSession(user).then(session => {\n\t\t\t\tuser.deleteAttributes(attributeNames, (err, result) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn resolve(result);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Delete the current authenticated user\n\t * @return {Promise}\n\t **/\n\t// TODO: Check return type void\n\tpublic async deleteUser(): Promise<string | void> {\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow new Error(e);\n\t\t}\n\n\t\tconst isSignedInHostedUI =\n\t\t\tthis._oAuthHandler &&\n\t\t\tthis._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n\n\t\treturn new Promise(async (res, rej) => {\n\t\t\tif (this.userPool) {\n\t\t\t\tconst user = this.userPool.getCurrentUser();\n\n\t\t\t\tif (!user) {\n\t\t\t\t\tlogger.debug('Failed to get user from user pool');\n\t\t\t\t\treturn rej(new Error('No current user.'));\n\t\t\t\t} else {\n\t\t\t\t\tuser.getSession(async (err, session) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger.debug('Failed to get the user session', err);\n\t\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuser.deleteUser((err, result: string) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\trej(err);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t\t\t'userDeleted',\n\t\t\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t\t\t'The authenticated user has been deleted.'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tuser.signOut();\n\t\t\t\t\t\t\t\t\tthis.user = null;\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tthis.cleanCachedItems(); // clean aws credentials\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\t// TODO: change to rejects in refactor\n\t\t\t\t\t\t\t\t\t\tlogger.debug('failed to clear cached items');\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (isSignedInHostedUI) {\n\t\t\t\t\t\t\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t\t\t\t'signOut',\n\t\t\t\t\t\t\t\t\t\t\tthis.user,\n\t\t\t\t\t\t\t\t\t\t\t`A user has been signed out`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tres(result);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlogger.debug('no Congito User pool');\n\t\t\t\trej(new Error('Cognito User pool does not exist'));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Update an authenticated users' attributes\n\t * @param {CognitoUser} - The currently logged in user object\n\t * @return {Promise}\n\t **/\n\tpublic updateUserAttributes(\n\t\tuser: CognitoUser | any,\n\t\tattributes: object,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<string> {\n\t\tconst attributeList: ICognitoUserAttributeData[] = [];\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthat.userSession(user).then(session => {\n\t\t\t\tfor (const key in attributes) {\n\t\t\t\t\tif (key !== 'sub' && key.indexOf('_verified') < 0) {\n\t\t\t\t\t\tconst attr: ICognitoUserAttributeData = {\n\t\t\t\t\t\t\tName: key,\n\t\t\t\t\t\t\tValue: attributes[key],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tattributeList.push(attr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuser.updateAttributes(\n\t\t\t\t\tattributeList,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn resolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclientMetadata\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\t/**\n\t * Return user attributes\n\t * @param {Object} user - The CognitoUser object\n\t * @return - A promise resolves to user attributes if success\n\t */\n\tpublic userAttributes(\n\t\tuser: CognitoUser | any\n\t): Promise<CognitoUserAttribute[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.userSession(user).then(session => {\n\t\t\t\tuser.getUserAttributes((err, attributes) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(attributes);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic verifiedContact(user: CognitoUser | any) {\n\t\tconst that = this;\n\t\treturn this.userAttributes(user).then(attributes => {\n\t\t\tconst attrs = that.attributesToObject(attributes);\n\t\t\tconst unverified = {};\n\t\t\tconst verified = {};\n\t\t\tif (attrs['email']) {\n\t\t\t\tif (attrs['email_verified']) {\n\t\t\t\t\tverified['email'] = attrs['email'];\n\t\t\t\t} else {\n\t\t\t\t\tunverified['email'] = attrs['email'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (attrs['phone_number']) {\n\t\t\t\tif (attrs['phone_number_verified']) {\n\t\t\t\t\tverified['phone_number'] = attrs['phone_number'];\n\t\t\t\t} else {\n\t\t\t\t\tunverified['phone_number'] = attrs['phone_number'];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tverified,\n\t\t\t\tunverified,\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate isErrorWithMessage(err: any): err is { message: string } {\n\t\treturn (\n\t\t\ttypeof err === 'object' &&\n\t\t\tObject.prototype.hasOwnProperty.call(err, 'message')\n\t\t);\n\t}\n\n\t// Session revoked by another app\n\tprivate isTokenRevokedError(\n\t\terr: any\n\t): err is { message: 'Access Token has been revoked' } {\n\t\treturn (\n\t\t\tthis.isErrorWithMessage(err) &&\n\t\t\terr.message === 'Access Token has been revoked'\n\t\t);\n\t}\n\n\tprivate isRefreshTokenRevokedError(\n\t\terr: any\n\t): err is { message: 'Refresh Token has been revoked' } {\n\t\treturn (\n\t\t\tthis.isErrorWithMessage(err) &&\n\t\t\terr.message === 'Refresh Token has been revoked'\n\t\t);\n\t}\n\n\tprivate isUserDisabledError(\n\t\terr: any\n\t): err is { message: 'User is disabled.' } {\n\t\treturn this.isErrorWithMessage(err) && err.message === 'User is disabled.';\n\t}\n\n\tprivate isUserDoesNotExistError(\n\t\terr: any\n\t): err is { message: 'User does not exist.' } {\n\t\treturn (\n\t\t\tthis.isErrorWithMessage(err) && err.message === 'User does not exist.'\n\t\t);\n\t}\n\n\tprivate isRefreshTokenExpiredError(\n\t\terr: any\n\t): err is { message: 'Refresh Token has expired' } {\n\t\treturn (\n\t\t\tthis.isErrorWithMessage(err) &&\n\t\t\terr.message === 'Refresh Token has expired'\n\t\t);\n\t}\n\n\tprivate isSignedInHostedUI() {\n\t\treturn (\n\t\t\tthis._oAuthHandler &&\n\t\t\tthis._storage.getItem('amplify-signin-with-hostedUI') === 'true'\n\t\t);\n\t}\n\n\tprivate isSessionInvalid(err: any) {\n\t\treturn (\n\t\t\tthis.isUserDisabledError(err) ||\n\t\t\tthis.isUserDoesNotExistError(err) ||\n\t\t\tthis.isTokenRevokedError(err) ||\n\t\t\tthis.isRefreshTokenRevokedError(err) ||\n\t\t\tthis.isRefreshTokenExpiredError(err)\n\t\t);\n\t}\n\n\tprivate async cleanUpInvalidSession(user: CognitoUser) {\n\t\tuser.signOut();\n\t\tthis.user = null;\n\t\ttry {\n\t\t\tawait this.cleanCachedItems(); // clean aws credentials\n\t\t} catch (e) {\n\t\t\tlogger.debug('failed to clear cached items');\n\t\t}\n\t\tif (this.isSignedInHostedUI()) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t});\n\t\t} else {\n\t\t\tdispatchAuthEvent('signOut', this.user, `A user has been signed out`);\n\t\t}\n\t}\n\n\t/**\n\t * Get current authenticated user\n\t * @return - A promise resolves to current authenticated CognitoUser if success\n\t */\n\tpublic currentUserPoolUser(\n\t\tparams?: CurrentUserOpts\n\t): Promise<CognitoUser | any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tthis._storageSync\n\t\t\t\t.then(async () => {\n\t\t\t\t\tif (this.isOAuthInProgress()) {\n\t\t\t\t\t\tlogger.debug('OAuth signIn in progress, waiting for resolution...');\n\n\t\t\t\t\t\tawait new Promise(res => {\n\t\t\t\t\t\t\tconst timeoutId = setTimeout(() => {\n\t\t\t\t\t\t\t\tlogger.debug('OAuth signIn in progress timeout');\n\n\t\t\t\t\t\t\t\tHub.remove('auth', hostedUISignCallback);\n\n\t\t\t\t\t\t\t\tres();\n\t\t\t\t\t\t\t}, OAUTH_FLOW_MS_TIMEOUT);\n\n\t\t\t\t\t\t\tHub.listen('auth', hostedUISignCallback);\n\n\t\t\t\t\t\t\tfunction hostedUISignCallback({ payload }) {\n\t\t\t\t\t\t\t\tconst { event } = payload;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tevent === 'cognitoHostedUI' ||\n\t\t\t\t\t\t\t\t\tevent === 'cognitoHostedUI_failure'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlogger.debug(`OAuth signIn resolved: ${event}`);\n\t\t\t\t\t\t\t\t\tclearTimeout(timeoutId);\n\n\t\t\t\t\t\t\t\t\tHub.remove('auth', hostedUISignCallback);\n\n\t\t\t\t\t\t\t\t\tres();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst user = this.userPool.getCurrentUser();\n\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\tlogger.debug('Failed to get user from user pool');\n\t\t\t\t\t\trej('No current user');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\t\t\t// refresh the session if the session expired.\n\t\t\t\t\tuser.getSession(\n\t\t\t\t\t\tasync (err, session) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tlogger.debug('Failed to get the user session', err);\n\t\t\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trej(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// get user data from Cognito\n\t\t\t\t\t\t\tconst bypassCache = params ? params.bypassCache : false;\n\n\t\t\t\t\t\t\tif (bypassCache) {\n\t\t\t\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\t\t\t\t\t// validate the token's scope first before calling this function\n\t\t\t\t\t\t\tconst { scope = '' } = session.getAccessToken().decodePayload();\n\t\t\t\t\t\t\tif (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n\t\t\t\t\t\t\t\tuser.getUserData(\n\t\t\t\t\t\t\t\t\tasync (err, data) => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tlogger.debug('getting user data failed', err);\n\t\t\t\t\t\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\trej(err);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tres(user);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n\t\t\t\t\t\t\t\t\t\tconst attributeList = [];\n\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < data.UserAttributes.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tconst attribute = {\n\t\t\t\t\t\t\t\t\t\t\t\tName: data.UserAttributes[i].Name,\n\t\t\t\t\t\t\t\t\t\t\t\tValue: data.UserAttributes[i].Value,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\tconst userAttribute = new CognitoUserAttribute(attribute);\n\t\t\t\t\t\t\t\t\t\t\tattributeList.push(userAttribute);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst attributes = this.attributesToObject(attributeList);\n\t\t\t\t\t\t\t\t\t\tObject.assign(user, { attributes, preferredMFA });\n\t\t\t\t\t\t\t\t\t\treturn res(user);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ bypassCache, clientMetadata }\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t\t\t`Unable to get the user data because the ${USER_ADMIN_SCOPE} ` +\n\t\t\t\t\t\t\t\t\t\t`is not in the scopes of the access token`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn res(user);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ clientMetadata }\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\t\t\treturn rej(e);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate isOAuthInProgress(): boolean {\n\t\treturn this.oAuthFlowInProgress;\n\t}\n\n\t/**\n\t * Get current authenticated user\n\t * @param {CurrentUserOpts} - options for getting the current user\n\t * @return - A promise resolves to current authenticated CognitoUser if success\n\t */\n\tpublic async currentAuthenticatedUser(\n\t\tparams?: CurrentUserOpts\n\t): Promise<CognitoUser | any> {\n\t\tlogger.debug('getting current authenticated user');\n\t\tlet federatedUser = null;\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow e;\n\t\t}\n\n\t\ttry {\n\t\t\tconst federatedInfo = JSON.parse(\n\t\t\t\tthis._storage.getItem('aws-amplify-federatedInfo')\n\t\t\t);\n\t\t\tif (federatedInfo) {\n\t\t\t\tfederatedUser = {\n\t\t\t\t\t...federatedInfo.user,\n\t\t\t\t\ttoken: federatedInfo.token,\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlogger.debug('cannot load federated user from auth storage');\n\t\t}\n\n\t\tif (federatedUser) {\n\t\t\tthis.user = federatedUser;\n\t\t\tlogger.debug('get current authenticated federated user', this.user);\n\t\t\treturn this.user;\n\t\t} else {\n\t\t\tlogger.debug('get current authenticated userpool user');\n\t\t\tlet user = null;\n\t\t\ttry {\n\t\t\t\tuser = await this.currentUserPoolUser(params);\n\t\t\t} catch (e) {\n\t\t\t\tif (e === 'No userPool') {\n\t\t\t\t\tlogger.error(\n\t\t\t\t\t\t'Cannot get the current user because the user pool is missing. ' +\n\t\t\t\t\t\t\t'Please make sure the Auth module is configured with a valid Cognito User Pool ID'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlogger.debug('The user is not authenticated by the error', e);\n\t\t\t\treturn Promise.reject('The user is not authenticated');\n\t\t\t}\n\t\t\tthis.user = user;\n\t\t\treturn this.user;\n\t\t}\n\t}\n\n\t/**\n\t * Get current user's session\n\t * @return - A promise resolves to session object if success\n\t */\n\tpublic currentSession(): Promise<CognitoUserSession> {\n\t\tconst that = this;\n\t\tlogger.debug('Getting current session');\n\t\t// Purposely not calling the reject method here because we don't need a console error\n\t\tif (!this.userPool) {\n\t\t\treturn Promise.reject(new Error('No User Pool in the configuration.'));\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tthat\n\t\t\t\t.currentUserPoolUser()\n\t\t\t\t.then(user => {\n\t\t\t\t\tthat\n\t\t\t\t\t\t.userSession(user)\n\t\t\t\t\t\t.then(session => {\n\t\t\t\t\t\t\tres(session);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\t\tlogger.debug('Failed to get the current session', e);\n\t\t\t\t\t\t\trej(e);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tlogger.debug('Failed to get the current user', e);\n\t\t\t\t\trej(e);\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get the corresponding user session\n\t * @param {Object} user - The CognitoUser object\n\t * @return - A promise resolves to the session\n\t */\n\tpublic userSession(user): Promise<CognitoUserSession> {\n\t\tif (!user) {\n\t\t\tlogger.debug('the user is null');\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.NoUserSession);\n\t\t}\n\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tlogger.debug('Getting the session from this user:', user);\n\t\t\tuser.getSession(\n\t\t\t\tasync (err, session) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('Failed to get the session from user', user);\n\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.debug('Succeed to get the user session', session);\n\t\t\t\t\t\tres(session);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ clientMetadata }\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Get authenticated credentials of current user.\n\t * @return - A promise resolves to be current user's credentials\n\t */\n\tpublic async currentUserCredentials(): Promise<ICredentials> {\n\t\tlogger.debug('Getting current user credentials');\n\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow e;\n\t\t}\n\n\t\t// first to check whether there is federation info in the auth storage\n\t\tlet federatedInfo = null;\n\t\ttry {\n\t\t\tfederatedInfo = JSON.parse(\n\t\t\t\tthis._storage.getItem('aws-amplify-federatedInfo')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n\t\t}\n\n\t\tif (federatedInfo) {\n\t\t\t// refresh the jwt token here if necessary\n\t\t\treturn this.Credentials.refreshFederatedToken(federatedInfo);\n\t\t} else {\n\t\t\treturn this.currentSession()\n\t\t\t\t.then(session => {\n\t\t\t\t\tlogger.debug('getting session success', session);\n\t\t\t\t\treturn this.Credentials.set(session, 'session');\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tlogger.debug('getting guest credentials');\n\t\t\t\t\treturn this.Credentials.set(null, 'guest');\n\t\t\t\t});\n\t\t}\n\t}\n\n\tpublic currentCredentials(): Promise<ICredentials> {\n\t\tlogger.debug('getting current credentials');\n\t\treturn this.Credentials.get();\n\t}\n\n\t/**\n\t * Initiate an attribute confirmation request\n\t * @param {Object} user - The CognitoUser\n\t * @param {Object} attr - The attributes to be verified\n\t * @return - A promise resolves to callback data if success\n\t */\n\tpublic verifyUserAttribute(\n\t\tuser: CognitoUser | any,\n\t\tattr: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.getAttributeVerificationCode(\n\t\t\t\tattr,\n\t\t\t\t{\n\t\t\t\t\tonSuccess(success) {\n\t\t\t\t\t\treturn resolve(success);\n\t\t\t\t\t},\n\t\t\t\t\tonFailure(err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Confirm an attribute using a confirmation code\n\t * @param {Object} user - The CognitoUser\n\t * @param {Object} attr - The attribute to be verified\n\t * @param {String} code - The confirmation code\n\t * @return - A promise resolves to callback data if success\n\t */\n\tpublic verifyUserAttributeSubmit(\n\t\tuser: CognitoUser | any,\n\t\tattr: string,\n\t\tcode: string\n\t): Promise<string> {\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.verifyAttribute(attr, code, {\n\t\t\t\tonSuccess(data) {\n\t\t\t\t\tresolve(data);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tonFailure(err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic verifyCurrentUserAttribute(attr: string): Promise<void> {\n\t\tconst that = this;\n\t\treturn that\n\t\t\t.currentUserPoolUser()\n\t\t\t.then(user => that.verifyUserAttribute(user, attr));\n\t}\n\n\t/**\n\t * Confirm current user's attribute using a confirmation code\n\t * @param {Object} attr - The attribute to be verified\n\t * @param {String} code - The confirmation code\n\t * @return - A promise resolves to callback data if success\n\t */\n\tverifyCurrentUserAttributeSubmit(\n\t\tattr: string,\n\t\tcode: string\n\t): Promise<string> {\n\t\tconst that = this;\n\t\treturn that\n\t\t\t.currentUserPoolUser()\n\t\t\t.then(user => that.verifyUserAttributeSubmit(user, attr, code));\n\t}\n\n\tprivate async cognitoIdentitySignOut(\n\t\topts: SignOutOpts,\n\t\tuser: CognitoUser | any\n\t) {\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst isSignedInHostedUI =\n\t\t\tthis._oAuthHandler &&\n\t\t\tthis._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (opts && opts.global) {\n\t\t\t\tlogger.debug('user global sign out', user);\n\t\t\t\t// in order to use global signout\n\t\t\t\t// we must validate the user as an authenticated user by using getSession\n\t\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\t\tuser.getSession(\n\t\t\t\t\tasync (err, result) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger.debug('failed to get the user session', err);\n\t\t\t\t\t\t\tif (this.isSessionInvalid(err)) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.cleanUpInvalidSession(user);\n\t\t\t\t\t\t\t\t} catch (cleanUpError) {\n\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t`Session is invalid due to: ${err.message} and failed to clean up invalid session: ${cleanUpError.message}`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuser.globalSignOut({\n\t\t\t\t\t\t\tonSuccess: data => {\n\t\t\t\t\t\t\t\tlogger.debug('global sign out success');\n\t\t\t\t\t\t\t\tif (isSignedInHostedUI) {\n\t\t\t\t\t\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn res();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\t\t\tlogger.debug('global sign out failed', err);\n\t\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t{ clientMetadata }\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlogger.debug('user sign out', user);\n\t\t\t\tuser.signOut(() => {\n\t\t\t\t\tif (isSignedInHostedUI) {\n\t\t\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn res();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate oAuthSignOutRedirect(\n\t\tresolve: () => void,\n\t\treject: (reason?: any) => void\n\t) {\n\t\tconst { isBrowser } = browserOrNode();\n\n\t\tif (isBrowser) {\n\t\t\tthis.oAuthSignOutRedirectOrReject(reject);\n\t\t} else {\n\t\t\tthis.oAuthSignOutAndResolve(resolve);\n\t\t}\n\t}\n\n\tprivate oAuthSignOutAndResolve(resolve: () => void) {\n\t\tthis._oAuthHandler.signOut();\n\t\tresolve();\n\t}\n\n\tprivate oAuthSignOutRedirectOrReject(reject: (reason?: any) => void) {\n\t\tthis._oAuthHandler.signOut(); // this method redirects url\n\n\t\t// App should be redirected to another url otherwise it will reject\n\t\tsetTimeout(() => reject(Error('Signout timeout fail')), 3000);\n\t}\n\n\t/**\n\t * Sign out method\n\t * @\n\t * @return - A promise resolved if success\n\t */\n\tpublic async signOut(opts?: SignOutOpts): Promise<any> {\n\t\ttry {\n\t\t\tawait this.cleanCachedItems();\n\t\t} catch (e) {\n\t\t\tlogger.debug('failed to clear cached items');\n\t\t}\n\n\t\tif (this.userPool) {\n\t\t\tconst user = this.userPool.getCurrentUser();\n\t\t\tif (user) {\n\t\t\t\tawait this.cognitoIdentitySignOut(opts, user);\n\t\t\t} else {\n\t\t\t\tlogger.debug('no current Cognito user');\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.debug('no Cognito User pool');\n\t\t}\n\n\t\t/**\n\t\t * Note for future refactor - no reliable way to get username with\n\t\t * Cognito User Pools vs Identity when federating with Social Providers\n\t\t * This is why we need a well structured session object that can be inspected\n\t\t * and information passed back in the message below for Hub dispatch\n\t\t */\n\t\tdispatchAuthEvent('signOut', this.user, `A user has been signed out`);\n\t\tthis.user = null;\n\t}\n\n\tprivate async cleanCachedItems() {\n\t\t// clear cognito cached item\n\t\tawait this.Credentials.clear();\n\t}\n\n\t/**\n\t * Change a password for an authenticated user\n\t * @param {Object} user - The CognitoUser object\n\t * @param {String} oldPassword - the current password\n\t * @param {String} newPassword - the requested new password\n\t * @return - A promise resolves if success\n\t */\n\tpublic changePassword(\n\t\tuser: CognitoUser | any,\n\t\toldPassword: string,\n\t\tnewPassword: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<'SUCCESS'> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.userSession(user).then(session => {\n\t\t\t\tuser.changePassword(\n\t\t\t\t\toldPassword,\n\t\t\t\t\tnewPassword,\n\t\t\t\t\t(err, data) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger.debug('change password failure', err);\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn resolve(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclientMetadata\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Initiate a forgot password request\n\t * @param {String} username - the username to change password\n\t * @return - A promise resolves if success\n\t */\n\tpublic forgotPassword(\n\t\tusername: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.forgotPassword(\n\t\t\t\t{\n\t\t\t\t\tonSuccess: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tlogger.debug('forgot password failure', err);\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPassword_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${username} forgotPassword failed`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\tinputVerificationCode: data => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPassword',\n\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t`${username} has initiated forgot password flow`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Confirm a new password using a confirmation Code\n\t * @param {String} username - The username\n\t * @param {String} code - The confirmation code\n\t * @param {String} password - The new password\n\t * @return - A promise that resolves if success\n\t */\n\tpublic forgotPasswordSubmit(\n\t\tusername: string,\n\t\tcode: string,\n\t\tpassword: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<string> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\t\tif (!password) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.confirmPassword(\n\t\t\t\tcode,\n\t\t\t\tpassword,\n\t\t\t\t{\n\t\t\t\t\tonSuccess: success => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPasswordSubmit',\n\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t`${username} forgotPasswordSubmit successful`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(success);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPasswordSubmit_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${username} forgotPasswordSubmit failed`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Get user information\n\t * @async\n\t * @return {Object }- current User's information\n\t */\n\tpublic async currentUserInfo() {\n\t\tconst source = this.Credentials.getCredSource();\n\n\t\tif (!source || source === 'aws' || source === 'userPool') {\n\t\t\tconst user = await this.currentUserPoolUser().catch(err =>\n\t\t\t\tlogger.error(err)\n\t\t\t);\n\t\t\tif (!user) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst attributes = await this.userAttributes(user);\n\t\t\t\tconst userAttrs: object = this.attributesToObject(attributes);\n\t\t\t\tlet credentials = null;\n\t\t\t\ttry {\n\t\t\t\t\tcredentials = await this.currentCredentials();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t'Failed to retrieve credentials while getting current user info',\n\t\t\t\t\t\te\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst info = {\n\t\t\t\t\tid: credentials ? credentials.identityId : undefined,\n\t\t\t\t\tusername: user.getUsername(),\n\t\t\t\t\tattributes: userAttrs,\n\t\t\t\t};\n\t\t\t\treturn info;\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error('currentUserInfo error', err);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\n\t\tif (source === 'federated') {\n\t\t\tconst user = this.user;\n\t\t\treturn user ? user : {};\n\t\t}\n\t}\n\n\tpublic async federatedSignIn(\n\t\toptions?: FederatedSignInOptions\n\t): Promise<ICredentials>;\n\tpublic async federatedSignIn(\n\t\tprovider: LegacyProvider,\n\t\tresponse: FederatedResponse,\n\t\tuser: FederatedUser\n\t): Promise<ICredentials>;\n\tpublic async federatedSignIn(\n\t\toptions?: FederatedSignInOptionsCustom\n\t): Promise<ICredentials>;\n\tpublic async federatedSignIn(\n\t\tproviderOrOptions:\n\t\t\t| LegacyProvider\n\t\t\t| FederatedSignInOptions\n\t\t\t| FederatedSignInOptionsCustom,\n\t\tresponse?: FederatedResponse,\n\t\tuser?: FederatedUser\n\t): Promise<ICredentials> {\n\t\tif (!this._config.identityPoolId && !this._config.userPoolId) {\n\t\t\tthrow new Error(\n\t\t\t\t`Federation requires either a User Pool or Identity Pool in config`\n\t\t\t);\n\t\t}\n\n\t\t// Ensure backwards compatability\n\t\tif (typeof providerOrOptions === 'undefined') {\n\t\t\tif (this._config.identityPoolId && !this._config.userPoolId) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Federation with Identity Pools requires tokens passed as arguments`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisFederatedSignInOptions(providerOrOptions) ||\n\t\t\tisFederatedSignInOptionsCustom(providerOrOptions) ||\n\t\t\thasCustomState(providerOrOptions) ||\n\t\t\ttypeof providerOrOptions === 'undefined'\n\t\t) {\n\t\t\tconst options = providerOrOptions || {\n\t\t\t\tprovider: CognitoHostedUIIdentityProvider.Cognito,\n\t\t\t};\n\t\t\tconst provider = isFederatedSignInOptions(options)\n\t\t\t\t? options.provider\n\t\t\t\t: (options as FederatedSignInOptionsCustom).customProvider;\n\n\t\t\tconst customState = isFederatedSignInOptions(options)\n\t\t\t\t? options.customState\n\t\t\t\t: (options as FederatedSignInOptionsCustom).customState;\n\n\t\t\tif (this._config.userPoolId) {\n\t\t\t\tconst client_id = isCognitoHostedOpts(this._config.oauth)\n\t\t\t\t\t? this._config.userPoolWebClientId\n\t\t\t\t\t: this._config.oauth.clientID;\n\t\t\t\t/*Note: Invenstigate automatically adding trailing slash */\n\t\t\t\tconst redirect_uri = isCognitoHostedOpts(this._config.oauth)\n\t\t\t\t\t? this._config.oauth.redirectSignIn\n\t\t\t\t\t: this._config.oauth.redirectUri;\n\n\t\t\t\tthis._oAuthHandler.oauthSignIn(\n\t\t\t\t\tthis._config.oauth.responseType,\n\t\t\t\t\tthis._config.oauth.domain,\n\t\t\t\t\tredirect_uri,\n\t\t\t\t\tclient_id,\n\t\t\t\t\tprovider,\n\t\t\t\t\tcustomState\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst provider = providerOrOptions;\n\t\t\t// To check if the user is already logged in\n\t\t\ttry {\n\t\t\t\tconst loggedInUser = JSON.stringify(\n\t\t\t\t\tJSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user\n\t\t\t\t);\n\t\t\t\tif (loggedInUser) {\n\t\t\t\t\tlogger.warn(`There is already a signed in user: ${loggedInUser} in your app.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.`);\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tconst { token, identity_id, expires_at } = response;\n\t\t\t// Because this.Credentials.set would update the user info with identity id\n\t\t\t// So we need to retrieve the user again.\n\t\t\tconst credentials = await this.Credentials.set(\n\t\t\t\t{ provider, token, identity_id, user, expires_at },\n\t\t\t\t'federation'\n\t\t\t);\n\t\t\tconst currentUser = await this.currentAuthenticatedUser();\n\t\t\tdispatchAuthEvent(\n\t\t\t\t'signIn',\n\t\t\t\tcurrentUser,\n\t\t\t\t`A user ${currentUser.username} has been signed in`\n\t\t\t);\n\t\t\tlogger.debug('federated sign in credentials', credentials);\n\t\t\treturn credentials;\n\t\t}\n\t}\n\n\t/**\n\t * Used to complete the OAuth flow with or without the Cognito Hosted UI\n\t * @param {String} URL - optional parameter for customers to pass in the response URL\n\t */\n\tprivate async _handleAuthResponse(URL?: string) {\n\t\tif (this.oAuthFlowInProgress) {\n\t\t\tlogger.debug(`Skipping URL ${URL} current flow in progress`);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.oAuthFlowInProgress = true;\n\t\t\tif (!this._config.userPoolId) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`OAuth responses require a User Pool defined in config`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdispatchAuthEvent(\n\t\t\t\t'parsingCallbackUrl',\n\t\t\t\t{ url: URL },\n\t\t\t\t`The callback url is being parsed`\n\t\t\t);\n\n\t\t\tconst currentUrl =\n\t\t\t\tURL || (browserOrNode().isBrowser ? window.location.href : '');\n\n\t\t\tconst hasCodeOrError = !!(parse(currentUrl).query || '')\n\t\t\t\t.split('&')\n\t\t\t\t.map(entry => entry.split('='))\n\t\t\t\t.find(([k]) => k === 'code' || k === 'error');\n\n\t\t\tconst hasTokenOrError = !!(parse(currentUrl).hash || '#')\n\t\t\t\t.substr(1)\n\t\t\t\t.split('&')\n\t\t\t\t.map(entry => entry.split('='))\n\t\t\t\t.find(([k]) => k === 'access_token' || k === 'error');\n\n\t\t\tif (hasCodeOrError || hasTokenOrError) {\n\t\t\t\tthis._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n\t\t\t\ttry {\n\t\t\t\t\tconst { accessToken, idToken, refreshToken, state } =\n\t\t\t\t\t\tawait this._oAuthHandler.handleAuthResponse(currentUrl);\n\t\t\t\t\tconst session = new CognitoUserSession({\n\t\t\t\t\t\tIdToken: new CognitoIdToken({ IdToken: idToken }),\n\t\t\t\t\t\tRefreshToken: new CognitoRefreshToken({\n\t\t\t\t\t\t\tRefreshToken: refreshToken,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tAccessToken: new CognitoAccessToken({\n\t\t\t\t\t\t\tAccessToken: accessToken,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\n\t\t\t\t\tlet credentials;\n\t\t\t\t\t// Get AWS Credentials & store if Identity Pool is defined\n\t\t\t\t\tif (this._config.identityPoolId) {\n\t\t\t\t\t\tcredentials = await this.Credentials.set(session, 'session');\n\t\t\t\t\t\tlogger.debug('AWS credentials', credentials);\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\tPrior to the request we do sign the custom state along with the state we set. This check will verify\n\t\t\t\tif there is a dash indicated when setting custom state from the request. If a dash is contained\n\t\t\t\tthen there is custom state present on the state string.\n\t\t\t\t*/\n\t\t\t\t\tconst isCustomStateIncluded = /-/.test(state);\n\n\t\t\t\t\t/*\n\t\t\t\tThe following is to create a user for the Cognito Identity SDK to store the tokens\n\t\t\t\tWhen we remove this SDK later that logic will have to be centralized in our new version\n\t\t\t\t*/\n\t\t\t\t\t//#region\n\t\t\t\t\tconst currentUser = this.createCognitoUser(\n\t\t\t\t\t\tsession.getIdToken().decodePayload()['cognito:username']\n\t\t\t\t\t);\n\n\t\t\t\t\t// This calls cacheTokens() in Cognito SDK\n\t\t\t\t\tcurrentUser.setSignInUserSession(session);\n\n\t\t\t\t\tif (window && typeof window.history !== 'undefined') {\n\t\t\t\t\t\twindow.history.replaceState(\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t(this._config.oauth as AwsCognitoOAuthOpts).redirectSignIn\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t`A user ${currentUser.getUsername()} has been signed in`\n\t\t\t\t\t);\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'cognitoHostedUI',\n\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t`A user ${currentUser.getUsername()} has been signed in via Cognito Hosted UI`\n\t\t\t\t\t);\n\n\t\t\t\t\tif (isCustomStateIncluded) {\n\t\t\t\t\t\tconst customState = state.split('-').splice(1).join('-');\n\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'customOAuthState',\n\t\t\t\t\t\t\turlSafeDecode(customState),\n\t\t\t\t\t\t\t`State for user ${currentUser.getUsername()}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//#endregion\n\n\t\t\t\t\treturn credentials;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.debug('Error in cognito hosted auth response', err);\n\n\t\t\t\t\t// Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n\t\t\t\t\t// Otherwise, reloading the page will throw errors as the `code` has already been spent.\n\t\t\t\t\tif (window && typeof window.history !== 'undefined') {\n\t\t\t\t\t\twindow.history.replaceState(\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t(this._config.oauth as AwsCognitoOAuthOpts).redirectSignIn\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'signIn_failure',\n\t\t\t\t\t\terr,\n\t\t\t\t\t\t`The OAuth response flow failed`\n\t\t\t\t\t);\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'cognitoHostedUI_failure',\n\t\t\t\t\t\terr,\n\t\t\t\t\t\t`A failure occurred when returning to the Cognito Hosted UI`\n\t\t\t\t\t);\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'customState_failure',\n\t\t\t\t\t\terr,\n\t\t\t\t\t\t`A failure occurred when returning state`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.oAuthFlowInProgress = false;\n\t\t}\n\t}\n\n\t/**\n\t * Compact version of credentials\n\t * @param {Object} credentials\n\t * @return {Object} - Credentials\n\t */\n\tpublic essentialCredentials(credentials): ICredentials {\n\t\treturn {\n\t\t\taccessKeyId: credentials.accessKeyId,\n\t\t\tsessionToken: credentials.sessionToken,\n\t\t\tsecretAccessKey: credentials.secretAccessKey,\n\t\t\tidentityId: credentials.identityId,\n\t\t\tauthenticated: credentials.authenticated,\n\t\t};\n\t}\n\n\tprivate attributesToObject(attributes) {\n\t\tconst obj = {};\n\t\tif (attributes) {\n\t\t\tattributes.map(attribute => {\n\t\t\t\tif (\n\t\t\t\t\tattribute.Name === 'email_verified' ||\n\t\t\t\t\tattribute.Name === 'phone_number_verified'\n\t\t\t\t) {\n\t\t\t\t\tobj[attribute.Name] =\n\t\t\t\t\t\tthis.isTruthyString(attribute.Value) || attribute.Value === true;\n\t\t\t\t} else {\n\t\t\t\t\tobj[attribute.Name] = attribute.Value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn obj;\n\t}\n\n\tprivate isTruthyString(value: any): boolean {\n\t\treturn (\n\t\t\ttypeof value.toLowerCase === 'function' && value.toLowerCase() === 'true'\n\t\t);\n\t}\n\n\tprivate createCognitoUser(username: string): CognitoUser {\n\t\tconst userData: ICognitoUserData = {\n\t\t\tUsername: username,\n\t\t\tPool: this.userPool,\n\t\t};\n\t\tuserData.Storage = this._storage;\n\n\t\tconst { authenticationFlowType } = this._config;\n\n\t\tconst user = new CognitoUser(userData);\n\t\tif (authenticationFlowType) {\n\t\t\tuser.setAuthenticationFlowType(authenticationFlowType);\n\t\t}\n\t\treturn user;\n\t}\n\n\tprivate _isValidAuthStorage(obj) {\n\t\t// We need to check if the obj has the functions of Storage\n\t\treturn (\n\t\t\t!!obj &&\n\t\t\ttypeof obj.getItem === 'function' &&\n\t\t\ttypeof obj.setItem === 'function' &&\n\t\t\ttypeof obj.removeItem === 'function' &&\n\t\t\ttypeof obj.clear === 'function'\n\t\t);\n\t}\n\n\tprivate noUserPoolErrorHandler(config: AuthOptions): AuthErrorTypes {\n\t\tif (config) {\n\t\t\tif (!config.userPoolId || !config.identityPoolId) {\n\t\t\t\treturn AuthErrorTypes.MissingAuthConfig;\n\t\t\t}\n\t\t}\n\t\treturn AuthErrorTypes.NoConfig;\n\t}\n\n\tprivate rejectAuthError(type: AuthErrorTypes): Promise<never> {\n\t\treturn Promise.reject(new AuthError(type));\n\t}\n\n\tprivate rejectNoUserPool(): Promise<never> {\n\t\tconst type = this.noUserPoolErrorHandler(this._config);\n\t\treturn Promise.reject(new NoUserPoolError(type));\n\t}\n\n\tpublic async rememberDevice(): Promise<string | AuthError> {\n\t\tlet currUser;\n\n\t\ttry {\n\t\t\tcurrUser = await this.currentUserPoolUser();\n\t\t} catch (error) {\n\t\t\tlogger.debug('The user is not authenticated by the error', error);\n\t\t\treturn Promise.reject('The user is not authenticated');\n\t\t}\n\n\t\tcurrUser.getCachedDeviceKeyAndPassword();\n\t\treturn new Promise((res, rej) => {\n\t\t\tcurrUser.setDeviceStatusRemembered({\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tres(data);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tif (err.code === 'InvalidParameterException') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.DeviceConfig));\n\t\t\t\t\t} else if (err.code === 'NetworkError') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.NetworkError));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async forgetDevice(): Promise<void> {\n\t\tlet currUser;\n\n\t\ttry {\n\t\t\tcurrUser = await this.currentUserPoolUser();\n\t\t} catch (error) {\n\t\t\tlogger.debug('The user is not authenticated by the error', error);\n\t\t\treturn Promise.reject('The user is not authenticated');\n\t\t}\n\n\t\tcurrUser.getCachedDeviceKeyAndPassword();\n\t\treturn new Promise((res, rej) => {\n\t\t\tcurrUser.forgetDevice({\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tres(data);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tif (err.code === 'InvalidParameterException') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.DeviceConfig));\n\t\t\t\t\t} else if (err.code === 'NetworkError') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.NetworkError));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async fetchDevices(): Promise<IAuthDevice[]> {\n\t\tlet currUser;\n\n\t\ttry {\n\t\t\tcurrUser = await this.currentUserPoolUser();\n\t\t} catch (error) {\n\t\t\tlogger.debug('The user is not authenticated by the error', error);\n\t\t\tthrow new Error('The user is not authenticated');\n\t\t}\n\n\t\tcurrUser.getCachedDeviceKeyAndPassword();\n\t\treturn new Promise((res, rej) => {\n\t\t\tconst cb = {\n\t\t\t\tonSuccess(data) {\n\t\t\t\t\tconst deviceList: IAuthDevice[] = data.Devices.map(device => {\n\t\t\t\t\t\tconst deviceName =\n\t\t\t\t\t\t\tdevice.DeviceAttributes.find(\n\t\t\t\t\t\t\t\t({ Name }) => Name === 'device_name'\n\t\t\t\t\t\t\t) || {};\n\n\t\t\t\t\t\tconst deviceInfo: IAuthDevice = {\n\t\t\t\t\t\t\tid: device.DeviceKey,\n\t\t\t\t\t\t\tname: deviceName.Value,\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn deviceInfo;\n\t\t\t\t\t});\n\t\t\t\t\tres(deviceList);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tif (err.code === 'InvalidParameterException') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.DeviceConfig));\n\t\t\t\t\t} else if (err.code === 'NetworkError') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.NetworkError));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tcurrUser.listDevices(MAX_DEVICES, null, cb);\n\t\t});\n\t}\n}\n\nexport const Auth = new AuthClass(null);\n\nAmplify.register(Auth);\n"]},"metadata":{},"sourceType":"module"}