{"ast":null,"code":"/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\"\n    }\n  }\n};\n/**\n * Localized upper case.\n */\n\nexport function localeUpperCase(str, locale) {\n  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, function (m) {\n    return lang.map[m];\n  }));\n  return upperCase(str);\n}\n/**\n * Upper case as a function.\n */\n\nexport function upperCase(str) {\n  return str.toUpperCase();\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA,IAAIA,gBAAgB,GAAG;EACnBC,EAAE,EAAE;IACAC,MAAM,EAAE,WADR;IAEAC,GAAG,EAAE;MACDC,CAAC,EAAE;IADF;EAFL,CADe;EAOnBC,EAAE,EAAE;IACAH,MAAM,EAAE,WADR;IAEAC,GAAG,EAAE;MACDC,CAAC,EAAE;IADF;EAFL,CAPe;EAanBE,EAAE,EAAE;IACAJ,MAAM,EAAE,8DADR;IAEAC,GAAG,EAAE;MACDI,EAAE,EAAE,QADH;MAEDC,EAAE,EAAE,QAFH;MAGDC,EAAE,EAAE,QAHH;MAIDC,GAAG,EAAE,QAJJ;MAKDC,GAAG,EAAE,QALJ;MAMDC,GAAG,EAAE;IANJ;EAFL;AAbe,CAAvB;AAyBA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,MAA9B,EAAsC;EACzC,IAAIC,IAAI,GAAGhB,gBAAgB,CAACe,MAAM,CAACE,WAAP,EAAD,CAA3B;EACA,IAAID,IAAJ,EACI,OAAOE,SAAS,CAACJ,GAAG,CAACK,OAAJ,CAAYH,IAAI,CAACd,MAAjB,EAAyB,UAAUkB,CAAV,EAAa;IAAE,OAAOJ,IAAI,CAACb,GAAL,CAASiB,CAAT,CAAP;EAAqB,CAA7D,CAAD,CAAhB;EACJ,OAAOF,SAAS,CAACJ,GAAD,CAAhB;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASI,SAAT,CAAmBJ,GAAnB,EAAwB;EAC3B,OAAOA,GAAG,CAACO,WAAJ,EAAP;AACH","names":["SUPPORTED_LOCALE","tr","regexp","map","i","az","lt","i̇","j̇","į̇","i̇̀","i̇́","i̇̃","localeUpperCase","str","locale","lang","toLowerCase","upperCase","replace","m","toUpperCase"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/upper-case/src/index.ts"],"sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\",\n    },\n  },\n};\n\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return upperCase(str);\n}\n\n/**\n * Upper case as a function.\n */\nexport function upperCase(str: string) {\n  return str.toUpperCase();\n}\n"]},"metadata":{},"sourceType":"module"}