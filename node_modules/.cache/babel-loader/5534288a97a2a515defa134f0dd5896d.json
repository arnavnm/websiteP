{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as t from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope as o } from \"@radix-ui/react-roving-focus\";\nimport { Primitive as a } from \"@radix-ui/react-primitive\";\nimport { useControllableState as r } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { composeEventHandlers as i } from \"@radix-ui/primitive\";\nimport * as s from \"react\";\nimport c from \"@babel/runtime/helpers/esm/extends\";\nconst [d, l] = n(\"Tabs\", [o]);\nexport { l as createTabsScope };\nconst u = o(),\n      [b, p] = d(\"Tabs\");\nexport const Tabs = /*#__PURE__*/s.forwardRef((t, o) => {\n  const {\n    __scopeTabs: n,\n    value: i,\n    onValueChange: d,\n    defaultValue: l,\n    orientation: u = \"horizontal\",\n    dir: p = \"ltr\",\n    activationMode: m = \"automatic\",\n    ...f\n  } = t,\n        [v, T] = r({\n    prop: i,\n    onChange: d,\n    defaultProp: l\n  });\n  /*#__PURE__*/\n\n  return s.createElement(b, {\n    scope: n,\n    baseId: e(),\n    value: v,\n    onValueChange: T,\n    orientation: u,\n    dir: p,\n    activationMode: m\n  }, /*#__PURE__*/s.createElement(a.div, c({\n    \"data-orientation\": u\n  }, f, {\n    ref: o\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsList = /*#__PURE__*/s.forwardRef((e, o) => {\n  const {\n    __scopeTabs: r,\n    loop: n = !0,\n    ...i\n  } = e,\n        d = p(\"TabsList\", r),\n        l = u(r);\n  /*#__PURE__*/\n\n  return s.createElement(t.Root, c({\n    asChild: !0\n  }, l, {\n    orientation: d.orientation,\n    dir: d.dir,\n    loop: n\n  }), /*#__PURE__*/s.createElement(a.div, c({\n    role: \"tablist\",\n    \"aria-orientation\": d.orientation,\n    dir: d.dir\n  }, i, {\n    ref: o\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsTrigger = /*#__PURE__*/s.forwardRef((e, o) => {\n  const {\n    __scopeTabs: r,\n    value: n,\n    disabled: d = !1,\n    ...l\n  } = e,\n        b = p(\"TabsTrigger\", r),\n        v = u(r),\n        T = m(b.baseId, n),\n        x = f(b.baseId, n),\n        g = n === b.value;\n  /*#__PURE__*/\n\n  return s.createElement(t.Item, c({\n    asChild: !0\n  }, v, {\n    focusable: !d,\n    active: g\n  }), /*#__PURE__*/s.createElement(a.button, c({\n    type: \"button\",\n    role: \"tab\",\n    \"aria-selected\": g,\n    \"aria-controls\": x,\n    \"data-state\": g ? \"active\" : \"inactive\",\n    \"data-disabled\": d ? \"\" : void 0,\n    disabled: d,\n    id: T\n  }, l, {\n    ref: o,\n    onMouseDown: i(e.onMouseDown, e => {\n      d || 0 !== e.button || !1 !== e.ctrlKey ? e.preventDefault() : b.onValueChange(n);\n    }),\n    onKeyDown: i(e.onKeyDown, e => {\n      [\" \", \"Enter\"].includes(e.key) && b.onValueChange(n);\n    }),\n    onFocus: i(e.onFocus, () => {\n      const e = \"manual\" !== b.activationMode;\n      g || d || !e || b.onValueChange(n);\n    })\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsContent = /*#__PURE__*/s.forwardRef((e, t) => {\n  const {\n    __scopeTabs: o,\n    value: r,\n    children: n,\n    ...i\n  } = e,\n        d = p(\"TabsContent\", o),\n        l = m(d.baseId, r),\n        u = f(d.baseId, r),\n        b = r === d.value;\n  /*#__PURE__*/\n\n  return s.createElement(a.div, c({\n    \"data-state\": b ? \"active\" : \"inactive\",\n    \"data-orientation\": d.orientation,\n    role: \"tabpanel\",\n    \"aria-labelledby\": l,\n    hidden: !b,\n    id: u,\n    tabIndex: 0\n  }, i, {\n    ref: t\n  }), b && n);\n});\n/*#__PURE__*/\n\nfunction m(e, t) {\n  return `${e}-trigger-${t}`;\n}\n\nfunction f(e, t) {\n  return `${e}-content-${t}`;\n}\n\nexport const Root = Tabs;\nexport const List = TabsList;\nexport const Trigger = TabsTrigger;\nexport const Content = TabsContent;","map":{"version":3,"mappings":"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","names":["createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React","forwardRef","props","forwardedRef","__scopeTabs","value","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","setValue","useControllableState","prop","onChange","defaultProp","_react","$b40a02b2d3d1d21ebd9ba3d555116441$var$TabsProvider","scope","baseId","useId","Primitive","div","_babelRuntimeHelpersEsmExtends","ref","TabsList","loop","listProps","context","rovingFocusGroupScope","_radixUiReactRovingFocus","Root","asChild","role","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","Item","focusable","active","button","type","undefined","id","onMouseDown","composeEventHandlers","event","ctrlKey","preventDefault","onKeyDown","includes","key","onFocus","isAutomaticActivation","TabsContent","children","contentProps","hidden","tabIndex","List","Trigger","Content"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@radix-ui/react-tabs/dist/packages/react/tabs/src/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   * @defaultValue ltr\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir = 'ltr',\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={dir}\n        activationMode={activationMode}\n      >\n        <Primitive.div data-orientation={orientation} {...tabsProps} ref={forwardedRef} />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          dir={context.dir}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <Primitive.div\n        data-state={isSelected ? 'active' : 'inactive'}\n        data-orientation={context.orientation}\n        role=\"tabpanel\"\n        aria-labelledby={triggerId}\n        hidden={!isSelected}\n        id={contentId}\n        tabIndex={0}\n        {...contentProps}\n        ref={forwardedRef}\n      >\n        {isSelected && children}\n      </Primitive.div>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"]},"metadata":{},"sourceType":"module"}