{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { AnalyticsFilter, LifecycleRuleFilter, MetricsFilter, ReplicationRuleFilter } from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"AbortMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({}, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.MultipartUpload !== undefined) {\n            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.MetadataDirective) && {\n            \"x-amz-metadata-directive\": input.MetadataDirective\n          }), isSerializableHeaderValue(input.TaggingDirective) && {\n            \"x-amz-tagging-directive\": input.TaggingDirective\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"CopyObject\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n            \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString()\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            uploads: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"DeleteObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            delete: \"\"\n          };\n\n          if (input.Delete !== undefined) {\n            contents = serializeAws_restXmlDelete(input.Delete, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"GetBucketAnalyticsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"GetBucketIntelligentTieringConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"GetBucketInventoryConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            location: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"GetBucketMetricsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policyStatus: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"x-id\": \"GetObject\"\n          }, input.ResponseCacheControl !== undefined && {\n            \"response-cache-control\": input.ResponseCacheControl\n          }), input.ResponseContentDisposition !== undefined && {\n            \"response-content-disposition\": input.ResponseContentDisposition\n          }), input.ResponseContentEncoding !== undefined && {\n            \"response-content-encoding\": input.ResponseContentEncoding\n          }), input.ResponseContentLanguage !== undefined && {\n            \"response-content-language\": input.ResponseContentLanguage\n          }), input.ResponseContentType !== undefined && {\n            \"response-content-type\": input.ResponseContentType\n          }), input.ResponseExpires !== undefined && {\n            \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            torrent: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({}, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"ListBucketAnalyticsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"ListBucketIntelligentTieringConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"ListBucketInventoryConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"ListBucketMetricsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/\";\n          body = \"\";\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            uploads: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxUploads !== undefined && {\n            \"max-uploads\": input.MaxUploads.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.UploadIdMarker !== undefined && {\n            \"upload-id-marker\": input.UploadIdMarker\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.Marker !== undefined && {\n            marker: input.Marker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"list-type\": \"2\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          }), input.FetchOwner !== undefined && {\n            \"fetch-owner\": input.FetchOwner.toString()\n          }), input.StartAfter !== undefined && {\n            \"start-after\": input.StartAfter\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            versions: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.VersionIdMarker !== undefined && {\n            \"version-id-marker\": input.VersionIdMarker\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListPartsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign({\n            \"x-id\": \"ListParts\"\n          }, input.MaxParts !== undefined && {\n            \"max-parts\": input.MaxParts.toString()\n          }), input.PartNumberMarker !== undefined && {\n            \"part-number-marker\": input.PartNumberMarker\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n\n          if (input.AccelerateConfiguration !== undefined) {\n            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n\n          if (input.CORSConfiguration !== undefined) {\n            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.InventoryConfiguration !== undefined) {\n            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n\n          if (input.LifecycleConfiguration !== undefined) {\n            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n\n          if (input.BucketLoggingStatus !== undefined) {\n            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.MetricsConfiguration !== undefined) {\n            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n\n          if (input.NotificationConfiguration !== undefined) {\n            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n\n          if (input.OwnershipControls !== undefined) {\n            contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"text/plain\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n            \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n\n          if (input.Policy !== undefined) {\n            contents = input.Policy;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n\n          if (input.ReplicationConfiguration !== undefined) {\n            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n\n          if (input.VersioningConfiguration !== undefined) {\n            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n\n          if (input.WebsiteConfiguration !== undefined) {\n            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"PutObject\"\n          };\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.LegalHold !== undefined) {\n            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Retention !== undefined) {\n            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            restore: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.RestoreRequest !== undefined) {\n            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            select: \"\",\n            \"select-type\": \"2\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n          if (input.Expression !== undefined) {\n            node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ExpressionType !== undefined) {\n            node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.InputSerialization !== undefined) {\n            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.OutputSerialization !== undefined) {\n            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.RequestProgress !== undefined) {\n            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ScanRange !== undefined) {\n            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n            bodyNode.addChildNode(node);\n          }\n\n          body += bodyNode.toString();\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPart\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceRange) && {\n            \"x-amz-copy-source-range\": input.CopySourceRange\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPartCopy\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = data[\"ETag\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = data[\"Location\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Location: undefined\n          };\n\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          }\n\n          if (data[\"Deleted\"] !== undefined) {\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n          }\n\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          }\n\n          if (data[\"Error\"] !== undefined) {\n            contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CORSRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          }\n\n          if (data[\"CORSRule\"] !== undefined) {\n            contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ServerSideEncryptionConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            IntelligentTieringConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            InventoryConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Rules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          }\n\n          if (data[\"Rule\"] !== undefined) {\n            contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LocationConstraint: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = data[\"LocationConstraint\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LoggingEnabled: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MetricsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          }\n\n          if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n          }\n\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          }\n\n          if (data[\"QueueConfiguration\"] !== undefined) {\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n          }\n\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          }\n\n          if (data[\"TopicConfiguration\"] !== undefined) {\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            OwnershipControls: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Policy: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Policy\"] !== undefined) {\n            contents.Policy = data[\"Policy\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PolicyStatus: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ReplicationConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Payer: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = data[\"Payer\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MFADelete: undefined,\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = data[\"MfaDelete\"];\n          }\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          }\n\n          if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        AcceptRanges: undefined,\n        Body: undefined,\n        BucketKeyEnabled: undefined,\n        CacheControl: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n      }\n\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = new Date(output.headers[\"last-modified\"]);\n      }\n\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n      }\n\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n      }\n\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = new Date(output.headers[\"expires\"]);\n      }\n\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n        contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n      }\n\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n      }\n\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidObjectState\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#InvalidObjectState\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LegalHold: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ObjectLockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Retention: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Body: undefined,\n        RequestCharged: undefined\n      };\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PublicAccessBlockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            ArchiveStatus: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n\n          if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n            contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\n          }\n\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = new Date(output.headers[\"expires\"]);\n          }\n\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n          }\n\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n          }\n\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          }\n\n          if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IntelligentTieringConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data.IntelligentTieringConfiguration === \"\") {\n            contents.IntelligentTieringConfigurationList = [];\n          }\n\n          if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n            contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          }\n\n          if (data[\"InventoryConfiguration\"] !== undefined) {\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          }\n\n          if (data[\"MetricsConfiguration\"] !== undefined) {\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Buckets: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          }\n\n          if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = data[\"UploadIdMarker\"];\n          }\n\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          }\n\n          if (data[\"Upload\"] !== undefined) {\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = data[\"Marker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = data[\"NextMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = parseInt(data[\"KeyCount\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = data[\"StartAfter\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          }\n\n          if (data[\"DeleteMarker\"] !== undefined) {\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = data[\"VersionIdMarker\"];\n          }\n\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          }\n\n          if (data[\"Version\"] !== undefined) {\n            contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = parseInt(data[\"MaxParts\"]);\n          }\n\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = data[\"NextPartNumberMarker\"];\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = data[\"PartNumberMarker\"];\n          }\n\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          }\n\n          if (data[\"Part\"] !== undefined) {\n            contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = data[\"StorageClass\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4\n                /*yield*/\n                , deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Records\"] !== undefined)) return [3\n          /*break*/\n          , 2];\n          _a = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.Records = _f.sent(), _a)];\n\n        case 2:\n          if (!(output[\"Stats\"] !== undefined)) return [3\n          /*break*/\n          , 4];\n          _b = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n\n        case 3:\n          return [2\n          /*return*/\n          , (_b.Stats = _f.sent(), _b)];\n\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3\n          /*break*/\n          , 6];\n          _c = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n\n        case 5:\n          return [2\n          /*return*/\n          , (_c.Progress = _f.sent(), _c)];\n\n        case 6:\n          if (!(output[\"Cont\"] !== undefined)) return [3\n          /*break*/\n          , 8];\n          _d = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n\n        case 7:\n          return [2\n          /*return*/\n          , (_d.Cont = _f.sent(), _d)];\n\n        case 8:\n          if (!(output[\"End\"] !== undefined)) return [3\n          /*break*/\n          , 10];\n          _e = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n\n        case 9:\n          return [2\n          /*return*/\n          , (_e.End = _f.sent(), _e)];\n\n        case 10:\n          return [2\n          /*return*/\n          , {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlEndEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      contents.Payload = output.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyExists\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyOwnedByYou\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlInvalidObjectStateResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidObjectState\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        AccessTier: undefined,\n        StorageClass: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = data[\"AccessTier\"];\n      }\n\n      if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = data[\"StorageClass\"];\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchBucket\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchKey\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchUpload\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectAlreadyInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectNotInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n\n  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n    var node = new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n\n  if (input.Grants !== undefined && input.Grants !== null) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n  AnalyticsFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n\n  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n\n  if (input.Parts !== undefined && input.Parts !== null) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n\n  if (input.ETag !== undefined && input.ETag !== null) {\n    var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.PartNumber !== undefined && input.PartNumber !== null) {\n    var node = new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCompletedPart(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCondition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n\n  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n    var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n    var node = new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n\n  if (input.CORSRules !== undefined && input.CORSRules !== null) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n\n  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n    var node = new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCORSRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n\n  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n    var node = new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n\n  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n    var node = new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Comments !== undefined && input.Comments !== null) {\n    var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n    var node = new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n\n  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n    var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Years !== undefined && input.Years !== null) {\n    var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDelete = function (input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n\n  if (input.Objects !== undefined && input.Objects !== null) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Quiet !== undefined && input.Quiet !== null) {\n    var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Account !== undefined && input.Account !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Metrics !== undefined && input.Metrics !== null) {\n    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n\n  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSContext !== undefined && input.KMSContext !== null) {\n    var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n\n  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n    var node = new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlFilterRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlFilterRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrantee = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n    var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.URI !== undefined && input.URI !== null) {\n    var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrants = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n\n  if (input.Suffix !== undefined && input.Suffix !== null) {\n    var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CompressionType !== undefined && input.CompressionType !== null) {\n    var node = new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Parquet !== undefined && input.Parquet !== null) {\n    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tierings !== undefined && input.Tierings !== null) {\n    var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tiering\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined && input.Tag !== null) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.And !== undefined && input.And !== null) {\n    var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n    var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n    var node = new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n\n  if (input.Schedule !== undefined && input.Schedule !== null) {\n    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n\n  if (input.SSES3 !== undefined && input.SSES3 !== null) {\n    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n    return node.withName(\"Field\");\n  });\n};\n\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n\n  if (input.AccountId !== undefined && input.AccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n\n  if (input.Frequency !== undefined && input.Frequency !== null) {\n    var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n    var node = new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n    var node = new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n\n  if (input.Expiration !== undefined && input.Expiration !== null) {\n    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Transitions !== undefined && input.Transitions !== null) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n  LifecycleRuleFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLifecycleRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n\n  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n    var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n\n  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n    var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetrics = function (input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n  MetricsFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n\n  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.VersionId !== undefined && input.VersionId !== null) {\n    var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlObjectIdentifier(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n\n  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n    var node = new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rule !== undefined && input.Rule !== null) {\n    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n\n  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n\n  if (input.S3 !== undefined && input.S3 !== null) {\n    var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwner = function (input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControls = function (input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControls\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n\n  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n    var node = new __XmlNode(\"ObjectOwnership\").addChildNode(new __XmlText(input.ObjectOwnership)).withName(\"ObjectOwnership\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlParquetInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n\n  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QueueArn !== undefined && input.QueueArn !== null) {\n    var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlQueueConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlRedirect = function (input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n    var node = new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicaModifications = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicaModifications\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicaModificationsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n\n  if (input.Role !== undefined && input.Role !== null) {\n    var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Priority !== undefined && input.Priority !== null) {\n    var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n  ReplicationRuleFilter.visit(input, {\n    Prefix: function (value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function (value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function (value) {\n      var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function (name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlReplicationRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Time !== undefined && input.Time !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n\n  if (input.Minutes !== undefined && input.Minutes !== null) {\n    var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n\n  if (input.Payer !== undefined && input.Payer !== null) {\n    var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n\n  if (input.Enabled !== undefined && input.Enabled !== null) {\n    var node = new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Description !== undefined && input.Description !== null) {\n    var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n\n  if (input.Condition !== undefined && input.Condition !== null) {\n    var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Redirect !== undefined && input.Redirect !== null) {\n    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlRoutingRule(entry, context);\n    return node.withName(\"RoutingRule\");\n  });\n};\n\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n\n  if (input.FilterRules !== undefined && input.FilterRules !== null) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlS3Location = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n\n  if (input.BucketName !== undefined && input.BucketName !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CannedACL !== undefined && input.CannedACL !== null) {\n    var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n\n  if (input.Tagging !== undefined && input.Tagging !== null) {\n    var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlScanRange = function (input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n\n  if (input.Start !== undefined && input.Start !== null) {\n    var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.End !== undefined && input.End !== null) {\n    var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n\n  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n    var node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Expression !== undefined && input.Expression !== null) {\n    var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n\n  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n\n  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n    var node = new __XmlNode(\"BucketKeyEnabled\").addChildNode(new __XmlText(String(input.BucketKeyEnabled))).withName(\"BucketKeyEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n\n  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n    var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n\n  if (input.KeyId !== undefined && input.KeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSES3 = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n\n  if (input.DataExport !== undefined && input.DataExport !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n\n  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n    var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTag = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagging = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n\n  if (input.TagSet !== undefined && input.TagSet !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagSet = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTag(entry, context);\n    return node.withName(\"Tag\");\n  });\n};\n\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTargetGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlTiering = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tiering\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"IntelligentTieringDays\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessTier !== undefined && input.AccessTier !== null) {\n    var node = new __XmlNode(\"IntelligentTieringAccessTier\").addChildNode(new __XmlText(input.AccessTier)).withName(\"AccessTier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTieringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTiering(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TopicArn !== undefined && input.TopicArn !== null) {\n    var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTopicConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTransitionList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlMetadataEntry(entry, context);\n    return node.withName(\"MetadataEntry\");\n  });\n};\n\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n\n  if (input.MFADelete !== undefined && input.MFADelete !== null) {\n    var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n\n  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n\n  return bodyNode;\n};\n\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n  var contents = {\n    DaysAfterInitiation: undefined\n  };\n\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n  var contents = {\n    Owner: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = output[\"Owner\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    StorageClassAnalysis: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n  var contents = {\n    Format: undefined,\n    BucketAccountId: undefined,\n    Bucket: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = output[\"BucketAccountId\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBucket = function (output, context) {\n  var contents = {\n    Name: undefined,\n    CreationDate: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = new Date(output[\"CreationDate\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBuckets = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlBucket(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCommonPrefix(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCondition = function (output, context) {\n  var contents = {\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n  }\n\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n  var contents = {\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n\n  if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n  }\n\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n\n  if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n  }\n\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n  }\n\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n\n  if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n  }\n\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCORSRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n  var contents = {\n    Mode: undefined,\n    Days: undefined,\n    Years: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = parseInt(output[\"Years\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n  }\n\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeletedObject(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n  var contents = {\n    Owner: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDestination = function (output, context) {\n  var contents = {\n    Bucket: undefined,\n    Account: undefined,\n    StorageClass: undefined,\n    AccessControlTranslation: undefined,\n    EncryptionConfiguration: undefined,\n    ReplicationTime: undefined,\n    Metrics: undefined\n  };\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = output[\"Account\"];\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n  var contents = {\n    ReplicaKmsKeyID: undefined\n  };\n\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Error = function (output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    Code: undefined,\n    Message: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = output[\"Code\"];\n  }\n\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = output[\"Message\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrors = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Error(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlEventList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n  var contents = {\n    Name: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlFilterRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlGrant = function (output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrantee = function (output, context) {\n  var contents = {\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    URI: undefined,\n    Type: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = output[\"EmailAddress\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = output[\"URI\"];\n  }\n\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = output[\"xsi:type\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrants = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n  var contents = {\n    Suffix: undefined\n  };\n\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = output[\"Suffix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInitiator = function (output, context) {\n  var contents = {\n    ID: undefined,\n    DisplayName: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Tierings: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output.Tiering === \"\") {\n    contents.Tierings = [];\n  }\n\n  if (output[\"Tiering\"] !== undefined) {\n    contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIntelligentTieringFilter = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tag: undefined,\n    And: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n  var contents = {\n    Destination: undefined,\n    IsEnabled: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n  }\n\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n  }\n\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlInventoryConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n  var contents = {\n    SSES3: undefined,\n    SSEKMS: undefined\n  };\n\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n  var contents = {\n    AccountId: undefined,\n    Bucket: undefined,\n    Format: undefined,\n    Prefix: undefined,\n    Encryption: undefined\n  };\n\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = output[\"AccountId\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n  var contents = {\n    Frequency: undefined\n  };\n\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = output[\"Frequency\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    LambdaFunctionArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = output[\"CloudFunction\"];\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n  var contents = {\n    Expiration: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Transitions: undefined,\n    NoncurrentVersionTransitions: undefined,\n    NoncurrentVersionExpiration: undefined,\n    AbortIncompleteMultipartUpload: undefined\n  };\n\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n\n  if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n  }\n\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLifecycleRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n  var contents = {\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = output[\"TargetBucket\"];\n  }\n\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n  }\n\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = output[\"TargetPrefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetrics = function (output, context) {\n  var contents = {\n    Status: undefined,\n    EventThreshold: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMetricsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n  var contents = {\n    UploadId: undefined,\n    Key: undefined,\n    Initiated: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n    Initiator: undefined\n  };\n\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = output[\"UploadId\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = new Date(output[\"Initiated\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMultipartUpload(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n  var contents = {\n    NoncurrentDays: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Object = function (output, context) {\n  var contents = {\n    Key: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Object(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n  var contents = {\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n  var contents = {\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n  var contents = {\n    DefaultRetention: undefined\n  };\n\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n  var contents = {\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlObjectVersion(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlOwner = function (output, context) {\n  var contents = {\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControls = function (output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRule = function (output, context) {\n  var contents = {\n    ObjectOwnership: undefined\n  };\n\n  if (output[\"ObjectOwnership\"] !== undefined) {\n    contents.ObjectOwnership = output[\"ObjectOwnership\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPart = function (output, context) {\n  var contents = {\n    PartNumber: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined\n  };\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = parseInt(output[\"PartNumber\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlParts = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlPart(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n  var contents = {\n    IsPublic: undefined\n  };\n\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = output[\"IsPublic\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n  var contents = {\n    BlockPublicAcls: undefined,\n    IgnorePublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    RestrictPublicBuckets: undefined\n  };\n\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n  }\n\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n  }\n\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n  }\n\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    QueueArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = output[\"Queue\"];\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlQueueConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlRedirect = function (output, context) {\n  var contents = {\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n  }\n\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n  var contents = {\n    HostName: undefined,\n    Protocol: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicaModifications = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n  var contents = {\n    Role: undefined,\n    Rules: undefined\n  };\n\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = output[\"Role\"];\n  }\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n  var contents = {\n    ID: undefined,\n    Priority: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    SourceSelectionCriteria: undefined,\n    ExistingObjectReplication: undefined,\n    Destination: undefined,\n    DeleteMarkerReplication: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = parseInt(output[\"Priority\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlReplicationRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n  var contents = {\n    Status: undefined,\n    Time: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n  var contents = {\n    Minutes: undefined\n  };\n\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = parseInt(output[\"Minutes\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n  var contents = {\n    Condition: undefined,\n    Redirect: undefined\n  };\n\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlRoutingRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n  var contents = {\n    FilterRules: undefined\n  };\n\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n\n  if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n  var contents = {\n    SSEAlgorithm: undefined,\n    KMSMasterKeyID: undefined\n  };\n\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n  }\n\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n  var contents = {\n    ApplyServerSideEncryptionByDefault: undefined,\n    BucketKeyEnabled: undefined\n  };\n\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n\n  if (output[\"BucketKeyEnabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output[\"BucketKeyEnabled\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n  var contents = {\n    SseKmsEncryptedObjects: undefined,\n    ReplicaModifications: undefined\n  };\n\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n\n  if (output[\"ReplicaModifications\"] !== undefined) {\n    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n  var contents = {\n    KeyId: undefined\n  };\n\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = output[\"KeyId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n  var contents = {\n    DataExport: undefined\n  };\n\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n  var contents = {\n    OutputSchemaVersion: undefined,\n    Destination: undefined\n  };\n\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTag = function (output, context) {\n  var contents = {\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTagSet = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTag(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTargetGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTiering = function (output, context) {\n  var contents = {\n    Days: undefined,\n    AccessTier: undefined\n  };\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = output[\"AccessTier\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTieringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTiering(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n  var contents = {\n    Id: undefined,\n    TopicArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = output[\"Topic\"];\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTopicConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTransition = function (output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTransition(entry, context);\n  });\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar decodeEscapedXML = function (str) {\n  return str.replace(/&amp;/g, \"&\").replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"').replace(/&gt;/g, \">\").replace(/&lt;/g, \"<\");\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        tagValueProcessor: function (val, tagName) {\n          return decodeEscapedXML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestXmlErrorCode = function (output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["AnalyticsFilter","LifecycleRuleFilter","MetricsFilter","ReplicationRuleFilter","HttpRequest","__HttpRequest","dateToUtcString","__dateToUtcString","extendedEncodeURIComponent","__extendedEncodeURIComponent","getArrayIfSingleItem","__getArrayIfSingleItem","getValueFromTextNode","__getValueFromTextNode","XmlNode","__XmlNode","XmlText","__XmlText","parse","xmlParse","serializeAws_restXmlAbortMultipartUploadCommand","input","context","headers","isSerializableHeaderValue","RequestPayer","ExpectedBucketOwner","resolvedPath","Bucket","undefined","labelValue","length","Error","replace","Key","split","map","segment","join","query","UploadId","uploadId","endpoint","_a","_c","hostname","_b","protocol","port","method","path","body","serializeAws_restXmlCompleteMultipartUploadCommand","MultipartUpload","contents","serializeAws_restXmlCompletedMultipartUpload","addAttribute","toString","serializeAws_restXmlCopyObjectCommand","ACL","CacheControl","ContentDisposition","ContentEncoding","ContentLanguage","ContentType","CopySource","CopySourceIfMatch","CopySourceIfModifiedSince","CopySourceIfNoneMatch","CopySourceIfUnmodifiedSince","Expires","expires","GrantFullControl","GrantRead","GrantReadACP","GrantWriteACP","MetadataDirective","TaggingDirective","ServerSideEncryption","StorageClass","WebsiteRedirectLocation","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","SSEKMSEncryptionContext","BucketKeyEnabled","CopySourceSSECustomerAlgorithm","CopySourceSSECustomerKey","CopySourceSSECustomerKeyMD5","Tagging","ObjectLockMode","ObjectLockRetainUntilDate","toISOString","ObjectLockLegalHoldStatus","ExpectedSourceBucketOwner","Metadata","Object","keys","reduce","acc","suffix","toLowerCase","serializeAws_restXmlCreateBucketCommand","GrantWrite","ObjectLockEnabledForBucket","CreateBucketConfiguration","serializeAws_restXmlCreateBucketConfiguration","serializeAws_restXmlCreateMultipartUploadCommand","uploads","serializeAws_restXmlDeleteBucketCommand","serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand","analytics","Id","id","serializeAws_restXmlDeleteBucketCorsCommand","cors","serializeAws_restXmlDeleteBucketEncryptionCommand","encryption","serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand","serializeAws_restXmlDeleteBucketInventoryConfigurationCommand","inventory","serializeAws_restXmlDeleteBucketLifecycleCommand","lifecycle","serializeAws_restXmlDeleteBucketMetricsConfigurationCommand","metrics","serializeAws_restXmlDeleteBucketOwnershipControlsCommand","ownershipControls","serializeAws_restXmlDeleteBucketPolicyCommand","policy","serializeAws_restXmlDeleteBucketReplicationCommand","replication","serializeAws_restXmlDeleteBucketTaggingCommand","tagging","serializeAws_restXmlDeleteBucketWebsiteCommand","website","serializeAws_restXmlDeleteObjectCommand","MFA","BypassGovernanceRetention","VersionId","versionId","serializeAws_restXmlDeleteObjectsCommand","delete","Delete","serializeAws_restXmlDelete","serializeAws_restXmlDeleteObjectTaggingCommand","serializeAws_restXmlDeletePublicAccessBlockCommand","publicAccessBlock","serializeAws_restXmlGetBucketAccelerateConfigurationCommand","accelerate","serializeAws_restXmlGetBucketAclCommand","acl","serializeAws_restXmlGetBucketAnalyticsConfigurationCommand","serializeAws_restXmlGetBucketCorsCommand","serializeAws_restXmlGetBucketEncryptionCommand","serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand","serializeAws_restXmlGetBucketInventoryConfigurationCommand","serializeAws_restXmlGetBucketLifecycleConfigurationCommand","serializeAws_restXmlGetBucketLocationCommand","location","serializeAws_restXmlGetBucketLoggingCommand","logging","serializeAws_restXmlGetBucketMetricsConfigurationCommand","serializeAws_restXmlGetBucketNotificationConfigurationCommand","notification","serializeAws_restXmlGetBucketOwnershipControlsCommand","serializeAws_restXmlGetBucketPolicyCommand","serializeAws_restXmlGetBucketPolicyStatusCommand","policyStatus","serializeAws_restXmlGetBucketReplicationCommand","serializeAws_restXmlGetBucketRequestPaymentCommand","requestPayment","serializeAws_restXmlGetBucketTaggingCommand","serializeAws_restXmlGetBucketVersioningCommand","versioning","serializeAws_restXmlGetBucketWebsiteCommand","serializeAws_restXmlGetObjectCommand","IfMatch","IfModifiedSince","IfNoneMatch","IfUnmodifiedSince","Range","range","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","ResponseExpires","PartNumber","partNumber","serializeAws_restXmlGetObjectAclCommand","serializeAws_restXmlGetObjectLegalHoldCommand","serializeAws_restXmlGetObjectLockConfigurationCommand","serializeAws_restXmlGetObjectRetentionCommand","retention","serializeAws_restXmlGetObjectTaggingCommand","serializeAws_restXmlGetObjectTorrentCommand","torrent","serializeAws_restXmlGetPublicAccessBlockCommand","serializeAws_restXmlHeadBucketCommand","serializeAws_restXmlHeadObjectCommand","serializeAws_restXmlListBucketAnalyticsConfigurationsCommand","ContinuationToken","serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand","serializeAws_restXmlListBucketInventoryConfigurationsCommand","serializeAws_restXmlListBucketMetricsConfigurationsCommand","serializeAws_restXmlListBucketsCommand","serializeAws_restXmlListMultipartUploadsCommand","Delimiter","delimiter","EncodingType","KeyMarker","MaxUploads","Prefix","prefix","UploadIdMarker","serializeAws_restXmlListObjectsCommand","Marker","marker","MaxKeys","serializeAws_restXmlListObjectsV2Command","FetchOwner","StartAfter","serializeAws_restXmlListObjectVersionsCommand","versions","VersionIdMarker","serializeAws_restXmlListPartsCommand","MaxParts","PartNumberMarker","serializeAws_restXmlPutBucketAccelerateConfigurationCommand","AccelerateConfiguration","serializeAws_restXmlAccelerateConfiguration","serializeAws_restXmlPutBucketAclCommand","ContentMD5","AccessControlPolicy","serializeAws_restXmlAccessControlPolicy","serializeAws_restXmlPutBucketAnalyticsConfigurationCommand","AnalyticsConfiguration","serializeAws_restXmlAnalyticsConfiguration","serializeAws_restXmlPutBucketCorsCommand","CORSConfiguration","serializeAws_restXmlCORSConfiguration","serializeAws_restXmlPutBucketEncryptionCommand","ServerSideEncryptionConfiguration","serializeAws_restXmlServerSideEncryptionConfiguration","serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand","IntelligentTieringConfiguration","serializeAws_restXmlIntelligentTieringConfiguration","serializeAws_restXmlPutBucketInventoryConfigurationCommand","InventoryConfiguration","serializeAws_restXmlInventoryConfiguration","serializeAws_restXmlPutBucketLifecycleConfigurationCommand","LifecycleConfiguration","serializeAws_restXmlBucketLifecycleConfiguration","serializeAws_restXmlPutBucketLoggingCommand","BucketLoggingStatus","serializeAws_restXmlBucketLoggingStatus","serializeAws_restXmlPutBucketMetricsConfigurationCommand","MetricsConfiguration","serializeAws_restXmlMetricsConfiguration","serializeAws_restXmlPutBucketNotificationConfigurationCommand","NotificationConfiguration","serializeAws_restXmlNotificationConfiguration","serializeAws_restXmlPutBucketOwnershipControlsCommand","OwnershipControls","serializeAws_restXmlOwnershipControls","serializeAws_restXmlPutBucketPolicyCommand","ConfirmRemoveSelfBucketAccess","Policy","serializeAws_restXmlPutBucketReplicationCommand","Token","ReplicationConfiguration","serializeAws_restXmlReplicationConfiguration","serializeAws_restXmlPutBucketRequestPaymentCommand","RequestPaymentConfiguration","serializeAws_restXmlRequestPaymentConfiguration","serializeAws_restXmlPutBucketTaggingCommand","serializeAws_restXmlTagging","serializeAws_restXmlPutBucketVersioningCommand","VersioningConfiguration","serializeAws_restXmlVersioningConfiguration","serializeAws_restXmlPutBucketWebsiteCommand","WebsiteConfiguration","serializeAws_restXmlWebsiteConfiguration","serializeAws_restXmlPutObjectCommand","ContentLength","Body","serializeAws_restXmlPutObjectAclCommand","serializeAws_restXmlPutObjectLegalHoldCommand","LegalHold","serializeAws_restXmlObjectLockLegalHold","serializeAws_restXmlPutObjectLockConfigurationCommand","ObjectLockConfiguration","serializeAws_restXmlObjectLockConfiguration","serializeAws_restXmlPutObjectRetentionCommand","Retention","serializeAws_restXmlObjectLockRetention","serializeAws_restXmlPutObjectTaggingCommand","serializeAws_restXmlPutPublicAccessBlockCommand","PublicAccessBlockConfiguration","serializeAws_restXmlPublicAccessBlockConfiguration","serializeAws_restXmlRestoreObjectCommand","restore","RestoreRequest","serializeAws_restXmlRestoreRequest","serializeAws_restXmlSelectObjectContentCommand","select","bodyNode","Expression","node","addChildNode","withName","ExpressionType","InputSerialization","serializeAws_restXmlInputSerialization","OutputSerialization","serializeAws_restXmlOutputSerialization","RequestProgress","serializeAws_restXmlRequestProgress","ScanRange","serializeAws_restXmlScanRange","serializeAws_restXmlUploadPartCommand","serializeAws_restXmlUploadPartCopyCommand","CopySourceRange","deserializeAws_restXmlAbortMultipartUploadCommand","output","statusCode","deserializeAws_restXmlAbortMultipartUploadCommandError","$metadata","deserializeMetadata","RequestCharged","collectBody","Promise","resolve","parseBody","parsedOutput","_d","_e","errorCode","loadRestXmlErrorCode","deserializeAws_restXmlNoSuchUploadResponse","response","name","parsedBody","code","Code","__assign","message","Message","$fault","reject","assign","deserializeAws_restXmlCompleteMultipartUploadCommand","deserializeAws_restXmlCompleteMultipartUploadCommandError","ETag","Expiration","Location","data","deserializeAws_restXmlCopyObjectCommand","deserializeAws_restXmlCopyObjectCommandError","CopyObjectResult","CopySourceVersionId","deserializeAws_restXmlCopyObjectResult","deserializeAws_restXmlObjectNotInActiveTierErrorResponse","deserializeAws_restXmlCreateBucketCommand","deserializeAws_restXmlCreateBucketCommandError","_f","deserializeAws_restXmlBucketAlreadyExistsResponse","deserializeAws_restXmlBucketAlreadyOwnedByYouResponse","deserializeAws_restXmlCreateMultipartUploadCommand","deserializeAws_restXmlCreateMultipartUploadCommandError","AbortDate","AbortRuleId","Date","deserializeAws_restXmlDeleteBucketCommand","deserializeAws_restXmlDeleteBucketCommandError","deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand","deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlDeleteBucketCorsCommand","deserializeAws_restXmlDeleteBucketCorsCommandError","deserializeAws_restXmlDeleteBucketEncryptionCommand","deserializeAws_restXmlDeleteBucketEncryptionCommandError","deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand","deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError","deserializeAws_restXmlDeleteBucketLifecycleCommand","deserializeAws_restXmlDeleteBucketLifecycleCommandError","deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand","deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError","deserializeAws_restXmlDeleteBucketOwnershipControlsCommand","deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError","deserializeAws_restXmlDeleteBucketPolicyCommand","deserializeAws_restXmlDeleteBucketPolicyCommandError","deserializeAws_restXmlDeleteBucketReplicationCommand","deserializeAws_restXmlDeleteBucketReplicationCommandError","deserializeAws_restXmlDeleteBucketTaggingCommand","deserializeAws_restXmlDeleteBucketTaggingCommandError","deserializeAws_restXmlDeleteBucketWebsiteCommand","deserializeAws_restXmlDeleteBucketWebsiteCommandError","deserializeAws_restXmlDeleteObjectCommand","deserializeAws_restXmlDeleteObjectCommandError","DeleteMarker","deserializeAws_restXmlDeleteObjectsCommand","deserializeAws_restXmlDeleteObjectsCommandError","Deleted","Errors","deserializeAws_restXmlDeletedObjects","deserializeAws_restXmlErrors","deserializeAws_restXmlDeleteObjectTaggingCommand","deserializeAws_restXmlDeleteObjectTaggingCommandError","deserializeAws_restXmlDeletePublicAccessBlockCommand","deserializeAws_restXmlDeletePublicAccessBlockCommandError","deserializeAws_restXmlGetBucketAccelerateConfigurationCommand","deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError","Status","deserializeAws_restXmlGetBucketAclCommand","deserializeAws_restXmlGetBucketAclCommandError","Grants","Owner","AccessControlList","deserializeAws_restXmlGrants","deserializeAws_restXmlOwner","deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand","deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlAnalyticsConfiguration","deserializeAws_restXmlGetBucketCorsCommand","deserializeAws_restXmlGetBucketCorsCommandError","CORSRules","CORSRule","deserializeAws_restXmlCORSRules","deserializeAws_restXmlGetBucketEncryptionCommand","deserializeAws_restXmlGetBucketEncryptionCommandError","deserializeAws_restXmlServerSideEncryptionConfiguration","deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlIntelligentTieringConfiguration","deserializeAws_restXmlGetBucketInventoryConfigurationCommand","deserializeAws_restXmlGetBucketInventoryConfigurationCommandError","deserializeAws_restXmlInventoryConfiguration","deserializeAws_restXmlGetBucketLifecycleConfigurationCommand","deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError","Rules","Rule","deserializeAws_restXmlLifecycleRules","deserializeAws_restXmlGetBucketLocationCommand","deserializeAws_restXmlGetBucketLocationCommandError","LocationConstraint","deserializeAws_restXmlGetBucketLoggingCommand","deserializeAws_restXmlGetBucketLoggingCommandError","LoggingEnabled","deserializeAws_restXmlLoggingEnabled","deserializeAws_restXmlGetBucketMetricsConfigurationCommand","deserializeAws_restXmlGetBucketMetricsConfigurationCommandError","deserializeAws_restXmlMetricsConfiguration","deserializeAws_restXmlGetBucketNotificationConfigurationCommand","deserializeAws_restXmlGetBucketNotificationConfigurationCommandError","LambdaFunctionConfigurations","QueueConfigurations","TopicConfigurations","CloudFunctionConfiguration","deserializeAws_restXmlLambdaFunctionConfigurationList","QueueConfiguration","deserializeAws_restXmlQueueConfigurationList","TopicConfiguration","deserializeAws_restXmlTopicConfigurationList","deserializeAws_restXmlGetBucketOwnershipControlsCommand","deserializeAws_restXmlGetBucketOwnershipControlsCommandError","deserializeAws_restXmlOwnershipControls","deserializeAws_restXmlGetBucketPolicyCommand","deserializeAws_restXmlGetBucketPolicyCommandError","deserializeAws_restXmlGetBucketPolicyStatusCommand","deserializeAws_restXmlGetBucketPolicyStatusCommandError","PolicyStatus","deserializeAws_restXmlPolicyStatus","deserializeAws_restXmlGetBucketReplicationCommand","deserializeAws_restXmlGetBucketReplicationCommandError","deserializeAws_restXmlReplicationConfiguration","deserializeAws_restXmlGetBucketRequestPaymentCommand","deserializeAws_restXmlGetBucketRequestPaymentCommandError","Payer","deserializeAws_restXmlGetBucketTaggingCommand","deserializeAws_restXmlGetBucketTaggingCommandError","TagSet","deserializeAws_restXmlTagSet","deserializeAws_restXmlGetBucketVersioningCommand","deserializeAws_restXmlGetBucketVersioningCommandError","MFADelete","deserializeAws_restXmlGetBucketWebsiteCommand","deserializeAws_restXmlGetBucketWebsiteCommandError","ErrorDocument","IndexDocument","RedirectAllRequestsTo","RoutingRules","deserializeAws_restXmlErrorDocument","deserializeAws_restXmlIndexDocument","deserializeAws_restXmlRedirectAllRequestsTo","deserializeAws_restXmlRoutingRules","deserializeAws_restXmlGetObjectCommand","deserializeAws_restXmlGetObjectCommandError","AcceptRanges","ContentRange","LastModified","MissingMeta","PartsCount","ReplicationStatus","Restore","TagCount","parseInt","forEach","header","startsWith","substring","deserializeAws_restXmlInvalidObjectStateResponse","deserializeAws_restXmlNoSuchKeyResponse","deserializeAws_restXmlGetObjectAclCommand","deserializeAws_restXmlGetObjectAclCommandError","deserializeAws_restXmlGetObjectLegalHoldCommand","deserializeAws_restXmlGetObjectLegalHoldCommandError","deserializeAws_restXmlObjectLockLegalHold","deserializeAws_restXmlGetObjectLockConfigurationCommand","deserializeAws_restXmlGetObjectLockConfigurationCommandError","deserializeAws_restXmlObjectLockConfiguration","deserializeAws_restXmlGetObjectRetentionCommand","deserializeAws_restXmlGetObjectRetentionCommandError","deserializeAws_restXmlObjectLockRetention","deserializeAws_restXmlGetObjectTaggingCommand","deserializeAws_restXmlGetObjectTaggingCommandError","deserializeAws_restXmlGetObjectTorrentCommand","deserializeAws_restXmlGetObjectTorrentCommandError","deserializeAws_restXmlGetPublicAccessBlockCommand","deserializeAws_restXmlGetPublicAccessBlockCommandError","deserializeAws_restXmlPublicAccessBlockConfiguration","deserializeAws_restXmlHeadBucketCommand","deserializeAws_restXmlHeadBucketCommandError","deserializeAws_restXmlNoSuchBucketResponse","deserializeAws_restXmlHeadObjectCommand","deserializeAws_restXmlHeadObjectCommandError","ArchiveStatus","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError","AnalyticsConfigurationList","IsTruncated","NextContinuationToken","deserializeAws_restXmlAnalyticsConfigurationList","deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand","deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError","IntelligentTieringConfigurationList","deserializeAws_restXmlIntelligentTieringConfigurationList","deserializeAws_restXmlListBucketInventoryConfigurationsCommand","deserializeAws_restXmlListBucketInventoryConfigurationsCommandError","InventoryConfigurationList","deserializeAws_restXmlInventoryConfigurationList","deserializeAws_restXmlListBucketMetricsConfigurationsCommand","deserializeAws_restXmlListBucketMetricsConfigurationsCommandError","MetricsConfigurationList","deserializeAws_restXmlMetricsConfigurationList","deserializeAws_restXmlListBucketsCommand","deserializeAws_restXmlListBucketsCommandError","Buckets","deserializeAws_restXmlBuckets","deserializeAws_restXmlListMultipartUploadsCommand","deserializeAws_restXmlListMultipartUploadsCommandError","CommonPrefixes","NextKeyMarker","NextUploadIdMarker","Uploads","deserializeAws_restXmlCommonPrefixList","Upload","deserializeAws_restXmlMultipartUploadList","deserializeAws_restXmlListObjectsCommand","deserializeAws_restXmlListObjectsCommandError","Contents","Name","NextMarker","deserializeAws_restXmlObjectList","deserializeAws_restXmlListObjectsV2Command","deserializeAws_restXmlListObjectsV2CommandError","KeyCount","deserializeAws_restXmlListObjectVersionsCommand","deserializeAws_restXmlListObjectVersionsCommandError","DeleteMarkers","NextVersionIdMarker","Versions","deserializeAws_restXmlDeleteMarkers","Version","deserializeAws_restXmlObjectVersionList","deserializeAws_restXmlListPartsCommand","deserializeAws_restXmlListPartsCommandError","Initiator","NextPartNumberMarker","Parts","deserializeAws_restXmlInitiator","Part","deserializeAws_restXmlParts","deserializeAws_restXmlPutBucketAccelerateConfigurationCommand","deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError","deserializeAws_restXmlPutBucketAclCommand","deserializeAws_restXmlPutBucketAclCommandError","deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand","deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError","deserializeAws_restXmlPutBucketCorsCommand","deserializeAws_restXmlPutBucketCorsCommandError","deserializeAws_restXmlPutBucketEncryptionCommand","deserializeAws_restXmlPutBucketEncryptionCommandError","deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand","deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError","deserializeAws_restXmlPutBucketInventoryConfigurationCommand","deserializeAws_restXmlPutBucketInventoryConfigurationCommandError","deserializeAws_restXmlPutBucketLifecycleConfigurationCommand","deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError","deserializeAws_restXmlPutBucketLoggingCommand","deserializeAws_restXmlPutBucketLoggingCommandError","deserializeAws_restXmlPutBucketMetricsConfigurationCommand","deserializeAws_restXmlPutBucketMetricsConfigurationCommandError","deserializeAws_restXmlPutBucketNotificationConfigurationCommand","deserializeAws_restXmlPutBucketNotificationConfigurationCommandError","deserializeAws_restXmlPutBucketOwnershipControlsCommand","deserializeAws_restXmlPutBucketOwnershipControlsCommandError","deserializeAws_restXmlPutBucketPolicyCommand","deserializeAws_restXmlPutBucketPolicyCommandError","deserializeAws_restXmlPutBucketReplicationCommand","deserializeAws_restXmlPutBucketReplicationCommandError","deserializeAws_restXmlPutBucketRequestPaymentCommand","deserializeAws_restXmlPutBucketRequestPaymentCommandError","deserializeAws_restXmlPutBucketTaggingCommand","deserializeAws_restXmlPutBucketTaggingCommandError","deserializeAws_restXmlPutBucketVersioningCommand","deserializeAws_restXmlPutBucketVersioningCommandError","deserializeAws_restXmlPutBucketWebsiteCommand","deserializeAws_restXmlPutBucketWebsiteCommandError","deserializeAws_restXmlPutObjectCommand","deserializeAws_restXmlPutObjectCommandError","deserializeAws_restXmlPutObjectAclCommand","deserializeAws_restXmlPutObjectAclCommandError","deserializeAws_restXmlPutObjectLegalHoldCommand","deserializeAws_restXmlPutObjectLegalHoldCommandError","deserializeAws_restXmlPutObjectLockConfigurationCommand","deserializeAws_restXmlPutObjectLockConfigurationCommandError","deserializeAws_restXmlPutObjectRetentionCommand","deserializeAws_restXmlPutObjectRetentionCommandError","deserializeAws_restXmlPutObjectTaggingCommand","deserializeAws_restXmlPutObjectTaggingCommandError","deserializeAws_restXmlPutPublicAccessBlockCommand","deserializeAws_restXmlPutPublicAccessBlockCommandError","deserializeAws_restXmlRestoreObjectCommand","deserializeAws_restXmlRestoreObjectCommandError","RestoreOutputPath","deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse","deserializeAws_restXmlSelectObjectContentCommand","deserializeAws_restXmlSelectObjectContentCommandError","Payload","eventStreamMarshaller","deserialize","event","eventName","eventHeaders","entries","accummulator","curr","value","eventMessage","parsedEvent","deserializeAws_restXmlSelectObjectContentEventStream_event","deserializeAws_restXmlUploadPartCommand","deserializeAws_restXmlUploadPartCommandError","deserializeAws_restXmlUploadPartCopyCommand","deserializeAws_restXmlUploadPartCopyCommandError","CopyPartResult","deserializeAws_restXmlCopyPartResult","deserializeAws_restXmlRecordsEvent_event","deserializeAws_restXmlStatsEvent_event","deserializeAws_restXmlProgressEvent_event","deserializeAws_restXmlContinuationEvent_event","deserializeAws_restXmlEndEvent_event","$unknown","Details","AccessTier","serializeAws_restXmlAbortIncompleteMultipartUpload","DaysAfterInitiation","String","nodes","serializeAws_restXmlGrants","containerNode_1","serializeAws_restXmlOwner","serializeAws_restXmlAccessControlTranslation","serializeAws_restXmlAllowedHeaders","filter","e","entry","serializeAws_restXmlAllowedMethods","serializeAws_restXmlAllowedOrigins","serializeAws_restXmlAnalyticsAndOperator","Tags","serializeAws_restXmlTagSet","Filter","serializeAws_restXmlAnalyticsFilter","StorageClassAnalysis","serializeAws_restXmlStorageClassAnalysis","serializeAws_restXmlAnalyticsExportDestination","S3BucketDestination","serializeAws_restXmlAnalyticsS3BucketDestination","visit","Tag","serializeAws_restXmlTag","And","_","Format","BucketAccountId","serializeAws_restXmlLifecycleRules","serializeAws_restXmlLoggingEnabled","serializeAws_restXmlCompletedPartList","serializeAws_restXmlCompletedPart","serializeAws_restXmlCondition","HttpErrorCodeReturnedEquals","KeyPrefixEquals","serializeAws_restXmlCORSRules","serializeAws_restXmlCORSRule","AllowedHeaders","AllowedMethods","AllowedOrigins","ExposeHeaders","serializeAws_restXmlExposeHeaders","MaxAgeSeconds","serializeAws_restXmlCSVInput","FileHeaderInfo","Comments","QuoteEscapeCharacter","RecordDelimiter","FieldDelimiter","QuoteCharacter","AllowQuotedRecordDelimiter","serializeAws_restXmlCSVOutput","QuoteFields","serializeAws_restXmlDefaultRetention","Mode","Days","Years","Objects","serializeAws_restXmlObjectIdentifierList","Quiet","serializeAws_restXmlDeleteMarkerReplication","serializeAws_restXmlDestination","Account","AccessControlTranslation","EncryptionConfiguration","serializeAws_restXmlEncryptionConfiguration","ReplicationTime","serializeAws_restXmlReplicationTime","Metrics","serializeAws_restXmlMetrics","serializeAws_restXmlEncryption","EncryptionType","KMSKeyId","KMSContext","ReplicaKmsKeyID","serializeAws_restXmlErrorDocument","serializeAws_restXmlEventList","serializeAws_restXmlExistingObjectReplication","serializeAws_restXmlFilterRule","Value","serializeAws_restXmlFilterRuleList","serializeAws_restXmlGlacierJobParameters","Tier","serializeAws_restXmlGrant","Grantee","serializeAws_restXmlGrantee","Permission","DisplayName","EmailAddress","ID","URI","Type","serializeAws_restXmlIndexDocument","Suffix","CSV","CompressionType","JSON","serializeAws_restXmlJSONInput","Parquet","serializeAws_restXmlParquetInput","serializeAws_restXmlIntelligentTieringAndOperator","serializeAws_restXmlIntelligentTieringFilter","Tierings","serializeAws_restXmlTieringList","Destination","serializeAws_restXmlInventoryDestination","IsEnabled","serializeAws_restXmlInventoryFilter","IncludedObjectVersions","OptionalFields","serializeAws_restXmlInventoryOptionalFields","containerNode_2","Schedule","serializeAws_restXmlInventorySchedule","serializeAws_restXmlInventoryS3BucketDestination","serializeAws_restXmlInventoryEncryption","SSES3","serializeAws_restXmlSSES3","SSEKMS","serializeAws_restXmlSSEKMS","AccountId","Encryption","Frequency","serializeAws_restXmlJSONOutput","serializeAws_restXmlLambdaFunctionConfiguration","LambdaFunctionArn","Events","serializeAws_restXmlNotificationConfigurationFilter","serializeAws_restXmlLambdaFunctionConfigurationList","serializeAws_restXmlLifecycleExpiration","ExpiredObjectDeleteMarker","serializeAws_restXmlLifecycleRule","serializeAws_restXmlLifecycleRuleFilter","Transitions","serializeAws_restXmlTransitionList","NoncurrentVersionTransitions","serializeAws_restXmlNoncurrentVersionTransitionList","NoncurrentVersionExpiration","serializeAws_restXmlNoncurrentVersionExpiration","AbortIncompleteMultipartUpload","serializeAws_restXmlLifecycleRuleAndOperator","TargetBucket","TargetGrants","serializeAws_restXmlTargetGrants","containerNode_3","TargetPrefix","serializeAws_restXmlMetadataEntry","EventThreshold","serializeAws_restXmlReplicationTimeValue","serializeAws_restXmlMetricsAndOperator","serializeAws_restXmlMetricsFilter","NoncurrentDays","serializeAws_restXmlNoncurrentVersionTransition","serializeAws_restXmlTopicConfigurationList","serializeAws_restXmlQueueConfigurationList","serializeAws_restXmlS3KeyFilter","serializeAws_restXmlObjectIdentifier","ObjectLockEnabled","serializeAws_restXmlObjectLockRule","RetainUntilDate","DefaultRetention","serializeAws_restXmlOutputLocation","S3","serializeAws_restXmlS3Location","serializeAws_restXmlOwnershipControlsRules","serializeAws_restXmlOwnershipControlsRule","ObjectOwnership","BlockPublicAcls","IgnorePublicAcls","BlockPublicPolicy","RestrictPublicBuckets","serializeAws_restXmlQueueConfiguration","QueueArn","serializeAws_restXmlRedirect","HostName","HttpRedirectCode","Protocol","ReplaceKeyPrefixWith","ReplaceKeyWith","serializeAws_restXmlRedirectAllRequestsTo","serializeAws_restXmlReplicaModifications","Role","serializeAws_restXmlReplicationRules","serializeAws_restXmlReplicationRule","Priority","serializeAws_restXmlReplicationRuleFilter","SourceSelectionCriteria","serializeAws_restXmlSourceSelectionCriteria","ExistingObjectReplication","DeleteMarkerReplication","serializeAws_restXmlReplicationRuleAndOperator","Time","Minutes","Enabled","GlacierJobParameters","Description","SelectParameters","serializeAws_restXmlSelectParameters","OutputLocation","serializeAws_restXmlRoutingRule","Condition","Redirect","serializeAws_restXmlRoutingRules","FilterRules","BucketName","CannedACL","containerNode_4","UserMetadata","serializeAws_restXmlUserMetadata","containerNode_5","Start","End","serializeAws_restXmlServerSideEncryptionByDefault","SSEAlgorithm","KMSMasterKeyID","serializeAws_restXmlServerSideEncryptionRules","serializeAws_restXmlServerSideEncryptionRule","ApplyServerSideEncryptionByDefault","SseKmsEncryptedObjects","serializeAws_restXmlSseKmsEncryptedObjects","ReplicaModifications","KeyId","DataExport","serializeAws_restXmlStorageClassAnalysisDataExport","OutputSchemaVersion","containerNode_6","serializeAws_restXmlTargetGrant","serializeAws_restXmlTiering","serializeAws_restXmlTopicConfiguration","TopicArn","serializeAws_restXmlTransition","containerNode_7","deserializeAws_restXmlAbortIncompleteMultipartUpload","deserializeAws_restXmlAccessControlTranslation","deserializeAws_restXmlAllowedHeaders","deserializeAws_restXmlAllowedMethods","deserializeAws_restXmlAllowedOrigins","deserializeAws_restXmlAnalyticsAndOperator","deserializeAws_restXmlAnalyticsFilter","deserializeAws_restXmlStorageClassAnalysis","deserializeAws_restXmlAnalyticsExportDestination","deserializeAws_restXmlAnalyticsS3BucketDestination","deserializeAws_restXmlTag","deserializeAws_restXmlBucket","CreationDate","deserializeAws_restXmlCommonPrefix","deserializeAws_restXmlCondition","deserializeAws_restXmlCORSRule","AllowedHeader","AllowedMethod","AllowedOrigin","ExposeHeader","deserializeAws_restXmlExposeHeaders","deserializeAws_restXmlDefaultRetention","deserializeAws_restXmlDeletedObject","DeleteMarkerVersionId","deserializeAws_restXmlDeleteMarkerEntry","IsLatest","deserializeAws_restXmlDeleteMarkerReplication","deserializeAws_restXmlDestination","deserializeAws_restXmlEncryptionConfiguration","deserializeAws_restXmlReplicationTime","deserializeAws_restXmlMetrics","deserializeAws_restXml_Error","deserializeAws_restXmlEventList","deserializeAws_restXmlExistingObjectReplication","deserializeAws_restXmlFilterRule","deserializeAws_restXmlFilterRuleList","deserializeAws_restXmlGrant","deserializeAws_restXmlGrantee","deserializeAws_restXmlIntelligentTieringAndOperator","deserializeAws_restXmlIntelligentTieringFilter","Tiering","deserializeAws_restXmlTieringList","deserializeAws_restXmlInventoryDestination","deserializeAws_restXmlInventoryFilter","deserializeAws_restXmlInventoryOptionalFields","deserializeAws_restXmlInventorySchedule","deserializeAws_restXmlInventoryS3BucketDestination","deserializeAws_restXmlInventoryEncryption","deserializeAws_restXmlSSES3","deserializeAws_restXmlSSEKMS","deserializeAws_restXmlLambdaFunctionConfiguration","Event","deserializeAws_restXmlNotificationConfigurationFilter","deserializeAws_restXmlLifecycleExpiration","deserializeAws_restXmlLifecycleRule","deserializeAws_restXmlLifecycleRuleFilter","Transition","deserializeAws_restXmlTransitionList","NoncurrentVersionTransition","deserializeAws_restXmlNoncurrentVersionTransitionList","deserializeAws_restXmlNoncurrentVersionExpiration","deserializeAws_restXmlLifecycleRuleAndOperator","deserializeAws_restXmlTargetGrants","deserializeAws_restXmlReplicationTimeValue","deserializeAws_restXmlMetricsAndOperator","deserializeAws_restXmlMetricsFilter","deserializeAws_restXmlMultipartUpload","Initiated","deserializeAws_restXmlNoncurrentVersionTransition","deserializeAws_restXmlS3KeyFilter","deserializeAws_restXml_Object","Size","deserializeAws_restXmlObjectLockRule","deserializeAws_restXmlObjectVersion","deserializeAws_restXmlOwnershipControlsRules","deserializeAws_restXmlOwnershipControlsRule","deserializeAws_restXmlPart","IsPublic","deserializeAws_restXmlQueueConfiguration","deserializeAws_restXmlRedirect","deserializeAws_restXmlReplicaModifications","deserializeAws_restXmlReplicationRules","deserializeAws_restXmlReplicationRule","deserializeAws_restXmlReplicationRuleFilter","deserializeAws_restXmlSourceSelectionCriteria","deserializeAws_restXmlReplicationRuleAndOperator","deserializeAws_restXmlRoutingRule","FilterRule","deserializeAws_restXmlServerSideEncryptionByDefault","deserializeAws_restXmlServerSideEncryptionRules","deserializeAws_restXmlServerSideEncryptionRule","deserializeAws_restXmlSseKmsEncryptedObjects","deserializeAws_restXmlStorageClassAnalysisDataExport","deserializeAws_restXmlTargetGrant","deserializeAws_restXmlTiering","deserializeAws_restXmlTopicConfiguration","deserializeAws_restXmlTransition","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","getOwnPropertyNames","includes","size","decodeEscapedXML","str","encoded","parsedObj","attributeNamePrefix","ignoreAttributes","parseNodeValue","tagValueProcessor","val","tagName","textNodeName","key","parsedObjToReturn"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/client-s3/protocols/Aws_restXml.ts"],"sourcesContent":["import {\n  AbortMultipartUploadCommandInput,\n  AbortMultipartUploadCommandOutput,\n} from \"../commands/AbortMultipartUploadCommand\";\nimport {\n  CompleteMultipartUploadCommandInput,\n  CompleteMultipartUploadCommandOutput,\n} from \"../commands/CompleteMultipartUploadCommand\";\nimport { CopyObjectCommandInput, CopyObjectCommandOutput } from \"../commands/CopyObjectCommand\";\nimport { CreateBucketCommandInput, CreateBucketCommandOutput } from \"../commands/CreateBucketCommand\";\nimport {\n  CreateMultipartUploadCommandInput,\n  CreateMultipartUploadCommandOutput,\n} from \"../commands/CreateMultipartUploadCommand\";\nimport {\n  DeleteBucketAnalyticsConfigurationCommandInput,\n  DeleteBucketAnalyticsConfigurationCommandOutput,\n} from \"../commands/DeleteBucketAnalyticsConfigurationCommand\";\nimport { DeleteBucketCommandInput, DeleteBucketCommandOutput } from \"../commands/DeleteBucketCommand\";\nimport { DeleteBucketCorsCommandInput, DeleteBucketCorsCommandOutput } from \"../commands/DeleteBucketCorsCommand\";\nimport {\n  DeleteBucketEncryptionCommandInput,\n  DeleteBucketEncryptionCommandOutput,\n} from \"../commands/DeleteBucketEncryptionCommand\";\nimport {\n  DeleteBucketIntelligentTieringConfigurationCommandInput,\n  DeleteBucketIntelligentTieringConfigurationCommandOutput,\n} from \"../commands/DeleteBucketIntelligentTieringConfigurationCommand\";\nimport {\n  DeleteBucketInventoryConfigurationCommandInput,\n  DeleteBucketInventoryConfigurationCommandOutput,\n} from \"../commands/DeleteBucketInventoryConfigurationCommand\";\nimport {\n  DeleteBucketLifecycleCommandInput,\n  DeleteBucketLifecycleCommandOutput,\n} from \"../commands/DeleteBucketLifecycleCommand\";\nimport {\n  DeleteBucketMetricsConfigurationCommandInput,\n  DeleteBucketMetricsConfigurationCommandOutput,\n} from \"../commands/DeleteBucketMetricsConfigurationCommand\";\nimport {\n  DeleteBucketOwnershipControlsCommandInput,\n  DeleteBucketOwnershipControlsCommandOutput,\n} from \"../commands/DeleteBucketOwnershipControlsCommand\";\nimport { DeleteBucketPolicyCommandInput, DeleteBucketPolicyCommandOutput } from \"../commands/DeleteBucketPolicyCommand\";\nimport {\n  DeleteBucketReplicationCommandInput,\n  DeleteBucketReplicationCommandOutput,\n} from \"../commands/DeleteBucketReplicationCommand\";\nimport {\n  DeleteBucketTaggingCommandInput,\n  DeleteBucketTaggingCommandOutput,\n} from \"../commands/DeleteBucketTaggingCommand\";\nimport {\n  DeleteBucketWebsiteCommandInput,\n  DeleteBucketWebsiteCommandOutput,\n} from \"../commands/DeleteBucketWebsiteCommand\";\nimport { DeleteObjectCommandInput, DeleteObjectCommandOutput } from \"../commands/DeleteObjectCommand\";\nimport {\n  DeleteObjectTaggingCommandInput,\n  DeleteObjectTaggingCommandOutput,\n} from \"../commands/DeleteObjectTaggingCommand\";\nimport { DeleteObjectsCommandInput, DeleteObjectsCommandOutput } from \"../commands/DeleteObjectsCommand\";\nimport {\n  DeletePublicAccessBlockCommandInput,\n  DeletePublicAccessBlockCommandOutput,\n} from \"../commands/DeletePublicAccessBlockCommand\";\nimport {\n  GetBucketAccelerateConfigurationCommandInput,\n  GetBucketAccelerateConfigurationCommandOutput,\n} from \"../commands/GetBucketAccelerateConfigurationCommand\";\nimport { GetBucketAclCommandInput, GetBucketAclCommandOutput } from \"../commands/GetBucketAclCommand\";\nimport {\n  GetBucketAnalyticsConfigurationCommandInput,\n  GetBucketAnalyticsConfigurationCommandOutput,\n} from \"../commands/GetBucketAnalyticsConfigurationCommand\";\nimport { GetBucketCorsCommandInput, GetBucketCorsCommandOutput } from \"../commands/GetBucketCorsCommand\";\nimport {\n  GetBucketEncryptionCommandInput,\n  GetBucketEncryptionCommandOutput,\n} from \"../commands/GetBucketEncryptionCommand\";\nimport {\n  GetBucketIntelligentTieringConfigurationCommandInput,\n  GetBucketIntelligentTieringConfigurationCommandOutput,\n} from \"../commands/GetBucketIntelligentTieringConfigurationCommand\";\nimport {\n  GetBucketInventoryConfigurationCommandInput,\n  GetBucketInventoryConfigurationCommandOutput,\n} from \"../commands/GetBucketInventoryConfigurationCommand\";\nimport {\n  GetBucketLifecycleConfigurationCommandInput,\n  GetBucketLifecycleConfigurationCommandOutput,\n} from \"../commands/GetBucketLifecycleConfigurationCommand\";\nimport { GetBucketLocationCommandInput, GetBucketLocationCommandOutput } from \"../commands/GetBucketLocationCommand\";\nimport { GetBucketLoggingCommandInput, GetBucketLoggingCommandOutput } from \"../commands/GetBucketLoggingCommand\";\nimport {\n  GetBucketMetricsConfigurationCommandInput,\n  GetBucketMetricsConfigurationCommandOutput,\n} from \"../commands/GetBucketMetricsConfigurationCommand\";\nimport {\n  GetBucketNotificationConfigurationCommandInput,\n  GetBucketNotificationConfigurationCommandOutput,\n} from \"../commands/GetBucketNotificationConfigurationCommand\";\nimport {\n  GetBucketOwnershipControlsCommandInput,\n  GetBucketOwnershipControlsCommandOutput,\n} from \"../commands/GetBucketOwnershipControlsCommand\";\nimport { GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput } from \"../commands/GetBucketPolicyCommand\";\nimport {\n  GetBucketPolicyStatusCommandInput,\n  GetBucketPolicyStatusCommandOutput,\n} from \"../commands/GetBucketPolicyStatusCommand\";\nimport {\n  GetBucketReplicationCommandInput,\n  GetBucketReplicationCommandOutput,\n} from \"../commands/GetBucketReplicationCommand\";\nimport {\n  GetBucketRequestPaymentCommandInput,\n  GetBucketRequestPaymentCommandOutput,\n} from \"../commands/GetBucketRequestPaymentCommand\";\nimport { GetBucketTaggingCommandInput, GetBucketTaggingCommandOutput } from \"../commands/GetBucketTaggingCommand\";\nimport {\n  GetBucketVersioningCommandInput,\n  GetBucketVersioningCommandOutput,\n} from \"../commands/GetBucketVersioningCommand\";\nimport { GetBucketWebsiteCommandInput, GetBucketWebsiteCommandOutput } from \"../commands/GetBucketWebsiteCommand\";\nimport { GetObjectAclCommandInput, GetObjectAclCommandOutput } from \"../commands/GetObjectAclCommand\";\nimport { GetObjectCommandInput, GetObjectCommandOutput } from \"../commands/GetObjectCommand\";\nimport { GetObjectLegalHoldCommandInput, GetObjectLegalHoldCommandOutput } from \"../commands/GetObjectLegalHoldCommand\";\nimport {\n  GetObjectLockConfigurationCommandInput,\n  GetObjectLockConfigurationCommandOutput,\n} from \"../commands/GetObjectLockConfigurationCommand\";\nimport { GetObjectRetentionCommandInput, GetObjectRetentionCommandOutput } from \"../commands/GetObjectRetentionCommand\";\nimport { GetObjectTaggingCommandInput, GetObjectTaggingCommandOutput } from \"../commands/GetObjectTaggingCommand\";\nimport { GetObjectTorrentCommandInput, GetObjectTorrentCommandOutput } from \"../commands/GetObjectTorrentCommand\";\nimport {\n  GetPublicAccessBlockCommandInput,\n  GetPublicAccessBlockCommandOutput,\n} from \"../commands/GetPublicAccessBlockCommand\";\nimport { HeadBucketCommandInput, HeadBucketCommandOutput } from \"../commands/HeadBucketCommand\";\nimport { HeadObjectCommandInput, HeadObjectCommandOutput } from \"../commands/HeadObjectCommand\";\nimport {\n  ListBucketAnalyticsConfigurationsCommandInput,\n  ListBucketAnalyticsConfigurationsCommandOutput,\n} from \"../commands/ListBucketAnalyticsConfigurationsCommand\";\nimport {\n  ListBucketIntelligentTieringConfigurationsCommandInput,\n  ListBucketIntelligentTieringConfigurationsCommandOutput,\n} from \"../commands/ListBucketIntelligentTieringConfigurationsCommand\";\nimport {\n  ListBucketInventoryConfigurationsCommandInput,\n  ListBucketInventoryConfigurationsCommandOutput,\n} from \"../commands/ListBucketInventoryConfigurationsCommand\";\nimport {\n  ListBucketMetricsConfigurationsCommandInput,\n  ListBucketMetricsConfigurationsCommandOutput,\n} from \"../commands/ListBucketMetricsConfigurationsCommand\";\nimport { ListBucketsCommandInput, ListBucketsCommandOutput } from \"../commands/ListBucketsCommand\";\nimport {\n  ListMultipartUploadsCommandInput,\n  ListMultipartUploadsCommandOutput,\n} from \"../commands/ListMultipartUploadsCommand\";\nimport { ListObjectVersionsCommandInput, ListObjectVersionsCommandOutput } from \"../commands/ListObjectVersionsCommand\";\nimport { ListObjectsCommandInput, ListObjectsCommandOutput } from \"../commands/ListObjectsCommand\";\nimport { ListObjectsV2CommandInput, ListObjectsV2CommandOutput } from \"../commands/ListObjectsV2Command\";\nimport { ListPartsCommandInput, ListPartsCommandOutput } from \"../commands/ListPartsCommand\";\nimport {\n  PutBucketAccelerateConfigurationCommandInput,\n  PutBucketAccelerateConfigurationCommandOutput,\n} from \"../commands/PutBucketAccelerateConfigurationCommand\";\nimport { PutBucketAclCommandInput, PutBucketAclCommandOutput } from \"../commands/PutBucketAclCommand\";\nimport {\n  PutBucketAnalyticsConfigurationCommandInput,\n  PutBucketAnalyticsConfigurationCommandOutput,\n} from \"../commands/PutBucketAnalyticsConfigurationCommand\";\nimport { PutBucketCorsCommandInput, PutBucketCorsCommandOutput } from \"../commands/PutBucketCorsCommand\";\nimport {\n  PutBucketEncryptionCommandInput,\n  PutBucketEncryptionCommandOutput,\n} from \"../commands/PutBucketEncryptionCommand\";\nimport {\n  PutBucketIntelligentTieringConfigurationCommandInput,\n  PutBucketIntelligentTieringConfigurationCommandOutput,\n} from \"../commands/PutBucketIntelligentTieringConfigurationCommand\";\nimport {\n  PutBucketInventoryConfigurationCommandInput,\n  PutBucketInventoryConfigurationCommandOutput,\n} from \"../commands/PutBucketInventoryConfigurationCommand\";\nimport {\n  PutBucketLifecycleConfigurationCommandInput,\n  PutBucketLifecycleConfigurationCommandOutput,\n} from \"../commands/PutBucketLifecycleConfigurationCommand\";\nimport { PutBucketLoggingCommandInput, PutBucketLoggingCommandOutput } from \"../commands/PutBucketLoggingCommand\";\nimport {\n  PutBucketMetricsConfigurationCommandInput,\n  PutBucketMetricsConfigurationCommandOutput,\n} from \"../commands/PutBucketMetricsConfigurationCommand\";\nimport {\n  PutBucketNotificationConfigurationCommandInput,\n  PutBucketNotificationConfigurationCommandOutput,\n} from \"../commands/PutBucketNotificationConfigurationCommand\";\nimport {\n  PutBucketOwnershipControlsCommandInput,\n  PutBucketOwnershipControlsCommandOutput,\n} from \"../commands/PutBucketOwnershipControlsCommand\";\nimport { PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput } from \"../commands/PutBucketPolicyCommand\";\nimport {\n  PutBucketReplicationCommandInput,\n  PutBucketReplicationCommandOutput,\n} from \"../commands/PutBucketReplicationCommand\";\nimport {\n  PutBucketRequestPaymentCommandInput,\n  PutBucketRequestPaymentCommandOutput,\n} from \"../commands/PutBucketRequestPaymentCommand\";\nimport { PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput } from \"../commands/PutBucketTaggingCommand\";\nimport {\n  PutBucketVersioningCommandInput,\n  PutBucketVersioningCommandOutput,\n} from \"../commands/PutBucketVersioningCommand\";\nimport { PutBucketWebsiteCommandInput, PutBucketWebsiteCommandOutput } from \"../commands/PutBucketWebsiteCommand\";\nimport { PutObjectAclCommandInput, PutObjectAclCommandOutput } from \"../commands/PutObjectAclCommand\";\nimport { PutObjectCommandInput, PutObjectCommandOutput } from \"../commands/PutObjectCommand\";\nimport { PutObjectLegalHoldCommandInput, PutObjectLegalHoldCommandOutput } from \"../commands/PutObjectLegalHoldCommand\";\nimport {\n  PutObjectLockConfigurationCommandInput,\n  PutObjectLockConfigurationCommandOutput,\n} from \"../commands/PutObjectLockConfigurationCommand\";\nimport { PutObjectRetentionCommandInput, PutObjectRetentionCommandOutput } from \"../commands/PutObjectRetentionCommand\";\nimport { PutObjectTaggingCommandInput, PutObjectTaggingCommandOutput } from \"../commands/PutObjectTaggingCommand\";\nimport {\n  PutPublicAccessBlockCommandInput,\n  PutPublicAccessBlockCommandOutput,\n} from \"../commands/PutPublicAccessBlockCommand\";\nimport { RestoreObjectCommandInput, RestoreObjectCommandOutput } from \"../commands/RestoreObjectCommand\";\nimport {\n  SelectObjectContentCommandInput,\n  SelectObjectContentCommandOutput,\n} from \"../commands/SelectObjectContentCommand\";\nimport { UploadPartCommandInput, UploadPartCommandOutput } from \"../commands/UploadPartCommand\";\nimport { UploadPartCopyCommandInput, UploadPartCopyCommandOutput } from \"../commands/UploadPartCopyCommand\";\nimport {\n  AbortIncompleteMultipartUpload,\n  AccelerateConfiguration,\n  AccessControlPolicy,\n  AccessControlTranslation,\n  AnalyticsAndOperator,\n  AnalyticsConfiguration,\n  AnalyticsExportDestination,\n  AnalyticsFilter,\n  AnalyticsS3BucketDestination,\n  Bucket,\n  BucketAlreadyExists,\n  BucketAlreadyOwnedByYou,\n  BucketLifecycleConfiguration,\n  BucketLoggingStatus,\n  CORSConfiguration,\n  CORSRule,\n  CommonPrefix,\n  CompletedMultipartUpload,\n  CompletedPart,\n  Condition,\n  CopyObjectResult,\n  CreateBucketConfiguration,\n  DefaultRetention,\n  Delete,\n  DeleteMarkerEntry,\n  DeleteMarkerReplication,\n  DeletedObject,\n  Destination,\n  Encryption,\n  EncryptionConfiguration,\n  ErrorDocument,\n  Event,\n  ExistingObjectReplication,\n  FilterRule,\n  GlacierJobParameters,\n  Grant,\n  Grantee,\n  IndexDocument,\n  Initiator,\n  IntelligentTieringAndOperator,\n  IntelligentTieringConfiguration,\n  IntelligentTieringFilter,\n  InvalidObjectState,\n  InventoryConfiguration,\n  InventoryDestination,\n  InventoryEncryption,\n  InventoryFilter,\n  InventoryOptionalField,\n  InventoryS3BucketDestination,\n  InventorySchedule,\n  LambdaFunctionConfiguration,\n  LifecycleExpiration,\n  LifecycleRule,\n  LifecycleRuleAndOperator,\n  LifecycleRuleFilter,\n  LoggingEnabled,\n  Metrics,\n  MetricsAndOperator,\n  MetricsConfiguration,\n  MetricsFilter,\n  MultipartUpload,\n  NoSuchBucket,\n  NoSuchKey,\n  NoSuchUpload,\n  NoncurrentVersionExpiration,\n  NoncurrentVersionTransition,\n  NotificationConfiguration,\n  NotificationConfigurationFilter,\n  ObjectAlreadyInActiveTierError,\n  ObjectIdentifier,\n  ObjectLockConfiguration,\n  ObjectLockLegalHold,\n  ObjectLockRetention,\n  ObjectLockRule,\n  ObjectNotInActiveTierError,\n  ObjectVersion,\n  Owner,\n  OwnershipControls,\n  OwnershipControlsRule,\n  Part,\n  PolicyStatus,\n  PublicAccessBlockConfiguration,\n  QueueConfiguration,\n  Redirect,\n  RedirectAllRequestsTo,\n  ReplicaModifications,\n  ReplicationConfiguration,\n  ReplicationRule,\n  ReplicationRuleAndOperator,\n  ReplicationRuleFilter,\n  ReplicationTime,\n  ReplicationTimeValue,\n  RequestPaymentConfiguration,\n  RoutingRule,\n  S3KeyFilter,\n  SSEKMS,\n  SSES3,\n  ServerSideEncryptionByDefault,\n  ServerSideEncryptionConfiguration,\n  ServerSideEncryptionRule,\n  SourceSelectionCriteria,\n  SseKmsEncryptedObjects,\n  StorageClassAnalysis,\n  StorageClassAnalysisDataExport,\n  Tag,\n  Tagging,\n  TargetGrant,\n  Tiering,\n  TopicConfiguration,\n  Transition,\n  VersioningConfiguration,\n  WebsiteConfiguration,\n  _Error,\n  _Object,\n} from \"../models/models_0\";\nimport {\n  CSVInput,\n  CSVOutput,\n  ContinuationEvent,\n  CopyPartResult,\n  EndEvent,\n  InputSerialization,\n  JSONInput,\n  JSONOutput,\n  MetadataEntry,\n  OutputLocation,\n  OutputSerialization,\n  ParquetInput,\n  ProgressEvent,\n  RecordsEvent,\n  RequestProgress,\n  RestoreRequest,\n  S3Location,\n  ScanRange,\n  SelectObjectContentEventStream,\n  SelectParameters,\n  StatsEvent,\n} from \"../models/models_1\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  SmithyException as __SmithyException,\n  dateToUtcString as __dateToUtcString,\n  extendedEncodeURIComponent as __extendedEncodeURIComponent,\n  getArrayIfSingleItem as __getArrayIfSingleItem,\n  getValueFromTextNode as __getValueFromTextNode,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  EventStreamSerdeContext as __EventStreamSerdeContext,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\n\nexport const serializeAws_restXmlAbortMultipartUploadCommand = async (\n  input: AbortMultipartUploadCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"AbortMultipartUpload\",\n    ...(input.UploadId !== undefined && { uploadId: input.UploadId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlCompleteMultipartUploadCommand = async (\n  input: CompleteMultipartUploadCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    ...(input.UploadId !== undefined && { uploadId: input.UploadId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.MultipartUpload !== undefined) {\n    contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlCopyObjectCommand = async (\n  input: CopyObjectCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL! }),\n    ...(isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl! }),\n    ...(isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition! }),\n    ...(isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding! }),\n    ...(isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage! }),\n    ...(isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType! }),\n    ...(isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource! }),\n    ...(isSerializableHeaderValue(input.CopySourceIfMatch) && {\n      \"x-amz-copy-source-if-match\": input.CopySourceIfMatch!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n      \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n      \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n      \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires!).toString() }),\n    ...(isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl! }),\n    ...(isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead! }),\n    ...(isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP! }),\n    ...(isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP! }),\n    ...(isSerializableHeaderValue(input.MetadataDirective) && { \"x-amz-metadata-directive\": input.MetadataDirective! }),\n    ...(isSerializableHeaderValue(input.TaggingDirective) && { \"x-amz-tagging-directive\": input.TaggingDirective! }),\n    ...(isSerializableHeaderValue(input.ServerSideEncryption) && {\n      \"x-amz-server-side-encryption\": input.ServerSideEncryption!,\n    }),\n    ...(isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass! }),\n    ...(isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n      \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.SSEKMSKeyId) && {\n      \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId!,\n    }),\n    ...(isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n      \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext!,\n    }),\n    ...(isSerializableHeaderValue(input.BucketKeyEnabled) && {\n      \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n      \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n      \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n      \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging! }),\n    ...(isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode! }),\n    ...(isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n      \"x-amz-object-lock-retain-until-date\": (\n        input.ObjectLockRetainUntilDate!.toISOString().split(\".\")[0] + \"Z\"\n      ).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n      \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus!,\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n      \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner!,\n    }),\n    ...(input.Metadata !== undefined &&\n      Object.keys(input.Metadata).reduce(\n        (acc: any, suffix: string) => ({\n          ...acc,\n          [`x-amz-meta-${suffix.toLowerCase()}`]: input.Metadata![suffix],\n        }),\n        {}\n      )),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"CopyObject\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlCreateBucketCommand = async (\n  input: CreateBucketCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL! }),\n    ...(isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl! }),\n    ...(isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead! }),\n    ...(isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP! }),\n    ...(isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite! }),\n    ...(isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP! }),\n    ...(isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n      \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket!.toString(),\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  let body: any;\n  let contents: any;\n  if (input.CreateBucketConfiguration !== undefined) {\n    contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlCreateMultipartUploadCommand = async (\n  input: CreateMultipartUploadCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL! }),\n    ...(isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl! }),\n    ...(isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition! }),\n    ...(isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding! }),\n    ...(isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage! }),\n    ...(isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType! }),\n    ...(isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires!).toString() }),\n    ...(isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl! }),\n    ...(isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead! }),\n    ...(isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP! }),\n    ...(isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP! }),\n    ...(isSerializableHeaderValue(input.ServerSideEncryption) && {\n      \"x-amz-server-side-encryption\": input.ServerSideEncryption!,\n    }),\n    ...(isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass! }),\n    ...(isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n      \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.SSEKMSKeyId) && {\n      \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId!,\n    }),\n    ...(isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n      \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext!,\n    }),\n    ...(isSerializableHeaderValue(input.BucketKeyEnabled) && {\n      \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging! }),\n    ...(isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode! }),\n    ...(isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n      \"x-amz-object-lock-retain-until-date\": (\n        input.ObjectLockRetainUntilDate!.toISOString().split(\".\")[0] + \"Z\"\n      ).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n      \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus!,\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n    ...(input.Metadata !== undefined &&\n      Object.keys(input.Metadata).reduce(\n        (acc: any, suffix: string) => ({\n          ...acc,\n          [`x-amz-meta-${suffix.toLowerCase()}`]: input.Metadata![suffix],\n        }),\n        {}\n      )),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    uploads: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketCommand = async (\n  input: DeleteBucketCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = async (\n  input: DeleteBucketAnalyticsConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    analytics: \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketCorsCommand = async (\n  input: DeleteBucketCorsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    cors: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketEncryptionCommand = async (\n  input: DeleteBucketEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    encryption: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = async (\n  input: DeleteBucketIntelligentTieringConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"intelligent-tiering\": \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = async (\n  input: DeleteBucketInventoryConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    inventory: \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketLifecycleCommand = async (\n  input: DeleteBucketLifecycleCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    lifecycle: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = async (\n  input: DeleteBucketMetricsConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    metrics: \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketOwnershipControlsCommand = async (\n  input: DeleteBucketOwnershipControlsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    ownershipControls: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketPolicyCommand = async (\n  input: DeleteBucketPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    policy: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketReplicationCommand = async (\n  input: DeleteBucketReplicationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    replication: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketTaggingCommand = async (\n  input: DeleteBucketTaggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    tagging: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteBucketWebsiteCommand = async (\n  input: DeleteBucketWebsiteCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    website: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteObjectCommand = async (\n  input: DeleteObjectCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA! }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n      \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"DeleteObject\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteObjectsCommand = async (\n  input: DeleteObjectsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA! }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n      \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    delete: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.Delete !== undefined) {\n    contents = serializeAws_restXmlDelete(input.Delete, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeleteObjectTaggingCommand = async (\n  input: DeleteObjectTaggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    tagging: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlDeletePublicAccessBlockCommand = async (\n  input: DeletePublicAccessBlockCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    publicAccessBlock: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketAccelerateConfigurationCommand = async (\n  input: GetBucketAccelerateConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    accelerate: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketAclCommand = async (\n  input: GetBucketAclCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    acl: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = async (\n  input: GetBucketAnalyticsConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    analytics: \"\",\n    \"x-id\": \"GetBucketAnalyticsConfiguration\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketCorsCommand = async (\n  input: GetBucketCorsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    cors: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketEncryptionCommand = async (\n  input: GetBucketEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    encryption: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = async (\n  input: GetBucketIntelligentTieringConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"intelligent-tiering\": \"\",\n    \"x-id\": \"GetBucketIntelligentTieringConfiguration\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketInventoryConfigurationCommand = async (\n  input: GetBucketInventoryConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    inventory: \"\",\n    \"x-id\": \"GetBucketInventoryConfiguration\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketLifecycleConfigurationCommand = async (\n  input: GetBucketLifecycleConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    lifecycle: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketLocationCommand = async (\n  input: GetBucketLocationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    location: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketLoggingCommand = async (\n  input: GetBucketLoggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    logging: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketMetricsConfigurationCommand = async (\n  input: GetBucketMetricsConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    metrics: \"\",\n    \"x-id\": \"GetBucketMetricsConfiguration\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketNotificationConfigurationCommand = async (\n  input: GetBucketNotificationConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    notification: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketOwnershipControlsCommand = async (\n  input: GetBucketOwnershipControlsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    ownershipControls: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketPolicyCommand = async (\n  input: GetBucketPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    policy: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketPolicyStatusCommand = async (\n  input: GetBucketPolicyStatusCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    policyStatus: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketReplicationCommand = async (\n  input: GetBucketReplicationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    replication: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketRequestPaymentCommand = async (\n  input: GetBucketRequestPaymentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    requestPayment: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketTaggingCommand = async (\n  input: GetBucketTaggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    tagging: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketVersioningCommand = async (\n  input: GetBucketVersioningCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    versioning: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetBucketWebsiteCommand = async (\n  input: GetBucketWebsiteCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    website: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectCommand = async (\n  input: GetObjectCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch! }),\n    ...(isSerializableHeaderValue(input.IfModifiedSince) && {\n      \"if-modified-since\": __dateToUtcString(input.IfModifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch! }),\n    ...(isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n      \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.Range) && { range: input.Range! }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"GetObject\",\n    ...(input.ResponseCacheControl !== undefined && { \"response-cache-control\": input.ResponseCacheControl }),\n    ...(input.ResponseContentDisposition !== undefined && {\n      \"response-content-disposition\": input.ResponseContentDisposition,\n    }),\n    ...(input.ResponseContentEncoding !== undefined && { \"response-content-encoding\": input.ResponseContentEncoding }),\n    ...(input.ResponseContentLanguage !== undefined && { \"response-content-language\": input.ResponseContentLanguage }),\n    ...(input.ResponseContentType !== undefined && { \"response-content-type\": input.ResponseContentType }),\n    ...(input.ResponseExpires !== undefined && {\n      \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n    ...(input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectAclCommand = async (\n  input: GetObjectAclCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    acl: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectLegalHoldCommand = async (\n  input: GetObjectLegalHoldCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"legal-hold\": \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectLockConfigurationCommand = async (\n  input: GetObjectLockConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"object-lock\": \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectRetentionCommand = async (\n  input: GetObjectRetentionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    retention: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectTaggingCommand = async (\n  input: GetObjectTaggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    tagging: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetObjectTorrentCommand = async (\n  input: GetObjectTorrentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    torrent: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlGetPublicAccessBlockCommand = async (\n  input: GetPublicAccessBlockCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    publicAccessBlock: \"\",\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlHeadBucketCommand = async (\n  input: HeadBucketCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"HEAD\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlHeadObjectCommand = async (\n  input: HeadObjectCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.IfMatch) && { \"if-match\": input.IfMatch! }),\n    ...(isSerializableHeaderValue(input.IfModifiedSince) && {\n      \"if-modified-since\": __dateToUtcString(input.IfModifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.IfNoneMatch) && { \"if-none-match\": input.IfNoneMatch! }),\n    ...(isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n      \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.Range) && { range: input.Range! }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n    ...(input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"HEAD\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = async (\n  input: ListBucketAnalyticsConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    analytics: \"\",\n    \"x-id\": \"ListBucketAnalyticsConfigurations\",\n    ...(input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = async (\n  input: ListBucketIntelligentTieringConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"intelligent-tiering\": \"\",\n    \"x-id\": \"ListBucketIntelligentTieringConfigurations\",\n    ...(input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListBucketInventoryConfigurationsCommand = async (\n  input: ListBucketInventoryConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    inventory: \"\",\n    \"x-id\": \"ListBucketInventoryConfigurations\",\n    ...(input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListBucketMetricsConfigurationsCommand = async (\n  input: ListBucketMetricsConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    metrics: \"\",\n    \"x-id\": \"ListBucketMetricsConfigurations\",\n    ...(input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListBucketsCommand = async (\n  input: ListBucketsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/\";\n  let body: any;\n  body = \"\";\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListMultipartUploadsCommand = async (\n  input: ListMultipartUploadsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    uploads: \"\",\n    ...(input.Delimiter !== undefined && { delimiter: input.Delimiter }),\n    ...(input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType }),\n    ...(input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker }),\n    ...(input.MaxUploads !== undefined && { \"max-uploads\": input.MaxUploads.toString() }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n    ...(input.UploadIdMarker !== undefined && { \"upload-id-marker\": input.UploadIdMarker }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListObjectsCommand = async (\n  input: ListObjectsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    ...(input.Delimiter !== undefined && { delimiter: input.Delimiter }),\n    ...(input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType }),\n    ...(input.Marker !== undefined && { marker: input.Marker }),\n    ...(input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListObjectsV2Command = async (\n  input: ListObjectsV2CommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"list-type\": \"2\",\n    ...(input.Delimiter !== undefined && { delimiter: input.Delimiter }),\n    ...(input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType }),\n    ...(input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n    ...(input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }),\n    ...(input.FetchOwner !== undefined && { \"fetch-owner\": input.FetchOwner.toString() }),\n    ...(input.StartAfter !== undefined && { \"start-after\": input.StartAfter }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListObjectVersionsCommand = async (\n  input: ListObjectVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    versions: \"\",\n    ...(input.Delimiter !== undefined && { delimiter: input.Delimiter }),\n    ...(input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType }),\n    ...(input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker }),\n    ...(input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n    ...(input.VersionIdMarker !== undefined && { \"version-id-marker\": input.VersionIdMarker }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlListPartsCommand = async (\n  input: ListPartsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"ListParts\",\n    ...(input.MaxParts !== undefined && { \"max-parts\": input.MaxParts.toString() }),\n    ...(input.PartNumberMarker !== undefined && { \"part-number-marker\": input.PartNumberMarker }),\n    ...(input.UploadId !== undefined && { uploadId: input.UploadId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketAccelerateConfigurationCommand = async (\n  input: PutBucketAccelerateConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    accelerate: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.AccelerateConfiguration !== undefined) {\n    contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketAclCommand = async (\n  input: PutBucketAclCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL! }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl! }),\n    ...(isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead! }),\n    ...(isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP! }),\n    ...(isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite! }),\n    ...(isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    acl: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.AccessControlPolicy !== undefined) {\n    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = async (\n  input: PutBucketAnalyticsConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    analytics: \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.AnalyticsConfiguration !== undefined) {\n    contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketCorsCommand = async (\n  input: PutBucketCorsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    cors: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.CORSConfiguration !== undefined) {\n    contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketEncryptionCommand = async (\n  input: PutBucketEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    encryption: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.ServerSideEncryptionConfiguration !== undefined) {\n    contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = async (\n  input: PutBucketIntelligentTieringConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"intelligent-tiering\": \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.IntelligentTieringConfiguration !== undefined) {\n    contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketInventoryConfigurationCommand = async (\n  input: PutBucketInventoryConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    inventory: \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.InventoryConfiguration !== undefined) {\n    contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketLifecycleConfigurationCommand = async (\n  input: PutBucketLifecycleConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    lifecycle: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.LifecycleConfiguration !== undefined) {\n    contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketLoggingCommand = async (\n  input: PutBucketLoggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    logging: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.BucketLoggingStatus !== undefined) {\n    contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketMetricsConfigurationCommand = async (\n  input: PutBucketMetricsConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    metrics: \"\",\n    ...(input.Id !== undefined && { id: input.Id }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.MetricsConfiguration !== undefined) {\n    contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketNotificationConfigurationCommand = async (\n  input: PutBucketNotificationConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    notification: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.NotificationConfiguration !== undefined) {\n    contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketOwnershipControlsCommand = async (\n  input: PutBucketOwnershipControlsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    ownershipControls: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.OwnershipControls !== undefined) {\n    contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketPolicyCommand = async (\n  input: PutBucketPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"text/plain\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n      \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    policy: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.Policy !== undefined) {\n    contents = input.Policy;\n    body = contents;\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketReplicationCommand = async (\n  input: PutBucketReplicationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    replication: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.ReplicationConfiguration !== undefined) {\n    contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketRequestPaymentCommand = async (\n  input: PutBucketRequestPaymentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    requestPayment: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.RequestPaymentConfiguration !== undefined) {\n    contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketTaggingCommand = async (\n  input: PutBucketTaggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    tagging: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.Tagging !== undefined) {\n    contents = serializeAws_restXmlTagging(input.Tagging, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketVersioningCommand = async (\n  input: PutBucketVersioningCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    versioning: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.VersioningConfiguration !== undefined) {\n    contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutBucketWebsiteCommand = async (\n  input: PutBucketWebsiteCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    website: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.WebsiteConfiguration !== undefined) {\n    contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutObjectCommand = async (\n  input: PutObjectCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/octet-stream\",\n    ...(isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL! }),\n    ...(isSerializableHeaderValue(input.CacheControl) && { \"cache-control\": input.CacheControl! }),\n    ...(isSerializableHeaderValue(input.ContentDisposition) && { \"content-disposition\": input.ContentDisposition! }),\n    ...(isSerializableHeaderValue(input.ContentEncoding) && { \"content-encoding\": input.ContentEncoding! }),\n    ...(isSerializableHeaderValue(input.ContentLanguage) && { \"content-language\": input.ContentLanguage! }),\n    ...(isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength!.toString() }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ContentType) && { \"content-type\": input.ContentType! }),\n    ...(isSerializableHeaderValue(input.Expires) && { expires: __dateToUtcString(input.Expires!).toString() }),\n    ...(isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl! }),\n    ...(isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead! }),\n    ...(isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP! }),\n    ...(isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP! }),\n    ...(isSerializableHeaderValue(input.ServerSideEncryption) && {\n      \"x-amz-server-side-encryption\": input.ServerSideEncryption!,\n    }),\n    ...(isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass! }),\n    ...(isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n      \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.SSEKMSKeyId) && {\n      \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId!,\n    }),\n    ...(isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n      \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext!,\n    }),\n    ...(isSerializableHeaderValue(input.BucketKeyEnabled) && {\n      \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging! }),\n    ...(isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode! }),\n    ...(isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n      \"x-amz-object-lock-retain-until-date\": (\n        input.ObjectLockRetainUntilDate!.toISOString().split(\".\")[0] + \"Z\"\n      ).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n      \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus!,\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n    ...(input.Metadata !== undefined &&\n      Object.keys(input.Metadata).reduce(\n        (acc: any, suffix: string) => ({\n          ...acc,\n          [`x-amz-meta-${suffix.toLowerCase()}`]: input.Metadata![suffix],\n        }),\n        {}\n      )),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"PutObject\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.Body !== undefined) {\n    contents = input.Body;\n    body = contents;\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutObjectAclCommand = async (\n  input: PutObjectAclCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL! }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl! }),\n    ...(isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead! }),\n    ...(isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP! }),\n    ...(isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite! }),\n    ...(isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP! }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    acl: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.AccessControlPolicy !== undefined) {\n    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutObjectLegalHoldCommand = async (\n  input: PutObjectLegalHoldCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"legal-hold\": \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.LegalHold !== undefined) {\n    contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutObjectLockConfigurationCommand = async (\n  input: PutObjectLockConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token! }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    \"object-lock\": \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.ObjectLockConfiguration !== undefined) {\n    contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutObjectRetentionCommand = async (\n  input: PutObjectRetentionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n      \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention!.toString(),\n    }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    retention: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.Retention !== undefined) {\n    contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutObjectTaggingCommand = async (\n  input: PutObjectTaggingCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    tagging: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.Tagging !== undefined) {\n    contents = serializeAws_restXmlTagging(input.Tagging, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlPutPublicAccessBlockCommand = async (\n  input: PutPublicAccessBlockCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  const query: any = {\n    publicAccessBlock: \"\",\n  };\n  let body: any;\n  let contents: any;\n  if (input.PublicAccessBlockConfiguration !== undefined) {\n    contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlRestoreObjectCommand = async (\n  input: RestoreObjectCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    restore: \"\",\n    ...(input.VersionId !== undefined && { versionId: input.VersionId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.RestoreRequest !== undefined) {\n    contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    body += contents.toString();\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlSelectObjectContentCommand = async (\n  input: SelectObjectContentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/xml\",\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    select: \"\",\n    \"select-type\": \"2\",\n  };\n  let body: any;\n  body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n  const bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n  bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n  if (input.Expression !== undefined) {\n    const node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExpressionType !== undefined) {\n    const node = new __XmlNode(\"ExpressionType\")\n      .addChildNode(new __XmlText(input.ExpressionType))\n      .withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.InputSerialization !== undefined) {\n    const node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\n      \"InputSerialization\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.OutputSerialization !== undefined) {\n    const node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\n      \"OutputSerialization\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.RequestProgress !== undefined) {\n    const node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ScanRange !== undefined) {\n    const node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n    bodyNode.addChildNode(node);\n  }\n  body += bodyNode.toString();\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlUploadPartCommand = async (\n  input: UploadPartCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/octet-stream\",\n    ...(isSerializableHeaderValue(input.ContentLength) && { \"content-length\": input.ContentLength!.toString() }),\n    ...(isSerializableHeaderValue(input.ContentMD5) && { \"content-md5\": input.ContentMD5! }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"UploadPart\",\n    ...(input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }),\n    ...(input.UploadId !== undefined && { uploadId: input.UploadId }),\n  };\n  let body: any;\n  let contents: any;\n  if (input.Body !== undefined) {\n    contents = input.Body;\n    body = contents;\n  }\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restXmlUploadPartCopyCommand = async (\n  input: UploadPartCopyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    ...(isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource! }),\n    ...(isSerializableHeaderValue(input.CopySourceIfMatch) && {\n      \"x-amz-copy-source-if-match\": input.CopySourceIfMatch!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n      \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n      \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n      \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince!).toString(),\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceRange) && { \"x-amz-copy-source-range\": input.CopySourceRange! }),\n    ...(isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n      \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKey) && {\n      \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n      \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n      \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n      \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey!,\n    }),\n    ...(isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n      \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5!,\n    }),\n    ...(isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer! }),\n    ...(isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n      \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner!,\n    }),\n    ...(isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n      \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner!,\n    }),\n  };\n  let resolvedPath = \"/{Bucket}/{Key+}\";\n  if (input.Bucket !== undefined) {\n    const labelValue: string = input.Bucket;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Bucket.\");\n  }\n  if (input.Key !== undefined) {\n    const labelValue: string = input.Key;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Key.\");\n    }\n    resolvedPath = resolvedPath.replace(\n      \"{Key+}\",\n      labelValue\n        .split(\"/\")\n        .map((segment) => __extendedEncodeURIComponent(segment))\n        .join(\"/\")\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Key.\");\n  }\n  const query: any = {\n    \"x-id\": \"UploadPartCopy\",\n    ...(input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }),\n    ...(input.UploadId !== undefined && { uploadId: input.UploadId }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const deserializeAws_restXmlAbortMultipartUploadCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AbortMultipartUploadCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlAbortMultipartUploadCommandError(output, context);\n  }\n  const contents: AbortMultipartUploadCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlAbortMultipartUploadCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AbortMultipartUploadCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchUpload\":\n    case \"com.amazonaws.s3#NoSuchUpload\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlCompleteMultipartUploadCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CompleteMultipartUploadCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context);\n  }\n  const contents: CompleteMultipartUploadCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Bucket: undefined,\n    BucketKeyEnabled: undefined,\n    ETag: undefined,\n    Expiration: undefined,\n    Key: undefined,\n    Location: undefined,\n    RequestCharged: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-expiration\"] !== undefined) {\n    contents.Expiration = output.headers[\"x-amz-expiration\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Bucket\"] !== undefined) {\n    contents.Bucket = data[\"Bucket\"];\n  }\n  if (data[\"ETag\"] !== undefined) {\n    contents.ETag = data[\"ETag\"];\n  }\n  if (data[\"Key\"] !== undefined) {\n    contents.Key = data[\"Key\"];\n  }\n  if (data[\"Location\"] !== undefined) {\n    contents.Location = data[\"Location\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlCompleteMultipartUploadCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CompleteMultipartUploadCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlCopyObjectCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CopyObjectCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlCopyObjectCommandError(output, context);\n  }\n  const contents: CopyObjectCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BucketKeyEnabled: undefined,\n    CopyObjectResult: undefined,\n    CopySourceVersionId: undefined,\n    Expiration: undefined,\n    RequestCharged: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSEncryptionContext: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-expiration\"] !== undefined) {\n    contents.Expiration = output.headers[\"x-amz-expiration\"];\n  }\n  if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n  }\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlCopyObjectCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CopyObjectCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ObjectNotInActiveTierError\":\n    case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n      response = {\n        ...(await deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlCreateBucketCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateBucketCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlCreateBucketCommandError(output, context);\n  }\n  const contents: CreateBucketCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Location: undefined,\n  };\n  if (output.headers[\"location\"] !== undefined) {\n    contents.Location = output.headers[\"location\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlCreateBucketCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateBucketCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BucketAlreadyExists\":\n    case \"com.amazonaws.s3#BucketAlreadyExists\":\n      response = {\n        ...(await deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BucketAlreadyOwnedByYou\":\n    case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n      response = {\n        ...(await deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlCreateMultipartUploadCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateMultipartUploadCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlCreateMultipartUploadCommandError(output, context);\n  }\n  const contents: CreateMultipartUploadCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AbortDate: undefined,\n    AbortRuleId: undefined,\n    Bucket: undefined,\n    BucketKeyEnabled: undefined,\n    Key: undefined,\n    RequestCharged: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSEncryptionContext: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n    UploadId: undefined,\n  };\n  if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n    contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n  }\n  if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Bucket\"] !== undefined) {\n    contents.Bucket = data[\"Bucket\"];\n  }\n  if (data[\"Key\"] !== undefined) {\n    contents.Key = data[\"Key\"];\n  }\n  if (data[\"UploadId\"] !== undefined) {\n    contents.UploadId = data[\"UploadId\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlCreateMultipartUploadCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateMultipartUploadCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketCommandError(output, context);\n  }\n  const contents: DeleteBucketCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketAnalyticsConfigurationCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context);\n  }\n  const contents: DeleteBucketAnalyticsConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketAnalyticsConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketCorsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketCorsCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketCorsCommandError(output, context);\n  }\n  const contents: DeleteBucketCorsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketCorsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketCorsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketEncryptionCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context);\n  }\n  const contents: DeleteBucketEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketIntelligentTieringConfigurationCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context);\n  }\n  const contents: DeleteBucketIntelligentTieringConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketIntelligentTieringConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketInventoryConfigurationCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context);\n  }\n  const contents: DeleteBucketInventoryConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketInventoryConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketLifecycleCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketLifecycleCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context);\n  }\n  const contents: DeleteBucketLifecycleCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketLifecycleCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketLifecycleCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketMetricsConfigurationCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context);\n  }\n  const contents: DeleteBucketMetricsConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketMetricsConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketOwnershipControlsCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context);\n  }\n  const contents: DeleteBucketOwnershipControlsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketOwnershipControlsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketPolicyCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context);\n  }\n  const contents: DeleteBucketPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketReplicationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketReplicationCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context);\n  }\n  const contents: DeleteBucketReplicationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketReplicationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketReplicationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketTaggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketTaggingCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context);\n  }\n  const contents: DeleteBucketTaggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketTaggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketTaggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteBucketWebsiteCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketWebsiteCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context);\n  }\n  const contents: DeleteBucketWebsiteCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteBucketWebsiteCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBucketWebsiteCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteObjectCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteObjectCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteObjectCommandError(output, context);\n  }\n  const contents: DeleteObjectCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    DeleteMarker: undefined,\n    RequestCharged: undefined,\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteObjectCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteObjectCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteObjectsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteObjectsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteObjectsCommandError(output, context);\n  }\n  const contents: DeleteObjectsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Deleted: undefined,\n    Errors: undefined,\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  if (data.Deleted === \"\") {\n    contents.Deleted = [];\n  }\n  if (data[\"Deleted\"] !== undefined) {\n    contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n  }\n  if (data.Error === \"\") {\n    contents.Errors = [];\n  }\n  if (data[\"Error\"] !== undefined) {\n    contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteObjectsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteObjectsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeleteObjectTaggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteObjectTaggingCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context);\n  }\n  const contents: DeleteObjectTaggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeleteObjectTaggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteObjectTaggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlDeletePublicAccessBlockCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePublicAccessBlockCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context);\n  }\n  const contents: DeletePublicAccessBlockCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlDeletePublicAccessBlockCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePublicAccessBlockCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketAccelerateConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketAccelerateConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Status: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Status\"] !== undefined) {\n    contents.Status = data[\"Status\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketAccelerateConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketAclCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketAclCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketAclCommandError(output, context);\n  }\n  const contents: GetBucketAclCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Grants: undefined,\n    Owner: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.AccessControlList === \"\") {\n    contents.Grants = [];\n  }\n  if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n  }\n  if (data[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketAclCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketAclCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketAnalyticsConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketAnalyticsConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AnalyticsConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketAnalyticsConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketCorsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketCorsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketCorsCommandError(output, context);\n  }\n  const contents: GetBucketCorsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CORSRules: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.CORSRule === \"\") {\n    contents.CORSRules = [];\n  }\n  if (data[\"CORSRule\"] !== undefined) {\n    contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketCorsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketCorsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketEncryptionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketEncryptionCommandError(output, context);\n  }\n  const contents: GetBucketEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ServerSideEncryptionConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketIntelligentTieringConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketIntelligentTieringConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    IntelligentTieringConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketIntelligentTieringConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketInventoryConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketInventoryConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketInventoryConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    InventoryConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketInventoryConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketLifecycleConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketLifecycleConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Rules: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (data[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketLifecycleConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketLocationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketLocationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketLocationCommandError(output, context);\n  }\n  const contents: GetBucketLocationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    LocationConstraint: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"LocationConstraint\"] !== undefined) {\n    contents.LocationConstraint = data[\"LocationConstraint\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketLocationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketLocationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketLoggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketLoggingCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketLoggingCommandError(output, context);\n  }\n  const contents: GetBucketLoggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    LoggingEnabled: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"LoggingEnabled\"] !== undefined) {\n    contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketLoggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketLoggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketMetricsConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketMetricsConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketMetricsConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MetricsConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketMetricsConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketNotificationConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketNotificationConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context);\n  }\n  const contents: GetBucketNotificationConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    LambdaFunctionConfigurations: undefined,\n    QueueConfigurations: undefined,\n    TopicConfigurations: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.CloudFunctionConfiguration === \"\") {\n    contents.LambdaFunctionConfigurations = [];\n  }\n  if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n    contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(\n      __getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]),\n      context\n    );\n  }\n  if (data.QueueConfiguration === \"\") {\n    contents.QueueConfigurations = [];\n  }\n  if (data[\"QueueConfiguration\"] !== undefined) {\n    contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(\n      __getArrayIfSingleItem(data[\"QueueConfiguration\"]),\n      context\n    );\n  }\n  if (data.TopicConfiguration === \"\") {\n    contents.TopicConfigurations = [];\n  }\n  if (data[\"TopicConfiguration\"] !== undefined) {\n    contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(\n      __getArrayIfSingleItem(data[\"TopicConfiguration\"]),\n      context\n    );\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketNotificationConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketOwnershipControlsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketOwnershipControlsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context);\n  }\n  const contents: GetBucketOwnershipControlsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    OwnershipControls: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketOwnershipControlsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketOwnershipControlsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketPolicyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketPolicyCommandError(output, context);\n  }\n  const contents: GetBucketPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Policy: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Policy\"] !== undefined) {\n    contents.Policy = data[\"Policy\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketPolicyStatusCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketPolicyStatusCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context);\n  }\n  const contents: GetBucketPolicyStatusCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    PolicyStatus: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketPolicyStatusCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketPolicyStatusCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketReplicationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketReplicationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketReplicationCommandError(output, context);\n  }\n  const contents: GetBucketReplicationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ReplicationConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketReplicationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketReplicationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketRequestPaymentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketRequestPaymentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context);\n  }\n  const contents: GetBucketRequestPaymentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Payer: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Payer\"] !== undefined) {\n    contents.Payer = data[\"Payer\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketRequestPaymentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketRequestPaymentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketTaggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketTaggingCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketTaggingCommandError(output, context);\n  }\n  const contents: GetBucketTaggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TagSet: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.TagSet === \"\") {\n    contents.TagSet = [];\n  }\n  if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketTaggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketTaggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketVersioningCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketVersioningCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketVersioningCommandError(output, context);\n  }\n  const contents: GetBucketVersioningCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MFADelete: undefined,\n    Status: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"MfaDelete\"] !== undefined) {\n    contents.MFADelete = data[\"MfaDelete\"];\n  }\n  if (data[\"Status\"] !== undefined) {\n    contents.Status = data[\"Status\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketVersioningCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketVersioningCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetBucketWebsiteCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketWebsiteCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetBucketWebsiteCommandError(output, context);\n  }\n  const contents: GetBucketWebsiteCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ErrorDocument: undefined,\n    IndexDocument: undefined,\n    RedirectAllRequestsTo: undefined,\n    RoutingRules: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"ErrorDocument\"] !== undefined) {\n    contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n  }\n  if (data[\"IndexDocument\"] !== undefined) {\n    contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n  }\n  if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n    contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(\n      data[\"RedirectAllRequestsTo\"],\n      context\n    );\n  }\n  if (data.RoutingRules === \"\") {\n    contents.RoutingRules = [];\n  }\n  if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n    contents.RoutingRules = deserializeAws_restXmlRoutingRules(\n      __getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]),\n      context\n    );\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetBucketWebsiteCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBucketWebsiteCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectCommandError(output, context);\n  }\n  const contents: GetObjectCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AcceptRanges: undefined,\n    Body: undefined,\n    BucketKeyEnabled: undefined,\n    CacheControl: undefined,\n    ContentDisposition: undefined,\n    ContentEncoding: undefined,\n    ContentLanguage: undefined,\n    ContentLength: undefined,\n    ContentRange: undefined,\n    ContentType: undefined,\n    DeleteMarker: undefined,\n    ETag: undefined,\n    Expiration: undefined,\n    Expires: undefined,\n    LastModified: undefined,\n    Metadata: undefined,\n    MissingMeta: undefined,\n    ObjectLockLegalHoldStatus: undefined,\n    ObjectLockMode: undefined,\n    ObjectLockRetainUntilDate: undefined,\n    PartsCount: undefined,\n    ReplicationStatus: undefined,\n    RequestCharged: undefined,\n    Restore: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n    StorageClass: undefined,\n    TagCount: undefined,\n    VersionId: undefined,\n    WebsiteRedirectLocation: undefined,\n  };\n  if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n  }\n  if (output.headers[\"accept-ranges\"] !== undefined) {\n    contents.AcceptRanges = output.headers[\"accept-ranges\"];\n  }\n  if (output.headers[\"x-amz-expiration\"] !== undefined) {\n    contents.Expiration = output.headers[\"x-amz-expiration\"];\n  }\n  if (output.headers[\"x-amz-restore\"] !== undefined) {\n    contents.Restore = output.headers[\"x-amz-restore\"];\n  }\n  if (output.headers[\"last-modified\"] !== undefined) {\n    contents.LastModified = new Date(output.headers[\"last-modified\"]);\n  }\n  if (output.headers[\"content-length\"] !== undefined) {\n    contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n  }\n  if (output.headers[\"etag\"] !== undefined) {\n    contents.ETag = output.headers[\"etag\"];\n  }\n  if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n    contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n  }\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  if (output.headers[\"cache-control\"] !== undefined) {\n    contents.CacheControl = output.headers[\"cache-control\"];\n  }\n  if (output.headers[\"content-disposition\"] !== undefined) {\n    contents.ContentDisposition = output.headers[\"content-disposition\"];\n  }\n  if (output.headers[\"content-encoding\"] !== undefined) {\n    contents.ContentEncoding = output.headers[\"content-encoding\"];\n  }\n  if (output.headers[\"content-language\"] !== undefined) {\n    contents.ContentLanguage = output.headers[\"content-language\"];\n  }\n  if (output.headers[\"content-range\"] !== undefined) {\n    contents.ContentRange = output.headers[\"content-range\"];\n  }\n  if (output.headers[\"content-type\"] !== undefined) {\n    contents.ContentType = output.headers[\"content-type\"];\n  }\n  if (output.headers[\"expires\"] !== undefined) {\n    contents.Expires = new Date(output.headers[\"expires\"]);\n  }\n  if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n    contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n    contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n    contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n  }\n  if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n    contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n  }\n  if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n    contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n  }\n  if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n    contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n  }\n  if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n    contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n  }\n  if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n    contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n  }\n  Object.keys(output.headers).forEach((header) => {\n    if (contents.Metadata === undefined) {\n      contents.Metadata = {};\n    }\n    if (header.startsWith(\"x-amz-meta-\")) {\n      contents.Metadata[header.substring(11)] = output.headers[header];\n    }\n  });\n  const data: any = output.body;\n  contents.Body = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidObjectState\":\n    case \"com.amazonaws.s3#InvalidObjectState\":\n      response = {\n        ...(await deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NoSuchKey\":\n    case \"com.amazonaws.s3#NoSuchKey\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectAclCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectAclCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectAclCommandError(output, context);\n  }\n  const contents: GetObjectAclCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Grants: undefined,\n    Owner: undefined,\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  if (data.AccessControlList === \"\") {\n    contents.Grants = [];\n  }\n  if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n  }\n  if (data[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectAclCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectAclCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchKey\":\n    case \"com.amazonaws.s3#NoSuchKey\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectLegalHoldCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectLegalHoldCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context);\n  }\n  const contents: GetObjectLegalHoldCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    LegalHold: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectLegalHoldCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectLegalHoldCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectLockConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectLockConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context);\n  }\n  const contents: GetObjectLockConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ObjectLockConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectLockConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectLockConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectRetentionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectRetentionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectRetentionCommandError(output, context);\n  }\n  const contents: GetObjectRetentionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Retention: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectRetentionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectRetentionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectTaggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectTaggingCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectTaggingCommandError(output, context);\n  }\n  const contents: GetObjectTaggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TagSet: undefined,\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  if (data.TagSet === \"\") {\n    contents.TagSet = [];\n  }\n  if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectTaggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectTaggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetObjectTorrentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectTorrentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetObjectTorrentCommandError(output, context);\n  }\n  const contents: GetObjectTorrentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Body: undefined,\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = output.body;\n  contents.Body = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetObjectTorrentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetObjectTorrentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlGetPublicAccessBlockCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPublicAccessBlockCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context);\n  }\n  const contents: GetPublicAccessBlockCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    PublicAccessBlockConfiguration: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlGetPublicAccessBlockCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPublicAccessBlockCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlHeadBucketCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<HeadBucketCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlHeadBucketCommandError(output, context);\n  }\n  const contents: HeadBucketCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlHeadBucketCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<HeadBucketCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchBucket\":\n    case \"com.amazonaws.s3#NoSuchBucket\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlHeadObjectCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<HeadObjectCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlHeadObjectCommandError(output, context);\n  }\n  const contents: HeadObjectCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AcceptRanges: undefined,\n    ArchiveStatus: undefined,\n    BucketKeyEnabled: undefined,\n    CacheControl: undefined,\n    ContentDisposition: undefined,\n    ContentEncoding: undefined,\n    ContentLanguage: undefined,\n    ContentLength: undefined,\n    ContentType: undefined,\n    DeleteMarker: undefined,\n    ETag: undefined,\n    Expiration: undefined,\n    Expires: undefined,\n    LastModified: undefined,\n    Metadata: undefined,\n    MissingMeta: undefined,\n    ObjectLockLegalHoldStatus: undefined,\n    ObjectLockMode: undefined,\n    ObjectLockRetainUntilDate: undefined,\n    PartsCount: undefined,\n    ReplicationStatus: undefined,\n    RequestCharged: undefined,\n    Restore: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n    StorageClass: undefined,\n    VersionId: undefined,\n    WebsiteRedirectLocation: undefined,\n  };\n  if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n  }\n  if (output.headers[\"accept-ranges\"] !== undefined) {\n    contents.AcceptRanges = output.headers[\"accept-ranges\"];\n  }\n  if (output.headers[\"x-amz-expiration\"] !== undefined) {\n    contents.Expiration = output.headers[\"x-amz-expiration\"];\n  }\n  if (output.headers[\"x-amz-restore\"] !== undefined) {\n    contents.Restore = output.headers[\"x-amz-restore\"];\n  }\n  if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n    contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n  }\n  if (output.headers[\"last-modified\"] !== undefined) {\n    contents.LastModified = new Date(output.headers[\"last-modified\"]);\n  }\n  if (output.headers[\"content-length\"] !== undefined) {\n    contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n  }\n  if (output.headers[\"etag\"] !== undefined) {\n    contents.ETag = output.headers[\"etag\"];\n  }\n  if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n    contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n  }\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  if (output.headers[\"cache-control\"] !== undefined) {\n    contents.CacheControl = output.headers[\"cache-control\"];\n  }\n  if (output.headers[\"content-disposition\"] !== undefined) {\n    contents.ContentDisposition = output.headers[\"content-disposition\"];\n  }\n  if (output.headers[\"content-encoding\"] !== undefined) {\n    contents.ContentEncoding = output.headers[\"content-encoding\"];\n  }\n  if (output.headers[\"content-language\"] !== undefined) {\n    contents.ContentLanguage = output.headers[\"content-language\"];\n  }\n  if (output.headers[\"content-type\"] !== undefined) {\n    contents.ContentType = output.headers[\"content-type\"];\n  }\n  if (output.headers[\"expires\"] !== undefined) {\n    contents.Expires = new Date(output.headers[\"expires\"]);\n  }\n  if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n    contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n    contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n    contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n  }\n  if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n    contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n  }\n  if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n    contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n  }\n  if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n    contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n  }\n  if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n    contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n  }\n  Object.keys(output.headers).forEach((header) => {\n    if (contents.Metadata === undefined) {\n      contents.Metadata = {};\n    }\n    if (header.startsWith(\"x-amz-meta-\")) {\n      contents.Metadata[header.substring(11)] = output.headers[header];\n    }\n  });\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlHeadObjectCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<HeadObjectCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchKey\":\n    case \"com.amazonaws.s3#NoSuchKey\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketAnalyticsConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context);\n  }\n  const contents: ListBucketAnalyticsConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AnalyticsConfigurationList: undefined,\n    ContinuationToken: undefined,\n    IsTruncated: undefined,\n    NextContinuationToken: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.AnalyticsConfiguration === \"\") {\n    contents.AnalyticsConfigurationList = [];\n  }\n  if (data[\"AnalyticsConfiguration\"] !== undefined) {\n    contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(\n      __getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]),\n      context\n    );\n  }\n  if (data[\"ContinuationToken\"] !== undefined) {\n    contents.ContinuationToken = data[\"ContinuationToken\"];\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"NextContinuationToken\"] !== undefined) {\n    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketAnalyticsConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketIntelligentTieringConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context);\n  }\n  const contents: ListBucketIntelligentTieringConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ContinuationToken: undefined,\n    IntelligentTieringConfigurationList: undefined,\n    IsTruncated: undefined,\n    NextContinuationToken: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"ContinuationToken\"] !== undefined) {\n    contents.ContinuationToken = data[\"ContinuationToken\"];\n  }\n  if (data.IntelligentTieringConfiguration === \"\") {\n    contents.IntelligentTieringConfigurationList = [];\n  }\n  if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n    contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(\n      __getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]),\n      context\n    );\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"NextContinuationToken\"] !== undefined) {\n    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketIntelligentTieringConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListBucketInventoryConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketInventoryConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context);\n  }\n  const contents: ListBucketInventoryConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ContinuationToken: undefined,\n    InventoryConfigurationList: undefined,\n    IsTruncated: undefined,\n    NextContinuationToken: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"ContinuationToken\"] !== undefined) {\n    contents.ContinuationToken = data[\"ContinuationToken\"];\n  }\n  if (data.InventoryConfiguration === \"\") {\n    contents.InventoryConfigurationList = [];\n  }\n  if (data[\"InventoryConfiguration\"] !== undefined) {\n    contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(\n      __getArrayIfSingleItem(data[\"InventoryConfiguration\"]),\n      context\n    );\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"NextContinuationToken\"] !== undefined) {\n    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketInventoryConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListBucketMetricsConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketMetricsConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context);\n  }\n  const contents: ListBucketMetricsConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ContinuationToken: undefined,\n    IsTruncated: undefined,\n    MetricsConfigurationList: undefined,\n    NextContinuationToken: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"ContinuationToken\"] !== undefined) {\n    contents.ContinuationToken = data[\"ContinuationToken\"];\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data.MetricsConfiguration === \"\") {\n    contents.MetricsConfigurationList = [];\n  }\n  if (data[\"MetricsConfiguration\"] !== undefined) {\n    contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(\n      __getArrayIfSingleItem(data[\"MetricsConfiguration\"]),\n      context\n    );\n  }\n  if (data[\"NextContinuationToken\"] !== undefined) {\n    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketMetricsConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListBucketsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListBucketsCommandError(output, context);\n  }\n  const contents: ListBucketsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Buckets: undefined,\n    Owner: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.Buckets === \"\") {\n    contents.Buckets = [];\n  }\n  if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n    contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n  }\n  if (data[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListBucketsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListBucketsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListMultipartUploadsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListMultipartUploadsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListMultipartUploadsCommandError(output, context);\n  }\n  const contents: ListMultipartUploadsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Bucket: undefined,\n    CommonPrefixes: undefined,\n    Delimiter: undefined,\n    EncodingType: undefined,\n    IsTruncated: undefined,\n    KeyMarker: undefined,\n    MaxUploads: undefined,\n    NextKeyMarker: undefined,\n    NextUploadIdMarker: undefined,\n    Prefix: undefined,\n    UploadIdMarker: undefined,\n    Uploads: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Bucket\"] !== undefined) {\n    contents.Bucket = data[\"Bucket\"];\n  }\n  if (data.CommonPrefixes === \"\") {\n    contents.CommonPrefixes = [];\n  }\n  if (data[\"CommonPrefixes\"] !== undefined) {\n    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(\n      __getArrayIfSingleItem(data[\"CommonPrefixes\"]),\n      context\n    );\n  }\n  if (data[\"Delimiter\"] !== undefined) {\n    contents.Delimiter = data[\"Delimiter\"];\n  }\n  if (data[\"EncodingType\"] !== undefined) {\n    contents.EncodingType = data[\"EncodingType\"];\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"KeyMarker\"] !== undefined) {\n    contents.KeyMarker = data[\"KeyMarker\"];\n  }\n  if (data[\"MaxUploads\"] !== undefined) {\n    contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n  }\n  if (data[\"NextKeyMarker\"] !== undefined) {\n    contents.NextKeyMarker = data[\"NextKeyMarker\"];\n  }\n  if (data[\"NextUploadIdMarker\"] !== undefined) {\n    contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n  }\n  if (data[\"Prefix\"] !== undefined) {\n    contents.Prefix = data[\"Prefix\"];\n  }\n  if (data[\"UploadIdMarker\"] !== undefined) {\n    contents.UploadIdMarker = data[\"UploadIdMarker\"];\n  }\n  if (data.Upload === \"\") {\n    contents.Uploads = [];\n  }\n  if (data[\"Upload\"] !== undefined) {\n    contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListMultipartUploadsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListMultipartUploadsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListObjectsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListObjectsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListObjectsCommandError(output, context);\n  }\n  const contents: ListObjectsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CommonPrefixes: undefined,\n    Contents: undefined,\n    Delimiter: undefined,\n    EncodingType: undefined,\n    IsTruncated: undefined,\n    Marker: undefined,\n    MaxKeys: undefined,\n    Name: undefined,\n    NextMarker: undefined,\n    Prefix: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.CommonPrefixes === \"\") {\n    contents.CommonPrefixes = [];\n  }\n  if (data[\"CommonPrefixes\"] !== undefined) {\n    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(\n      __getArrayIfSingleItem(data[\"CommonPrefixes\"]),\n      context\n    );\n  }\n  if (data.Contents === \"\") {\n    contents.Contents = [];\n  }\n  if (data[\"Contents\"] !== undefined) {\n    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n  }\n  if (data[\"Delimiter\"] !== undefined) {\n    contents.Delimiter = data[\"Delimiter\"];\n  }\n  if (data[\"EncodingType\"] !== undefined) {\n    contents.EncodingType = data[\"EncodingType\"];\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"Marker\"] !== undefined) {\n    contents.Marker = data[\"Marker\"];\n  }\n  if (data[\"MaxKeys\"] !== undefined) {\n    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n  }\n  if (data[\"Name\"] !== undefined) {\n    contents.Name = data[\"Name\"];\n  }\n  if (data[\"NextMarker\"] !== undefined) {\n    contents.NextMarker = data[\"NextMarker\"];\n  }\n  if (data[\"Prefix\"] !== undefined) {\n    contents.Prefix = data[\"Prefix\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListObjectsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListObjectsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchBucket\":\n    case \"com.amazonaws.s3#NoSuchBucket\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListObjectsV2Command = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListObjectsV2CommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListObjectsV2CommandError(output, context);\n  }\n  const contents: ListObjectsV2CommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CommonPrefixes: undefined,\n    Contents: undefined,\n    ContinuationToken: undefined,\n    Delimiter: undefined,\n    EncodingType: undefined,\n    IsTruncated: undefined,\n    KeyCount: undefined,\n    MaxKeys: undefined,\n    Name: undefined,\n    NextContinuationToken: undefined,\n    Prefix: undefined,\n    StartAfter: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.CommonPrefixes === \"\") {\n    contents.CommonPrefixes = [];\n  }\n  if (data[\"CommonPrefixes\"] !== undefined) {\n    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(\n      __getArrayIfSingleItem(data[\"CommonPrefixes\"]),\n      context\n    );\n  }\n  if (data.Contents === \"\") {\n    contents.Contents = [];\n  }\n  if (data[\"Contents\"] !== undefined) {\n    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n  }\n  if (data[\"ContinuationToken\"] !== undefined) {\n    contents.ContinuationToken = data[\"ContinuationToken\"];\n  }\n  if (data[\"Delimiter\"] !== undefined) {\n    contents.Delimiter = data[\"Delimiter\"];\n  }\n  if (data[\"EncodingType\"] !== undefined) {\n    contents.EncodingType = data[\"EncodingType\"];\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"KeyCount\"] !== undefined) {\n    contents.KeyCount = parseInt(data[\"KeyCount\"]);\n  }\n  if (data[\"MaxKeys\"] !== undefined) {\n    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n  }\n  if (data[\"Name\"] !== undefined) {\n    contents.Name = data[\"Name\"];\n  }\n  if (data[\"NextContinuationToken\"] !== undefined) {\n    contents.NextContinuationToken = data[\"NextContinuationToken\"];\n  }\n  if (data[\"Prefix\"] !== undefined) {\n    contents.Prefix = data[\"Prefix\"];\n  }\n  if (data[\"StartAfter\"] !== undefined) {\n    contents.StartAfter = data[\"StartAfter\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListObjectsV2CommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListObjectsV2CommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchBucket\":\n    case \"com.amazonaws.s3#NoSuchBucket\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListObjectVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListObjectVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListObjectVersionsCommandError(output, context);\n  }\n  const contents: ListObjectVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CommonPrefixes: undefined,\n    DeleteMarkers: undefined,\n    Delimiter: undefined,\n    EncodingType: undefined,\n    IsTruncated: undefined,\n    KeyMarker: undefined,\n    MaxKeys: undefined,\n    Name: undefined,\n    NextKeyMarker: undefined,\n    NextVersionIdMarker: undefined,\n    Prefix: undefined,\n    VersionIdMarker: undefined,\n    Versions: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  if (data.CommonPrefixes === \"\") {\n    contents.CommonPrefixes = [];\n  }\n  if (data[\"CommonPrefixes\"] !== undefined) {\n    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(\n      __getArrayIfSingleItem(data[\"CommonPrefixes\"]),\n      context\n    );\n  }\n  if (data.DeleteMarker === \"\") {\n    contents.DeleteMarkers = [];\n  }\n  if (data[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n  }\n  if (data[\"Delimiter\"] !== undefined) {\n    contents.Delimiter = data[\"Delimiter\"];\n  }\n  if (data[\"EncodingType\"] !== undefined) {\n    contents.EncodingType = data[\"EncodingType\"];\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"KeyMarker\"] !== undefined) {\n    contents.KeyMarker = data[\"KeyMarker\"];\n  }\n  if (data[\"MaxKeys\"] !== undefined) {\n    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n  }\n  if (data[\"Name\"] !== undefined) {\n    contents.Name = data[\"Name\"];\n  }\n  if (data[\"NextKeyMarker\"] !== undefined) {\n    contents.NextKeyMarker = data[\"NextKeyMarker\"];\n  }\n  if (data[\"NextVersionIdMarker\"] !== undefined) {\n    contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n  }\n  if (data[\"Prefix\"] !== undefined) {\n    contents.Prefix = data[\"Prefix\"];\n  }\n  if (data[\"VersionIdMarker\"] !== undefined) {\n    contents.VersionIdMarker = data[\"VersionIdMarker\"];\n  }\n  if (data.Version === \"\") {\n    contents.Versions = [];\n  }\n  if (data[\"Version\"] !== undefined) {\n    contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListObjectVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListObjectVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlListPartsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListPartsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlListPartsCommandError(output, context);\n  }\n  const contents: ListPartsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AbortDate: undefined,\n    AbortRuleId: undefined,\n    Bucket: undefined,\n    Initiator: undefined,\n    IsTruncated: undefined,\n    Key: undefined,\n    MaxParts: undefined,\n    NextPartNumberMarker: undefined,\n    Owner: undefined,\n    PartNumberMarker: undefined,\n    Parts: undefined,\n    RequestCharged: undefined,\n    StorageClass: undefined,\n    UploadId: undefined,\n  };\n  if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n    contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n  }\n  if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  if (data[\"Bucket\"] !== undefined) {\n    contents.Bucket = data[\"Bucket\"];\n  }\n  if (data[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n  }\n  if (data[\"IsTruncated\"] !== undefined) {\n    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n  }\n  if (data[\"Key\"] !== undefined) {\n    contents.Key = data[\"Key\"];\n  }\n  if (data[\"MaxParts\"] !== undefined) {\n    contents.MaxParts = parseInt(data[\"MaxParts\"]);\n  }\n  if (data[\"NextPartNumberMarker\"] !== undefined) {\n    contents.NextPartNumberMarker = data[\"NextPartNumberMarker\"];\n  }\n  if (data[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n  }\n  if (data[\"PartNumberMarker\"] !== undefined) {\n    contents.PartNumberMarker = data[\"PartNumberMarker\"];\n  }\n  if (data.Part === \"\") {\n    contents.Parts = [];\n  }\n  if (data[\"Part\"] !== undefined) {\n    contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n  }\n  if (data[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = data[\"StorageClass\"];\n  }\n  if (data[\"UploadId\"] !== undefined) {\n    contents.UploadId = data[\"UploadId\"];\n  }\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlListPartsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListPartsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketAccelerateConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketAccelerateConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketAccelerateConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketAclCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketAclCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketAclCommandError(output, context);\n  }\n  const contents: PutBucketAclCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketAclCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketAclCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketAnalyticsConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketAnalyticsConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketAnalyticsConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketCorsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketCorsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketCorsCommandError(output, context);\n  }\n  const contents: PutBucketCorsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketCorsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketCorsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketEncryptionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketEncryptionCommandError(output, context);\n  }\n  const contents: PutBucketEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketIntelligentTieringConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketIntelligentTieringConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketIntelligentTieringConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketInventoryConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketInventoryConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketInventoryConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketInventoryConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketLifecycleConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketLifecycleConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketLifecycleConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketLoggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketLoggingCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketLoggingCommandError(output, context);\n  }\n  const contents: PutBucketLoggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketLoggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketLoggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketMetricsConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketMetricsConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketMetricsConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketMetricsConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketNotificationConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketNotificationConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context);\n  }\n  const contents: PutBucketNotificationConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketNotificationConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketOwnershipControlsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketOwnershipControlsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context);\n  }\n  const contents: PutBucketOwnershipControlsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketOwnershipControlsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketOwnershipControlsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketPolicyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketPolicyCommandError(output, context);\n  }\n  const contents: PutBucketPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketReplicationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketReplicationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketReplicationCommandError(output, context);\n  }\n  const contents: PutBucketReplicationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketReplicationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketReplicationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketRequestPaymentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketRequestPaymentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context);\n  }\n  const contents: PutBucketRequestPaymentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketRequestPaymentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketRequestPaymentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketTaggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketTaggingCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketTaggingCommandError(output, context);\n  }\n  const contents: PutBucketTaggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketTaggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketTaggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketVersioningCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketVersioningCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketVersioningCommandError(output, context);\n  }\n  const contents: PutBucketVersioningCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketVersioningCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketVersioningCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutBucketWebsiteCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketWebsiteCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutBucketWebsiteCommandError(output, context);\n  }\n  const contents: PutBucketWebsiteCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutBucketWebsiteCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutBucketWebsiteCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutObjectCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutObjectCommandError(output, context);\n  }\n  const contents: PutObjectCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BucketKeyEnabled: undefined,\n    ETag: undefined,\n    Expiration: undefined,\n    RequestCharged: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSEncryptionContext: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-expiration\"] !== undefined) {\n    contents.Expiration = output.headers[\"x-amz-expiration\"];\n  }\n  if (output.headers[\"etag\"] !== undefined) {\n    contents.ETag = output.headers[\"etag\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutObjectCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutObjectAclCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectAclCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutObjectAclCommandError(output, context);\n  }\n  const contents: PutObjectAclCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutObjectAclCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectAclCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"NoSuchKey\":\n    case \"com.amazonaws.s3#NoSuchKey\":\n      response = {\n        ...(await deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutObjectLegalHoldCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectLegalHoldCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context);\n  }\n  const contents: PutObjectLegalHoldCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutObjectLegalHoldCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectLegalHoldCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutObjectLockConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectLockConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context);\n  }\n  const contents: PutObjectLockConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutObjectLockConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectLockConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutObjectRetentionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectRetentionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutObjectRetentionCommandError(output, context);\n  }\n  const contents: PutObjectRetentionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RequestCharged: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutObjectRetentionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectRetentionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutObjectTaggingCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectTaggingCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutObjectTaggingCommandError(output, context);\n  }\n  const contents: PutObjectTaggingCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VersionId: undefined,\n  };\n  if (output.headers[\"x-amz-version-id\"] !== undefined) {\n    contents.VersionId = output.headers[\"x-amz-version-id\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutObjectTaggingCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutObjectTaggingCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlPutPublicAccessBlockCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutPublicAccessBlockCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context);\n  }\n  const contents: PutPublicAccessBlockCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlPutPublicAccessBlockCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutPublicAccessBlockCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlRestoreObjectCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RestoreObjectCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlRestoreObjectCommandError(output, context);\n  }\n  const contents: RestoreObjectCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RequestCharged: undefined,\n    RestoreOutputPath: undefined,\n  };\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n    contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlRestoreObjectCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RestoreObjectCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ObjectAlreadyInActiveTierError\":\n    case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n      response = {\n        ...(await deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlSelectObjectContentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext & __EventStreamSerdeContext\n): Promise<SelectObjectContentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlSelectObjectContentCommandError(output, context);\n  }\n  const contents: SelectObjectContentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    Payload: undefined,\n  };\n  const data: any = context.eventStreamMarshaller.deserialize(output.body, async (event) => {\n    const eventName = Object.keys(event)[0];\n    const eventHeaders = Object.entries(event[eventName].headers).reduce((accummulator, curr) => {\n      accummulator[curr[0]] = curr[1].value;\n      return accummulator;\n    }, {} as { [key: string]: any });\n    const eventMessage = {\n      headers: eventHeaders,\n      body: event[eventName].body,\n    };\n    const parsedEvent = {\n      [eventName]: eventMessage,\n    };\n    return await deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context);\n  });\n  contents.Payload = data;\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlSelectObjectContentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SelectObjectContentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlUploadPartCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UploadPartCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlUploadPartCommandError(output, context);\n  }\n  const contents: UploadPartCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BucketKeyEnabled: undefined,\n    ETag: undefined,\n    RequestCharged: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n  };\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"etag\"] !== undefined) {\n    contents.ETag = output.headers[\"etag\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlUploadPartCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UploadPartCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restXmlUploadPartCopyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UploadPartCopyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restXmlUploadPartCopyCommandError(output, context);\n  }\n  const contents: UploadPartCopyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BucketKeyEnabled: undefined,\n    CopyPartResult: undefined,\n    CopySourceVersionId: undefined,\n    RequestCharged: undefined,\n    SSECustomerAlgorithm: undefined,\n    SSECustomerKeyMD5: undefined,\n    SSEKMSKeyId: undefined,\n    ServerSideEncryption: undefined,\n  };\n  if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n  }\n  if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n  }\n  if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n  }\n  const data: any = await parseBody(output.body, context);\n  contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restXmlUploadPartCopyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UploadPartCopyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_restXmlSelectObjectContentEventStream_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<SelectObjectContentEventStream> => {\n  if (output[\"Records\"] !== undefined) {\n    return {\n      Records: await deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context),\n    };\n  }\n  if (output[\"Stats\"] !== undefined) {\n    return {\n      Stats: await deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context),\n    };\n  }\n  if (output[\"Progress\"] !== undefined) {\n    return {\n      Progress: await deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context),\n    };\n  }\n  if (output[\"Cont\"] !== undefined) {\n    return {\n      Cont: await deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context),\n    };\n  }\n  if (output[\"End\"] !== undefined) {\n    return {\n      End: await deserializeAws_restXmlEndEvent_event(output[\"End\"], context),\n    };\n  }\n  return { $unknown: output };\n};\nconst deserializeAws_restXmlContinuationEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<ContinuationEvent> => {\n  let contents: ContinuationEvent = {} as any;\n  return contents;\n};\nconst deserializeAws_restXmlEndEvent_event = async (output: any, context: __SerdeContext): Promise<EndEvent> => {\n  let contents: EndEvent = {} as any;\n  return contents;\n};\nconst deserializeAws_restXmlProgressEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<ProgressEvent> => {\n  let contents: ProgressEvent = {} as any;\n  contents.Details = await parseBody(output.body, context);\n  return contents;\n};\nconst deserializeAws_restXmlRecordsEvent_event = async (\n  output: any,\n  context: __SerdeContext\n): Promise<RecordsEvent> => {\n  let contents: RecordsEvent = {} as any;\n  contents.Payload = output.body;\n  return contents;\n};\nconst deserializeAws_restXmlStatsEvent_event = async (output: any, context: __SerdeContext): Promise<StatsEvent> => {\n  let contents: StatsEvent = {} as any;\n  contents.Details = await parseBody(output.body, context);\n  return contents;\n};\nconst deserializeAws_restXmlBucketAlreadyExistsResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BucketAlreadyExists> => {\n  const contents: BucketAlreadyExists = {\n    name: \"BucketAlreadyExists\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BucketAlreadyOwnedByYou> => {\n  const contents: BucketAlreadyOwnedByYou = {\n    name: \"BucketAlreadyOwnedByYou\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst deserializeAws_restXmlInvalidObjectStateResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidObjectState> => {\n  const contents: InvalidObjectState = {\n    name: \"InvalidObjectState\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    AccessTier: undefined,\n    StorageClass: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = data[\"AccessTier\"];\n  }\n  if (data[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = data[\"StorageClass\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlNoSuchBucketResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NoSuchBucket> => {\n  const contents: NoSuchBucket = {\n    name: \"NoSuchBucket\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst deserializeAws_restXmlNoSuchKeyResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NoSuchKey> => {\n  const contents: NoSuchKey = {\n    name: \"NoSuchKey\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst deserializeAws_restXmlNoSuchUploadResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NoSuchUpload> => {\n  const contents: NoSuchUpload = {\n    name: \"NoSuchUpload\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ObjectAlreadyInActiveTierError> => {\n  const contents: ObjectAlreadyInActiveTierError = {\n    name: \"ObjectAlreadyInActiveTierError\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectNotInActiveTierErrorResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ObjectNotInActiveTierError> => {\n  const contents: ObjectNotInActiveTierError = {\n    name: \"ObjectNotInActiveTierError\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n  };\n  const data: any = parsedOutput.body;\n  return contents;\n};\n\nconst serializeAws_restXmlAbortIncompleteMultipartUpload = (\n  input: AbortIncompleteMultipartUpload,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n    const node = new __XmlNode(\"DaysAfterInitiation\")\n      .addChildNode(new __XmlText(String(input.DaysAfterInitiation)))\n      .withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAccelerateConfiguration = (input: AccelerateConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAccessControlPolicy = (input: AccessControlPolicy, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"AccessControlPolicy\");\n  if (input.Grants !== undefined && input.Grants !== null) {\n    const nodes = serializeAws_restXmlGrants(input.Grants, context);\n    const containerNode = new __XmlNode(\"AccessControlList\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  if (input.Owner !== undefined && input.Owner !== null) {\n    const node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAccessControlTranslation = (\n  input: AccessControlTranslation,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"AccessControlTranslation\");\n  if (input.Owner !== undefined && input.Owner !== null) {\n    const node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAllowedHeaders = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlAllowedMethods = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlAllowedOrigins = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlAnalyticsAndOperator = (input: AnalyticsAndOperator, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    const nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAnalyticsConfiguration = (input: AnalyticsConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n    const node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\n      \"StorageClassAnalysis\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAnalyticsExportDestination = (\n  input: AnalyticsExportDestination,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    const node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\n      \"S3BucketDestination\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAnalyticsFilter = (input: AnalyticsFilter, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"AnalyticsFilter\");\n  AnalyticsFilter.visit(input, {\n    Prefix: (value) => {\n      const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: (value) => {\n      const node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: (value) => {\n      const node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: (name: string, value: any) => {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    },\n  });\n  return bodyNode;\n};\n\nconst serializeAws_restXmlAnalyticsS3BucketDestination = (\n  input: AnalyticsS3BucketDestination,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n  if (input.Format !== undefined && input.Format !== null) {\n    const node = new __XmlNode(\"AnalyticsS3ExportFileFormat\")\n      .addChildNode(new __XmlText(input.Format))\n      .withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n    const node = new __XmlNode(\"AccountId\")\n      .addChildNode(new __XmlText(input.BucketAccountId))\n      .withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    const node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlBucketLifecycleConfiguration = (\n  input: BucketLifecycleConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n  if (input.Rules !== undefined && input.Rules !== null) {\n    const nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlBucketLoggingStatus = (input: BucketLoggingStatus, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n    const node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCompletedMultipartUpload = (\n  input: CompletedMultipartUpload,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n  if (input.Parts !== undefined && input.Parts !== null) {\n    const nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCompletedPart = (input: CompletedPart, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"CompletedPart\");\n  if (input.ETag !== undefined && input.ETag !== null) {\n    const node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.PartNumber !== undefined && input.PartNumber !== null) {\n    const node = new __XmlNode(\"PartNumber\")\n      .addChildNode(new __XmlText(String(input.PartNumber)))\n      .withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCompletedPartList = (input: CompletedPart[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlCompletedPart(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlCondition = (input: Condition, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Condition\");\n  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n    const node = new __XmlNode(\"HttpErrorCodeReturnedEquals\")\n      .addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals))\n      .withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n    const node = new __XmlNode(\"KeyPrefixEquals\")\n      .addChildNode(new __XmlText(input.KeyPrefixEquals))\n      .withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCORSConfiguration = (input: CORSConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"CORSConfiguration\");\n  if (input.CORSRules !== undefined && input.CORSRules !== null) {\n    const nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCORSRule = (input: CORSRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"CORSRule\");\n  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n    const nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n    const nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n    const nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n    const nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n    const node = new __XmlNode(\"MaxAgeSeconds\")\n      .addChildNode(new __XmlText(String(input.MaxAgeSeconds)))\n      .withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCORSRules = (input: CORSRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlCORSRule(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlCreateBucketConfiguration = (\n  input: CreateBucketConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n    const node = new __XmlNode(\"BucketLocationConstraint\")\n      .addChildNode(new __XmlText(input.LocationConstraint))\n      .withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCSVInput = (input: CSVInput, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"CSVInput\");\n  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n    const node = new __XmlNode(\"FileHeaderInfo\")\n      .addChildNode(new __XmlText(input.FileHeaderInfo))\n      .withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Comments !== undefined && input.Comments !== null) {\n    const node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    const node = new __XmlNode(\"QuoteEscapeCharacter\")\n      .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n      .withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    const node = new __XmlNode(\"RecordDelimiter\")\n      .addChildNode(new __XmlText(input.RecordDelimiter))\n      .withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    const node = new __XmlNode(\"FieldDelimiter\")\n      .addChildNode(new __XmlText(input.FieldDelimiter))\n      .withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    const node = new __XmlNode(\"QuoteCharacter\")\n      .addChildNode(new __XmlText(input.QuoteCharacter))\n      .withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n    const node = new __XmlNode(\"AllowQuotedRecordDelimiter\")\n      .addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter)))\n      .withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlCSVOutput = (input: CSVOutput, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"CSVOutput\");\n  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n    const node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    const node = new __XmlNode(\"QuoteEscapeCharacter\")\n      .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\n      .withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    const node = new __XmlNode(\"RecordDelimiter\")\n      .addChildNode(new __XmlText(input.RecordDelimiter))\n      .withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    const node = new __XmlNode(\"FieldDelimiter\")\n      .addChildNode(new __XmlText(input.FieldDelimiter))\n      .withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    const node = new __XmlNode(\"QuoteCharacter\")\n      .addChildNode(new __XmlText(input.QuoteCharacter))\n      .withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlDefaultRetention = (input: DefaultRetention, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"DefaultRetention\");\n  if (input.Mode !== undefined && input.Mode !== null) {\n    const node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Days !== undefined && input.Days !== null) {\n    const node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Years !== undefined && input.Years !== null) {\n    const node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlDelete = (input: Delete, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Delete\");\n  if (input.Objects !== undefined && input.Objects !== null) {\n    const nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Quiet !== undefined && input.Quiet !== null) {\n    const node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlDeleteMarkerReplication = (input: DeleteMarkerReplication, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"DeleteMarkerReplicationStatus\")\n      .addChildNode(new __XmlText(input.Status))\n      .withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlDestination = (input: Destination, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Destination\");\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    const node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Account !== undefined && input.Account !== null) {\n    const node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    const node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n    const node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\n      \"AccessControlTranslation\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n    const node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\n      \"EncryptionConfiguration\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n    const node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Metrics !== undefined && input.Metrics !== null) {\n    const node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlEncryption = (input: Encryption, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Encryption\");\n  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n    const node = new __XmlNode(\"ServerSideEncryption\")\n      .addChildNode(new __XmlText(input.EncryptionType))\n      .withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n    const node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KMSContext !== undefined && input.KMSContext !== null) {\n    const node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlEncryptionConfiguration = (input: EncryptionConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n    const node = new __XmlNode(\"ReplicaKmsKeyID\")\n      .addChildNode(new __XmlText(input.ReplicaKmsKeyID))\n      .withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlErrorDocument = (input: ErrorDocument, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ErrorDocument\");\n  if (input.Key !== undefined && input.Key !== null) {\n    const node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlEventList = (input: (Event | string)[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlExistingObjectReplication = (\n  input: ExistingObjectReplication,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"ExistingObjectReplicationStatus\")\n      .addChildNode(new __XmlText(input.Status))\n      .withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlExposeHeaders = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlFilterRule = (input: FilterRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"FilterRule\");\n  if (input.Name !== undefined && input.Name !== null) {\n    const node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Value !== undefined && input.Value !== null) {\n    const node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlFilterRuleList = (input: FilterRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlFilterRule(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlGlacierJobParameters = (input: GlacierJobParameters, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"GlacierJobParameters\");\n  if (input.Tier !== undefined && input.Tier !== null) {\n    const node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlGrant = (input: Grant, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Grant\");\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    const node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Permission !== undefined && input.Permission !== null) {\n    const node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlGrantee = (input: Grantee, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Grantee\");\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    const node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n    const node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ID !== undefined && input.ID !== null) {\n    const node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.URI !== undefined && input.URI !== null) {\n    const node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Type !== undefined && input.Type !== null) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlGrants = (input: Grant[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlGrant(entry, context);\n      return node.withName(\"Grant\");\n    });\n};\n\nconst serializeAws_restXmlIndexDocument = (input: IndexDocument, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"IndexDocument\");\n  if (input.Suffix !== undefined && input.Suffix !== null) {\n    const node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInputSerialization = (input: InputSerialization, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"InputSerialization\");\n  if (input.CSV !== undefined && input.CSV !== null) {\n    const node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.CompressionType !== undefined && input.CompressionType !== null) {\n    const node = new __XmlNode(\"CompressionType\")\n      .addChildNode(new __XmlText(input.CompressionType))\n      .withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.JSON !== undefined && input.JSON !== null) {\n    const node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Parquet !== undefined && input.Parquet !== null) {\n    const node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlIntelligentTieringAndOperator = (\n  input: IntelligentTieringAndOperator,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    const nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlIntelligentTieringConfiguration = (\n  input: IntelligentTieringConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tierings !== undefined && input.Tierings !== null) {\n    const nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Tiering\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlIntelligentTieringFilter = (\n  input: IntelligentTieringFilter,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tag !== undefined && input.Tag !== null) {\n    const node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.And !== undefined && input.And !== null) {\n    const node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInventoryConfiguration = (input: InventoryConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"InventoryConfiguration\");\n  if (input.Destination !== undefined && input.Destination !== null) {\n    const node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n    const node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n    const node = new __XmlNode(\"InventoryIncludedObjectVersions\")\n      .addChildNode(new __XmlText(input.IncludedObjectVersions))\n      .withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n    const nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    const containerNode = new __XmlNode(\"OptionalFields\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  if (input.Schedule !== undefined && input.Schedule !== null) {\n    const node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInventoryDestination = (input: InventoryDestination, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"InventoryDestination\");\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    const node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\n      \"S3BucketDestination\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInventoryEncryption = (input: InventoryEncryption, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"InventoryEncryption\");\n  if (input.SSES3 !== undefined && input.SSES3 !== null) {\n    const node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n    const node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInventoryFilter = (input: InventoryFilter, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"InventoryFilter\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInventoryOptionalFields = (\n  input: (InventoryOptionalField | string)[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n      return node.withName(\"Field\");\n    });\n};\n\nconst serializeAws_restXmlInventoryS3BucketDestination = (\n  input: InventoryS3BucketDestination,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n  if (input.AccountId !== undefined && input.AccountId !== null) {\n    const node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    const node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Format !== undefined && input.Format !== null) {\n    const node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    const node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlInventorySchedule = (input: InventorySchedule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"InventorySchedule\");\n  if (input.Frequency !== undefined && input.Frequency !== null) {\n    const node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlJSONInput = (input: JSONInput, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"JSONInput\");\n  if (input.Type !== undefined && input.Type !== null) {\n    const node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlJSONOutput = (input: JSONOutput, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"JSONOutput\");\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    const node = new __XmlNode(\"RecordDelimiter\")\n      .addChildNode(new __XmlText(input.RecordDelimiter))\n      .withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlLambdaFunctionConfiguration = (\n  input: LambdaFunctionConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n    const node = new __XmlNode(\"LambdaFunctionArn\")\n      .addChildNode(new __XmlText(input.LambdaFunctionArn))\n      .withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Events !== undefined && input.Events !== null) {\n    const nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlLambdaFunctionConfigurationList = (\n  input: LambdaFunctionConfiguration[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlLifecycleExpiration = (input: LifecycleExpiration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"LifecycleExpiration\");\n  if (input.Date !== undefined && input.Date !== null) {\n    const node = new __XmlNode(\"Date\")\n      .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n      .withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Days !== undefined && input.Days !== null) {\n    const node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n    const node = new __XmlNode(\"ExpiredObjectDeleteMarker\")\n      .addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker)))\n      .withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlLifecycleRule = (input: LifecycleRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"LifecycleRule\");\n  if (input.Expiration !== undefined && input.Expiration !== null) {\n    const node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ID !== undefined && input.ID !== null) {\n    const node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Transitions !== undefined && input.Transitions !== null) {\n    const nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n    const nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n    const node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\n      \"NoncurrentVersionExpiration\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n    const node = serializeAws_restXmlAbortIncompleteMultipartUpload(\n      input.AbortIncompleteMultipartUpload,\n      context\n    ).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlLifecycleRuleAndOperator = (\n  input: LifecycleRuleAndOperator,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    const nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlLifecycleRuleFilter = (input: LifecycleRuleFilter, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n  LifecycleRuleFilter.visit(input, {\n    Prefix: (value) => {\n      const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: (value) => {\n      const node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: (value) => {\n      const node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: (name: string, value: any) => {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    },\n  });\n  return bodyNode;\n};\n\nconst serializeAws_restXmlLifecycleRules = (input: LifecycleRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlLifecycleRule(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlLoggingEnabled = (input: LoggingEnabled, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"LoggingEnabled\");\n  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n    const node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n    const nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    const containerNode = new __XmlNode(\"TargetGrants\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n    const node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlMetadataEntry = (input: MetadataEntry, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"MetadataEntry\");\n  if (input.Name !== undefined && input.Name !== null) {\n    const node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Value !== undefined && input.Value !== null) {\n    const node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlMetrics = (input: Metrics, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Metrics\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n    const node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlMetricsAndOperator = (input: MetricsAndOperator, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"MetricsAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    const nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlMetricsConfiguration = (input: MetricsConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"MetricsConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlMetricsFilter = (input: MetricsFilter, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"MetricsFilter\");\n  MetricsFilter.visit(input, {\n    Prefix: (value) => {\n      const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: (value) => {\n      const node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: (value) => {\n      const node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: (name: string, value: any) => {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    },\n  });\n  return bodyNode;\n};\n\nconst serializeAws_restXmlNoncurrentVersionExpiration = (\n  input: NoncurrentVersionExpiration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    const node = new __XmlNode(\"Days\")\n      .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n      .withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlNoncurrentVersionTransition = (\n  input: NoncurrentVersionTransition,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    const node = new __XmlNode(\"Days\")\n      .addChildNode(new __XmlText(String(input.NoncurrentDays)))\n      .withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    const node = new __XmlNode(\"TransitionStorageClass\")\n      .addChildNode(new __XmlText(input.StorageClass))\n      .withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlNoncurrentVersionTransitionList = (\n  input: NoncurrentVersionTransition[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlNotificationConfiguration = (\n  input: NotificationConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"NotificationConfiguration\");\n  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n    const nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n    const nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n    const nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlNotificationConfigurationFilter = (\n  input: NotificationConfigurationFilter,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n  if (input.Key !== undefined && input.Key !== null) {\n    const node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlObjectIdentifier = (input: ObjectIdentifier, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ObjectIdentifier\");\n  if (input.Key !== undefined && input.Key !== null) {\n    const node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.VersionId !== undefined && input.VersionId !== null) {\n    const node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlObjectIdentifierList = (input: ObjectIdentifier[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlObjectIdentifier(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlObjectLockConfiguration = (input: ObjectLockConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n    const node = new __XmlNode(\"ObjectLockEnabled\")\n      .addChildNode(new __XmlText(input.ObjectLockEnabled))\n      .withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Rule !== undefined && input.Rule !== null) {\n    const node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlObjectLockLegalHold = (input: ObjectLockLegalHold, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"ObjectLockLegalHoldStatus\")\n      .addChildNode(new __XmlText(input.Status))\n      .withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlObjectLockRetention = (input: ObjectLockRetention, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ObjectLockRetention\");\n  if (input.Mode !== undefined && input.Mode !== null) {\n    const node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n    const node = new __XmlNode(\"Date\")\n      .addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\"))\n      .withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlObjectLockRule = (input: ObjectLockRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ObjectLockRule\");\n  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n    const node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlOutputLocation = (input: OutputLocation, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"OutputLocation\");\n  if (input.S3 !== undefined && input.S3 !== null) {\n    const node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlOutputSerialization = (input: OutputSerialization, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"OutputSerialization\");\n  if (input.CSV !== undefined && input.CSV !== null) {\n    const node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.JSON !== undefined && input.JSON !== null) {\n    const node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlOwner = (input: Owner, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Owner\");\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    const node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ID !== undefined && input.ID !== null) {\n    const node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlOwnershipControls = (input: OwnershipControls, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"OwnershipControls\");\n  if (input.Rules !== undefined && input.Rules !== null) {\n    const nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlOwnershipControlsRule = (input: OwnershipControlsRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n    const node = new __XmlNode(\"ObjectOwnership\")\n      .addChildNode(new __XmlText(input.ObjectOwnership))\n      .withName(\"ObjectOwnership\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlOwnershipControlsRules = (input: OwnershipControlsRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlParquetInput = (input: ParquetInput, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nconst serializeAws_restXmlPublicAccessBlockConfiguration = (\n  input: PublicAccessBlockConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n    const node = new __XmlNode(\"Setting\")\n      .addChildNode(new __XmlText(String(input.BlockPublicAcls)))\n      .withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n    const node = new __XmlNode(\"Setting\")\n      .addChildNode(new __XmlText(String(input.IgnorePublicAcls)))\n      .withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n    const node = new __XmlNode(\"Setting\")\n      .addChildNode(new __XmlText(String(input.BlockPublicPolicy)))\n      .withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n    const node = new __XmlNode(\"Setting\")\n      .addChildNode(new __XmlText(String(input.RestrictPublicBuckets)))\n      .withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlQueueConfiguration = (input: QueueConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"QueueConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.QueueArn !== undefined && input.QueueArn !== null) {\n    const node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Events !== undefined && input.Events !== null) {\n    const nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlQueueConfigurationList = (input: QueueConfiguration[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlQueueConfiguration(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlRedirect = (input: Redirect, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Redirect\");\n  if (input.HostName !== undefined && input.HostName !== null) {\n    const node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n    const node = new __XmlNode(\"HttpRedirectCode\")\n      .addChildNode(new __XmlText(input.HttpRedirectCode))\n      .withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    const node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n    const node = new __XmlNode(\"ReplaceKeyPrefixWith\")\n      .addChildNode(new __XmlText(input.ReplaceKeyPrefixWith))\n      .withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n    const node = new __XmlNode(\"ReplaceKeyWith\")\n      .addChildNode(new __XmlText(input.ReplaceKeyWith))\n      .withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlRedirectAllRequestsTo = (input: RedirectAllRequestsTo, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n  if (input.HostName !== undefined && input.HostName !== null) {\n    const node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    const node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicaModifications = (input: ReplicaModifications, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ReplicaModifications\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"ReplicaModificationsStatus\")\n      .addChildNode(new __XmlText(input.Status))\n      .withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicationConfiguration = (\n  input: ReplicationConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n  if (input.Role !== undefined && input.Role !== null) {\n    const node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Rules !== undefined && input.Rules !== null) {\n    const nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicationRule = (input: ReplicationRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ReplicationRule\");\n  if (input.ID !== undefined && input.ID !== null) {\n    const node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Priority !== undefined && input.Priority !== null) {\n    const node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n    const node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\n      \"SourceSelectionCriteria\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n    const node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\n      \"ExistingObjectReplication\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.Destination !== undefined && input.Destination !== null) {\n    const node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n    const node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\n      \"DeleteMarkerReplication\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicationRuleAndOperator = (\n  input: ReplicationRuleAndOperator,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tags !== undefined && input.Tags !== null) {\n    const nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicationRuleFilter = (input: ReplicationRuleFilter, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n  ReplicationRuleFilter.visit(input, {\n    Prefix: (value) => {\n      const node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: (value) => {\n      const node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: (value) => {\n      const node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: (name: string, value: any) => {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    },\n  });\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicationRules = (input: ReplicationRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlReplicationRule(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlReplicationTime = (input: ReplicationTime, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ReplicationTime\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Time !== undefined && input.Time !== null) {\n    const node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlReplicationTimeValue = (input: ReplicationTimeValue, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n  if (input.Minutes !== undefined && input.Minutes !== null) {\n    const node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlRequestPaymentConfiguration = (\n  input: RequestPaymentConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n  if (input.Payer !== undefined && input.Payer !== null) {\n    const node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlRequestProgress = (input: RequestProgress, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"RequestProgress\");\n  if (input.Enabled !== undefined && input.Enabled !== null) {\n    const node = new __XmlNode(\"EnableRequestProgress\")\n      .addChildNode(new __XmlText(String(input.Enabled)))\n      .withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlRestoreRequest = (input: RestoreRequest, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"RestoreRequest\");\n  if (input.Days !== undefined && input.Days !== null) {\n    const node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n    const node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\n      \"GlacierJobParameters\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.Type !== undefined && input.Type !== null) {\n    const node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Tier !== undefined && input.Tier !== null) {\n    const node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Description !== undefined && input.Description !== null) {\n    const node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n    const node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n    const node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlRoutingRule = (input: RoutingRule, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"RoutingRule\");\n  if (input.Condition !== undefined && input.Condition !== null) {\n    const node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Redirect !== undefined && input.Redirect !== null) {\n    const node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlRoutingRules = (input: RoutingRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlRoutingRule(entry, context);\n      return node.withName(\"RoutingRule\");\n    });\n};\n\nconst serializeAws_restXmlS3KeyFilter = (input: S3KeyFilter, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"S3KeyFilter\");\n  if (input.FilterRules !== undefined && input.FilterRules !== null) {\n    const nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlS3Location = (input: S3Location, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"S3Location\");\n  if (input.BucketName !== undefined && input.BucketName !== null) {\n    const node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    const node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    const node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.CannedACL !== undefined && input.CannedACL !== null) {\n    const node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n    const nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    const containerNode = new __XmlNode(\"AccessControlList\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  if (input.Tagging !== undefined && input.Tagging !== null) {\n    const node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n    const nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    const containerNode = new __XmlNode(\"UserMetadata\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    const node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlScanRange = (input: ScanRange, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"ScanRange\");\n  if (input.Start !== undefined && input.Start !== null) {\n    const node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.End !== undefined && input.End !== null) {\n    const node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlSelectParameters = (input: SelectParameters, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"SelectParameters\");\n  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n    const node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\n      \"InputSerialization\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n    const node = new __XmlNode(\"ExpressionType\")\n      .addChildNode(new __XmlText(input.ExpressionType))\n      .withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Expression !== undefined && input.Expression !== null) {\n    const node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n    const node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\n      \"OutputSerialization\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlServerSideEncryptionByDefault = (\n  input: ServerSideEncryptionByDefault,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n    const node = new __XmlNode(\"ServerSideEncryption\")\n      .addChildNode(new __XmlText(input.SSEAlgorithm))\n      .withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n    const node = new __XmlNode(\"SSEKMSKeyId\")\n      .addChildNode(new __XmlText(input.KMSMasterKeyID))\n      .withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlServerSideEncryptionConfiguration = (\n  input: ServerSideEncryptionConfiguration,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n  if (input.Rules !== undefined && input.Rules !== null) {\n    const nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlServerSideEncryptionRule = (\n  input: ServerSideEncryptionRule,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n    const node = serializeAws_restXmlServerSideEncryptionByDefault(\n      input.ApplyServerSideEncryptionByDefault,\n      context\n    ).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n    const node = new __XmlNode(\"BucketKeyEnabled\")\n      .addChildNode(new __XmlText(String(input.BucketKeyEnabled)))\n      .withName(\"BucketKeyEnabled\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlServerSideEncryptionRules = (\n  input: ServerSideEncryptionRule[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlSourceSelectionCriteria = (input: SourceSelectionCriteria, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n    const node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\n      \"SseKmsEncryptedObjects\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n    const node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\n      \"ReplicaModifications\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlSSEKMS = (input: SSEKMS, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"SSE-KMS\");\n  if (input.KeyId !== undefined && input.KeyId !== null) {\n    const node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlSseKmsEncryptedObjects = (input: SseKmsEncryptedObjects, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\")\n      .addChildNode(new __XmlText(input.Status))\n      .withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlSSES3 = (input: SSES3, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nconst serializeAws_restXmlStorageClassAnalysis = (input: StorageClassAnalysis, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n  if (input.DataExport !== undefined && input.DataExport !== null) {\n    const node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlStorageClassAnalysisDataExport = (\n  input: StorageClassAnalysisDataExport,\n  context: __SerdeContext\n): any => {\n  const bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n    const node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\")\n      .addChildNode(new __XmlText(input.OutputSchemaVersion))\n      .withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Destination !== undefined && input.Destination !== null) {\n    const node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTag = (input: Tag, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Tag\");\n  if (input.Key !== undefined && input.Key !== null) {\n    const node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Value !== undefined && input.Value !== null) {\n    const node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTagging = (input: Tagging, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Tagging\");\n  if (input.TagSet !== undefined && input.TagSet !== null) {\n    const nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    const containerNode = new __XmlNode(\"TagSet\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTagSet = (input: Tag[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlTag(entry, context);\n      return node.withName(\"Tag\");\n    });\n};\n\nconst serializeAws_restXmlTargetGrant = (input: TargetGrant, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"TargetGrant\");\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    const node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Permission !== undefined && input.Permission !== null) {\n    const node = new __XmlNode(\"BucketLogsPermission\")\n      .addChildNode(new __XmlText(input.Permission))\n      .withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTargetGrants = (input: TargetGrant[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlTargetGrant(entry, context);\n      return node.withName(\"Grant\");\n    });\n};\n\nconst serializeAws_restXmlTiering = (input: Tiering, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Tiering\");\n  if (input.Days !== undefined && input.Days !== null) {\n    const node = new __XmlNode(\"IntelligentTieringDays\")\n      .addChildNode(new __XmlText(String(input.Days)))\n      .withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.AccessTier !== undefined && input.AccessTier !== null) {\n    const node = new __XmlNode(\"IntelligentTieringAccessTier\")\n      .addChildNode(new __XmlText(input.AccessTier))\n      .withName(\"AccessTier\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTieringList = (input: Tiering[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlTiering(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlTopicConfiguration = (input: TopicConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"TopicConfiguration\");\n  if (input.Id !== undefined && input.Id !== null) {\n    const node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.TopicArn !== undefined && input.TopicArn !== null) {\n    const node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Events !== undefined && input.Events !== null) {\n    const nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map((node: any) => {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n  if (input.Filter !== undefined && input.Filter !== null) {\n    const node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTopicConfigurationList = (input: TopicConfiguration[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlTopicConfiguration(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlTransition = (input: Transition, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"Transition\");\n  if (input.Date !== undefined && input.Date !== null) {\n    const node = new __XmlNode(\"Date\")\n      .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\n      .withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Days !== undefined && input.Days !== null) {\n    const node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    const node = new __XmlNode(\"TransitionStorageClass\")\n      .addChildNode(new __XmlText(input.StorageClass))\n      .withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlTransitionList = (input: Transition[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlTransition(entry, context);\n      return node.withName(\"member\");\n    });\n};\n\nconst serializeAws_restXmlUserMetadata = (input: MetadataEntry[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      const node = serializeAws_restXmlMetadataEntry(entry, context);\n      return node.withName(\"MetadataEntry\");\n    });\n};\n\nconst serializeAws_restXmlVersioningConfiguration = (input: VersioningConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"VersioningConfiguration\");\n  if (input.MFADelete !== undefined && input.MFADelete !== null) {\n    const node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.Status !== undefined && input.Status !== null) {\n    const node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n  return bodyNode;\n};\n\nconst serializeAws_restXmlWebsiteConfiguration = (input: WebsiteConfiguration, context: __SerdeContext): any => {\n  const bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n    const node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n    const node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n    const node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\n      \"RedirectAllRequestsTo\"\n    );\n    bodyNode.addChildNode(node);\n  }\n  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n    const nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    const containerNode = new __XmlNode(\"RoutingRules\");\n    nodes.map((node: any) => {\n      containerNode.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode);\n  }\n  return bodyNode;\n};\n\nconst deserializeAws_restXmlAbortIncompleteMultipartUpload = (\n  output: any,\n  context: __SerdeContext\n): AbortIncompleteMultipartUpload => {\n  let contents: any = {\n    DaysAfterInitiation: undefined,\n  };\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlAccessControlTranslation = (\n  output: any,\n  context: __SerdeContext\n): AccessControlTranslation => {\n  let contents: any = {\n    Owner: undefined,\n  };\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = output[\"Owner\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlAllowedHeaders = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restXmlAllowedMethods = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restXmlAllowedOrigins = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restXmlAnalyticsAndOperator = (output: any, context: __SerdeContext): AnalyticsAndOperator => {\n  let contents: any = {\n    Prefix: undefined,\n    Tags: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlAnalyticsConfiguration = (output: any, context: __SerdeContext): AnalyticsConfiguration => {\n  let contents: any = {\n    Id: undefined,\n    Filter: undefined,\n    StorageClassAnalysis: undefined,\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n  }\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlAnalyticsConfigurationList = (\n  output: any,\n  context: __SerdeContext\n): AnalyticsConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlAnalyticsExportDestination = (\n  output: any,\n  context: __SerdeContext\n): AnalyticsExportDestination => {\n  let contents: any = {\n    S3BucketDestination: undefined,\n  };\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(\n      output[\"S3BucketDestination\"],\n      context\n    );\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlAnalyticsFilter = (output: any, context: __SerdeContext): AnalyticsFilter => {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"],\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_restXmlAnalyticsS3BucketDestination = (\n  output: any,\n  context: __SerdeContext\n): AnalyticsS3BucketDestination => {\n  let contents: any = {\n    Format: undefined,\n    BucketAccountId: undefined,\n    Bucket: undefined,\n    Prefix: undefined,\n  };\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = output[\"BucketAccountId\"];\n  }\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlBucket = (output: any, context: __SerdeContext): Bucket => {\n  let contents: any = {\n    Name: undefined,\n    CreationDate: undefined,\n  };\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = new Date(output[\"CreationDate\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlBuckets = (output: any, context: __SerdeContext): Bucket[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlBucket(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlCommonPrefix = (output: any, context: __SerdeContext): CommonPrefix => {\n  let contents: any = {\n    Prefix: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlCommonPrefixList = (output: any, context: __SerdeContext): CommonPrefix[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlCommonPrefix(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlCondition = (output: any, context: __SerdeContext): Condition => {\n  let contents: any = {\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined,\n  };\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n  }\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlCopyObjectResult = (output: any, context: __SerdeContext): CopyObjectResult => {\n  let contents: any = {\n    ETag: undefined,\n    LastModified: undefined,\n  };\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlCopyPartResult = (output: any, context: __SerdeContext): CopyPartResult => {\n  let contents: any = {\n    ETag: undefined,\n    LastModified: undefined,\n  };\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlCORSRule = (output: any, context: __SerdeContext): CORSRule => {\n  let contents: any = {\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined,\n  };\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n  if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(\n      __getArrayIfSingleItem(output[\"AllowedHeader\"]),\n      context\n    );\n  }\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n  if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(\n      __getArrayIfSingleItem(output[\"AllowedMethod\"]),\n      context\n    );\n  }\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(\n      __getArrayIfSingleItem(output[\"AllowedOrigin\"]),\n      context\n    );\n  }\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n  if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(\n      __getArrayIfSingleItem(output[\"ExposeHeader\"]),\n      context\n    );\n  }\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlCORSRules = (output: any, context: __SerdeContext): CORSRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlCORSRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlDefaultRetention = (output: any, context: __SerdeContext): DefaultRetention => {\n  let contents: any = {\n    Mode: undefined,\n    Days: undefined,\n    Years: undefined,\n  };\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = parseInt(output[\"Years\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlDeletedObject = (output: any, context: __SerdeContext): DeletedObject => {\n  let contents: any = {\n    Key: undefined,\n    VersionId: undefined,\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined,\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n  }\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlDeletedObjects = (output: any, context: __SerdeContext): DeletedObject[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlDeletedObject(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlDeleteMarkerEntry = (output: any, context: __SerdeContext): DeleteMarkerEntry => {\n  let contents: any = {\n    Owner: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n  };\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlDeleteMarkerReplication = (\n  output: any,\n  context: __SerdeContext\n): DeleteMarkerReplication => {\n  let contents: any = {\n    Status: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlDeleteMarkers = (output: any, context: __SerdeContext): DeleteMarkerEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlDestination = (output: any, context: __SerdeContext): Destination => {\n  let contents: any = {\n    Bucket: undefined,\n    Account: undefined,\n    StorageClass: undefined,\n    AccessControlTranslation: undefined,\n    EncryptionConfiguration: undefined,\n    ReplicationTime: undefined,\n    Metrics: undefined,\n  };\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = output[\"Account\"];\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(\n      output[\"AccessControlTranslation\"],\n      context\n    );\n  }\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(\n      output[\"EncryptionConfiguration\"],\n      context\n    );\n  }\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlEncryptionConfiguration = (\n  output: any,\n  context: __SerdeContext\n): EncryptionConfiguration => {\n  let contents: any = {\n    ReplicaKmsKeyID: undefined,\n  };\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXml_Error = (output: any, context: __SerdeContext): _Error => {\n  let contents: any = {\n    Key: undefined,\n    VersionId: undefined,\n    Code: undefined,\n    Message: undefined,\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = output[\"Code\"];\n  }\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = output[\"Message\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlErrorDocument = (output: any, context: __SerdeContext): ErrorDocument => {\n  let contents: any = {\n    Key: undefined,\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlErrors = (output: any, context: __SerdeContext): _Error[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXml_Error(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlEventList = (output: any, context: __SerdeContext): (Event | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restXmlExistingObjectReplication = (\n  output: any,\n  context: __SerdeContext\n): ExistingObjectReplication => {\n  let contents: any = {\n    Status: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlExposeHeaders = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restXmlFilterRule = (output: any, context: __SerdeContext): FilterRule => {\n  let contents: any = {\n    Name: undefined,\n    Value: undefined,\n  };\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlFilterRuleList = (output: any, context: __SerdeContext): FilterRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlFilterRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlGrant = (output: any, context: __SerdeContext): Grant => {\n  let contents: any = {\n    Grantee: undefined,\n    Permission: undefined,\n  };\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlGrantee = (output: any, context: __SerdeContext): Grantee => {\n  let contents: any = {\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    URI: undefined,\n    Type: undefined,\n  };\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = output[\"EmailAddress\"];\n  }\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = output[\"URI\"];\n  }\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = output[\"xsi:type\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlGrants = (output: any, context: __SerdeContext): Grant[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlGrant(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlIndexDocument = (output: any, context: __SerdeContext): IndexDocument => {\n  let contents: any = {\n    Suffix: undefined,\n  };\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = output[\"Suffix\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInitiator = (output: any, context: __SerdeContext): Initiator => {\n  let contents: any = {\n    ID: undefined,\n    DisplayName: undefined,\n  };\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlIntelligentTieringAndOperator = (\n  output: any,\n  context: __SerdeContext\n): IntelligentTieringAndOperator => {\n  let contents: any = {\n    Prefix: undefined,\n    Tags: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlIntelligentTieringConfiguration = (\n  output: any,\n  context: __SerdeContext\n): IntelligentTieringConfiguration => {\n  let contents: any = {\n    Id: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Tierings: undefined,\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output.Tiering === \"\") {\n    contents.Tierings = [];\n  }\n  if (output[\"Tiering\"] !== undefined) {\n    contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlIntelligentTieringConfigurationList = (\n  output: any,\n  context: __SerdeContext\n): IntelligentTieringConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlIntelligentTieringFilter = (\n  output: any,\n  context: __SerdeContext\n): IntelligentTieringFilter => {\n  let contents: any = {\n    Prefix: undefined,\n    Tag: undefined,\n    And: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInventoryConfiguration = (output: any, context: __SerdeContext): InventoryConfiguration => {\n  let contents: any = {\n    Destination: undefined,\n    IsEnabled: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined,\n  };\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n  }\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(\n      __getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]),\n      context\n    );\n  }\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInventoryConfigurationList = (\n  output: any,\n  context: __SerdeContext\n): InventoryConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlInventoryConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlInventoryDestination = (output: any, context: __SerdeContext): InventoryDestination => {\n  let contents: any = {\n    S3BucketDestination: undefined,\n  };\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(\n      output[\"S3BucketDestination\"],\n      context\n    );\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInventoryEncryption = (output: any, context: __SerdeContext): InventoryEncryption => {\n  let contents: any = {\n    SSES3: undefined,\n    SSEKMS: undefined,\n  };\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInventoryFilter = (output: any, context: __SerdeContext): InventoryFilter => {\n  let contents: any = {\n    Prefix: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInventoryOptionalFields = (\n  output: any,\n  context: __SerdeContext\n): (InventoryOptionalField | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restXmlInventoryS3BucketDestination = (\n  output: any,\n  context: __SerdeContext\n): InventoryS3BucketDestination => {\n  let contents: any = {\n    AccountId: undefined,\n    Bucket: undefined,\n    Format: undefined,\n    Prefix: undefined,\n    Encryption: undefined,\n  };\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = output[\"AccountId\"];\n  }\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlInventorySchedule = (output: any, context: __SerdeContext): InventorySchedule => {\n  let contents: any = {\n    Frequency: undefined,\n  };\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = output[\"Frequency\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlLambdaFunctionConfiguration = (\n  output: any,\n  context: __SerdeContext\n): LambdaFunctionConfiguration => {\n  let contents: any = {\n    Id: undefined,\n    LambdaFunctionArn: undefined,\n    Events: undefined,\n    Filter: undefined,\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = output[\"CloudFunction\"];\n  }\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlLambdaFunctionConfigurationList = (\n  output: any,\n  context: __SerdeContext\n): LambdaFunctionConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlLifecycleExpiration = (output: any, context: __SerdeContext): LifecycleExpiration => {\n  let contents: any = {\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined,\n  };\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlLifecycleRule = (output: any, context: __SerdeContext): LifecycleRule => {\n  let contents: any = {\n    Expiration: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Transitions: undefined,\n    NoncurrentVersionTransitions: undefined,\n    NoncurrentVersionExpiration: undefined,\n    AbortIncompleteMultipartUpload: undefined,\n  };\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n  if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(\n      __getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]),\n      context\n    );\n  }\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(\n      output[\"NoncurrentVersionExpiration\"],\n      context\n    );\n  }\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(\n      output[\"AbortIncompleteMultipartUpload\"],\n      context\n    );\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlLifecycleRuleAndOperator = (\n  output: any,\n  context: __SerdeContext\n): LifecycleRuleAndOperator => {\n  let contents: any = {\n    Prefix: undefined,\n    Tags: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlLifecycleRuleFilter = (output: any, context: __SerdeContext): LifecycleRuleFilter => {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"],\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_restXmlLifecycleRules = (output: any, context: __SerdeContext): LifecycleRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlLifecycleRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlLoggingEnabled = (output: any, context: __SerdeContext): LoggingEnabled => {\n  let contents: any = {\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined,\n  };\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = output[\"TargetBucket\"];\n  }\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(\n      __getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]),\n      context\n    );\n  }\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = output[\"TargetPrefix\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlMetrics = (output: any, context: __SerdeContext): Metrics => {\n  let contents: any = {\n    Status: undefined,\n    EventThreshold: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlMetricsAndOperator = (output: any, context: __SerdeContext): MetricsAndOperator => {\n  let contents: any = {\n    Prefix: undefined,\n    Tags: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlMetricsConfiguration = (output: any, context: __SerdeContext): MetricsConfiguration => {\n  let contents: any = {\n    Id: undefined,\n    Filter: undefined,\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlMetricsConfigurationList = (\n  output: any,\n  context: __SerdeContext\n): MetricsConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlMetricsConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlMetricsFilter = (output: any, context: __SerdeContext): MetricsFilter => {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"],\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_restXmlMultipartUpload = (output: any, context: __SerdeContext): MultipartUpload => {\n  let contents: any = {\n    UploadId: undefined,\n    Key: undefined,\n    Initiated: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n    Initiator: undefined,\n  };\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = output[\"UploadId\"];\n  }\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = new Date(output[\"Initiated\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlMultipartUploadList = (output: any, context: __SerdeContext): MultipartUpload[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlMultipartUpload(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlNoncurrentVersionExpiration = (\n  output: any,\n  context: __SerdeContext\n): NoncurrentVersionExpiration => {\n  let contents: any = {\n    NoncurrentDays: undefined,\n  };\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlNoncurrentVersionTransition = (\n  output: any,\n  context: __SerdeContext\n): NoncurrentVersionTransition => {\n  let contents: any = {\n    NoncurrentDays: undefined,\n    StorageClass: undefined,\n  };\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlNoncurrentVersionTransitionList = (\n  output: any,\n  context: __SerdeContext\n): NoncurrentVersionTransition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlNotificationConfigurationFilter = (\n  output: any,\n  context: __SerdeContext\n): NotificationConfigurationFilter => {\n  let contents: any = {\n    Key: undefined,\n  };\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXml_Object = (output: any, context: __SerdeContext): _Object => {\n  let contents: any = {\n    Key: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectList = (output: any, context: __SerdeContext): _Object[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXml_Object(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlObjectLockConfiguration = (\n  output: any,\n  context: __SerdeContext\n): ObjectLockConfiguration => {\n  let contents: any = {\n    ObjectLockEnabled: undefined,\n    Rule: undefined,\n  };\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectLockLegalHold = (output: any, context: __SerdeContext): ObjectLockLegalHold => {\n  let contents: any = {\n    Status: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectLockRetention = (output: any, context: __SerdeContext): ObjectLockRetention => {\n  let contents: any = {\n    Mode: undefined,\n    RetainUntilDate: undefined,\n  };\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectLockRule = (output: any, context: __SerdeContext): ObjectLockRule => {\n  let contents: any = {\n    DefaultRetention: undefined,\n  };\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectVersion = (output: any, context: __SerdeContext): ObjectVersion => {\n  let contents: any = {\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n  };\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlObjectVersionList = (output: any, context: __SerdeContext): ObjectVersion[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlObjectVersion(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlOwner = (output: any, context: __SerdeContext): Owner => {\n  let contents: any = {\n    DisplayName: undefined,\n    ID: undefined,\n  };\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlOwnershipControls = (output: any, context: __SerdeContext): OwnershipControls => {\n  let contents: any = {\n    Rules: undefined,\n  };\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlOwnershipControlsRule = (output: any, context: __SerdeContext): OwnershipControlsRule => {\n  let contents: any = {\n    ObjectOwnership: undefined,\n  };\n  if (output[\"ObjectOwnership\"] !== undefined) {\n    contents.ObjectOwnership = output[\"ObjectOwnership\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlOwnershipControlsRules = (\n  output: any,\n  context: __SerdeContext\n): OwnershipControlsRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlPart = (output: any, context: __SerdeContext): Part => {\n  let contents: any = {\n    PartNumber: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n  };\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = parseInt(output[\"PartNumber\"]);\n  }\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlParts = (output: any, context: __SerdeContext): Part[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlPart(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlPolicyStatus = (output: any, context: __SerdeContext): PolicyStatus => {\n  let contents: any = {\n    IsPublic: undefined,\n  };\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = output[\"IsPublic\"] == \"true\";\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlPublicAccessBlockConfiguration = (\n  output: any,\n  context: __SerdeContext\n): PublicAccessBlockConfiguration => {\n  let contents: any = {\n    BlockPublicAcls: undefined,\n    IgnorePublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    RestrictPublicBuckets: undefined,\n  };\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n  }\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n  }\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n  }\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlQueueConfiguration = (output: any, context: __SerdeContext): QueueConfiguration => {\n  let contents: any = {\n    Id: undefined,\n    QueueArn: undefined,\n    Events: undefined,\n    Filter: undefined,\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = output[\"Queue\"];\n  }\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlQueueConfigurationList = (output: any, context: __SerdeContext): QueueConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlQueueConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlRedirect = (output: any, context: __SerdeContext): Redirect => {\n  let contents: any = {\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined,\n  };\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n  }\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n  }\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlRedirectAllRequestsTo = (output: any, context: __SerdeContext): RedirectAllRequestsTo => {\n  let contents: any = {\n    HostName: undefined,\n    Protocol: undefined,\n  };\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlReplicaModifications = (output: any, context: __SerdeContext): ReplicaModifications => {\n  let contents: any = {\n    Status: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlReplicationConfiguration = (\n  output: any,\n  context: __SerdeContext\n): ReplicationConfiguration => {\n  let contents: any = {\n    Role: undefined,\n    Rules: undefined,\n  };\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = output[\"Role\"];\n  }\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlReplicationRule = (output: any, context: __SerdeContext): ReplicationRule => {\n  let contents: any = {\n    ID: undefined,\n    Priority: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    SourceSelectionCriteria: undefined,\n    ExistingObjectReplication: undefined,\n    Destination: undefined,\n    DeleteMarkerReplication: undefined,\n  };\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = parseInt(output[\"Priority\"]);\n  }\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n  }\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(\n      output[\"SourceSelectionCriteria\"],\n      context\n    );\n  }\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(\n      output[\"ExistingObjectReplication\"],\n      context\n    );\n  }\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(\n      output[\"DeleteMarkerReplication\"],\n      context\n    );\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlReplicationRuleAndOperator = (\n  output: any,\n  context: __SerdeContext\n): ReplicationRuleAndOperator => {\n  let contents: any = {\n    Prefix: undefined,\n    Tags: undefined,\n  };\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlReplicationRuleFilter = (output: any, context: __SerdeContext): ReplicationRuleFilter => {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"],\n    };\n  }\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context),\n    };\n  }\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_restXmlReplicationRules = (output: any, context: __SerdeContext): ReplicationRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlReplicationRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlReplicationTime = (output: any, context: __SerdeContext): ReplicationTime => {\n  let contents: any = {\n    Status: undefined,\n    Time: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlReplicationTimeValue = (output: any, context: __SerdeContext): ReplicationTimeValue => {\n  let contents: any = {\n    Minutes: undefined,\n  };\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = parseInt(output[\"Minutes\"]);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlRoutingRule = (output: any, context: __SerdeContext): RoutingRule => {\n  let contents: any = {\n    Condition: undefined,\n    Redirect: undefined,\n  };\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlRoutingRules = (output: any, context: __SerdeContext): RoutingRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlRoutingRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlS3KeyFilter = (output: any, context: __SerdeContext): S3KeyFilter => {\n  let contents: any = {\n    FilterRules: undefined,\n  };\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n  if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlServerSideEncryptionByDefault = (\n  output: any,\n  context: __SerdeContext\n): ServerSideEncryptionByDefault => {\n  let contents: any = {\n    SSEAlgorithm: undefined,\n    KMSMasterKeyID: undefined,\n  };\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n  }\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlServerSideEncryptionConfiguration = (\n  output: any,\n  context: __SerdeContext\n): ServerSideEncryptionConfiguration => {\n  let contents: any = {\n    Rules: undefined,\n  };\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlServerSideEncryptionRule = (\n  output: any,\n  context: __SerdeContext\n): ServerSideEncryptionRule => {\n  let contents: any = {\n    ApplyServerSideEncryptionByDefault: undefined,\n    BucketKeyEnabled: undefined,\n  };\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(\n      output[\"ApplyServerSideEncryptionByDefault\"],\n      context\n    );\n  }\n  if (output[\"BucketKeyEnabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output[\"BucketKeyEnabled\"] == \"true\";\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlServerSideEncryptionRules = (\n  output: any,\n  context: __SerdeContext\n): ServerSideEncryptionRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlSourceSelectionCriteria = (\n  output: any,\n  context: __SerdeContext\n): SourceSelectionCriteria => {\n  let contents: any = {\n    SseKmsEncryptedObjects: undefined,\n    ReplicaModifications: undefined,\n  };\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(\n      output[\"SseKmsEncryptedObjects\"],\n      context\n    );\n  }\n  if (output[\"ReplicaModifications\"] !== undefined) {\n    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlSSEKMS = (output: any, context: __SerdeContext): SSEKMS => {\n  let contents: any = {\n    KeyId: undefined,\n  };\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = output[\"KeyId\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlSseKmsEncryptedObjects = (output: any, context: __SerdeContext): SseKmsEncryptedObjects => {\n  let contents: any = {\n    Status: undefined,\n  };\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlSSES3 = (output: any, context: __SerdeContext): SSES3 => {\n  let contents: any = {};\n  return contents;\n};\n\nconst deserializeAws_restXmlStorageClassAnalysis = (output: any, context: __SerdeContext): StorageClassAnalysis => {\n  let contents: any = {\n    DataExport: undefined,\n  };\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlStorageClassAnalysisDataExport = (\n  output: any,\n  context: __SerdeContext\n): StorageClassAnalysisDataExport => {\n  let contents: any = {\n    OutputSchemaVersion: undefined,\n    Destination: undefined,\n  };\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n  }\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlTag = (output: any, context: __SerdeContext): Tag => {\n  let contents: any = {\n    Key: undefined,\n    Value: undefined,\n  };\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlTagSet = (output: any, context: __SerdeContext): Tag[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlTag(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlTargetGrant = (output: any, context: __SerdeContext): TargetGrant => {\n  let contents: any = {\n    Grantee: undefined,\n    Permission: undefined,\n  };\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlTargetGrants = (output: any, context: __SerdeContext): TargetGrant[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlTargetGrant(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlTiering = (output: any, context: __SerdeContext): Tiering => {\n  let contents: any = {\n    Days: undefined,\n    AccessTier: undefined,\n  };\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = output[\"AccessTier\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlTieringList = (output: any, context: __SerdeContext): Tiering[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlTiering(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlTopicConfiguration = (output: any, context: __SerdeContext): TopicConfiguration => {\n  let contents: any = {\n    Id: undefined,\n    TopicArn: undefined,\n    Events: undefined,\n    Filter: undefined,\n  };\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = output[\"Topic\"];\n  }\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlTopicConfigurationList = (output: any, context: __SerdeContext): TopicConfiguration[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlTopicConfiguration(entry, context);\n    });\n};\n\nconst deserializeAws_restXmlTransition = (output: any, context: __SerdeContext): Transition => {\n  let contents: any = {\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined,\n  };\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n  return contents;\n};\n\nconst deserializeAws_restXmlTransitionList = (output: any, context: __SerdeContext): Transition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restXmlTransition(entry, context);\n    });\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst decodeEscapedXML = (str: string) =>\n  str\n    .replace(/&amp;/g, \"&\")\n    .replace(/&apos;/g, \"'\")\n    .replace(/&quot;/g, '\"')\n    .replace(/&gt;/g, \">\")\n    .replace(/&lt;/g, \"<\");\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      const parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        tagValueProcessor: (val, tagName) => decodeEscapedXML(val),\n      });\n      const textNodeName = \"#text\";\n      const key = Object.keys(parsedObj)[0];\n      const parsedObjToReturn = parsedObj[key];\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n  });\n\nconst loadRestXmlErrorCode = (output: __HttpResponse, data: any): string => {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}