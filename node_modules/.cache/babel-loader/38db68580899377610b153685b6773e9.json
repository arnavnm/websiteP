{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"../../Utils\";\nexport var Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    var _this = this;\n\n    _classCallCheck(this, Absorbers);\n\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    var overridableContainer = container;\n\n    overridableContainer.getAbsorber = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n\n    overridableContainer.addAbsorber = function (options, position) {\n      return _this.addAbsorber(options, position);\n    };\n  }\n\n  _createClass(Absorbers, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.absorbers) {\n        if (options.absorbers instanceof Array) {\n          this.absorbers = options.absorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.absorbers instanceof Array) {\n            this.absorbers = new Absorber();\n          }\n\n          this.absorbers.load(options.absorbers);\n        }\n      }\n\n      var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n      if (interactivityAbsorbers) {\n        if (interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityAbsorbers instanceof Array) {\n            this.interactivityAbsorbers = new Absorber();\n          }\n\n          this.interactivityAbsorbers.load(interactivityAbsorbers);\n        }\n      }\n\n      if (this.absorbers instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.absorbers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var absorberOptions = _step.value;\n            this.addAbsorber(absorberOptions);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this.addAbsorber(this.absorbers);\n      }\n    }\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var absorber = _step2.value;\n          absorber.attract(particle);\n\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          context.save();\n          absorber.draw(context);\n          context.restore();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var absorber = _step4.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var absorberOptions = this.absorbers;\n      var modeAbsorbers = this.interactivityAbsorbers;\n\n      if (mode === \"absorber\") {\n        var absorbersModeOptions;\n\n        if (modeAbsorbers instanceof Array) {\n          if (modeAbsorbers.length > 0) {\n            absorbersModeOptions = itemFromArray(modeAbsorbers);\n          }\n        } else {\n          absorbersModeOptions = modeAbsorbers;\n        }\n\n        var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions;\n        var aPosition = container.interactivity.mouse.clickPosition;\n        this.addAbsorber(absorbersOptions, aPosition);\n      }\n    }\n  }, {\n    key: \"addAbsorber\",\n    value: function addAbsorber(options, position) {\n      var absorber = new AbsorberInstance(this, this.container, options, position);\n      this.array.push(absorber);\n      return absorber;\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Absorbers;\n}();","map":{"version":3,"names":["Absorber","AbsorberInstance","itemFromArray","Absorbers","container","array","absorbers","interactivityAbsorbers","overridableContainer","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","_a","_b","Array","map","s","tmp","load","interactivity","modes","absorberOptions","particle","absorber","attract","destroyed","context","save","draw","restore","resize","mode","modeAbsorbers","absorbersModeOptions","length","absorbersOptions","aPosition","mouse","clickPosition","push","index","indexOf","splice"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/tsparticles/esm/Plugins/Absorbers/Absorbers.js"],"sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"../../Utils\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const absorberOptions = this.absorbers;\n        const modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions);\n            const aPosition = container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}