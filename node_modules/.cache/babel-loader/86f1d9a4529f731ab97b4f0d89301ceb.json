{"ast":null,"code":"import { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport class Attractor extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  isEnabled() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events;\n\n    if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n    return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n  }\n\n  reset() {}\n\n  async interact() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode;\n\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n      this.hoverAttract();\n    } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n      this.clickAttract();\n    }\n  }\n\n  hoverAttract() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const attractRadius = container.retina.attractModeDistance;\n    this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n  }\n\n  processAttract(position, attractRadius, area) {\n    const container = this.container;\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = getDistances(particle.position, position);\n      const velocity = attractOptions.speed * attractOptions.factor;\n      const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n      const normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n      particle.position.subFrom(normVec);\n    }\n  }\n\n  clickAttract() {\n    const container = this.container;\n\n    if (!container.attract.finish) {\n      if (!container.attract.count) {\n        container.attract.count = 0;\n      }\n\n      container.attract.count++;\n\n      if (container.attract.count === container.particles.count) {\n        container.attract.finish = true;\n      }\n    }\n\n    if (container.attract.clicking) {\n      const mousePos = container.interactivity.mouse.clickPosition;\n\n      if (!mousePos) {\n        return;\n      }\n\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    } else if (container.attract.clicking === false) {\n      container.attract.particles = [];\n    }\n\n    return;\n  }\n\n}","map":{"version":3,"names":["Circle","Constants","ExternalInteractorBase","Vector","calcEasing","clamp","getDistances","isInArray","Attractor","constructor","container","isEnabled","options","actualOptions","mouse","interactivity","events","position","onHover","enable","clickPosition","onClick","hoverMode","mode","clickMode","reset","interact","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","x","y","area","attractOptions","modes","attract","query","particles","quadTree","particle","dx","dy","distance","velocity","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom","finish","count","clicking"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/tsparticles/esm/Interactions/External/Attract/Attractor.js"],"sourcesContent":["import { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}