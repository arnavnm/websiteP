{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n  var firstChar = input.charAt(0);\n  var lowerChars = input.substr(1).toLowerCase();\n\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return \"_\" + firstChar + lowerChars;\n  }\n\n  return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return noCase(input, __assign({\n    delimiter: \"\",\n    transform: pascalCaseTransform\n  }, options));\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;EAC9C,IAAIC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,CAAb,CAAhB;EACA,IAAIC,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgBC,WAAhB,EAAjB;;EACA,IAAIL,KAAK,GAAG,CAAR,IAAaC,SAAS,IAAI,GAA1B,IAAiCA,SAAS,IAAI,GAAlD,EAAuD;IACnD,OAAO,MAAMA,SAAN,GAAkBE,UAAzB;EACH;;EACD,OAAO,KAAKF,SAAS,CAACK,WAAV,EAAL,GAA+BH,UAAtC;AACH;AACD,OAAO,SAASI,wBAAT,CAAkCR,KAAlC,EAAyC;EAC5C,OAAOA,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBI,WAAhB,KAAgCP,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeH,WAAf,EAAvC;AACH;AACD,OAAO,SAASI,UAAT,CAAoBV,KAApB,EAA2BW,OAA3B,EAAoC;EACvC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,OAAOb,MAAM,CAACE,KAAD,EAAQH,QAAQ,CAAC;IAAEe,SAAS,EAAE,EAAb;IAAiBC,SAAS,EAAEd;EAA5B,CAAD,EAAoDY,OAApD,CAAhB,CAAb;AACH","names":["noCase","pascalCaseTransform","input","index","firstChar","charAt","lowerChars","substr","toLowerCase","toUpperCase","pascalCaseTransformMerge","slice","pascalCase","options","__assign","delimiter","transform"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/pascal-case/src/index.ts"],"sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}