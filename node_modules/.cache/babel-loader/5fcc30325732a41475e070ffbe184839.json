{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sha256 = void 0;\n\nvar ie11Sha256_1 = require(\"./ie11Sha256\");\n\nvar webCryptoSha256_1 = require(\"./webCryptoSha256\");\n\nvar sha256_js_1 = require(\"@aws-crypto/sha256-js\");\n\nvar supports_web_crypto_1 = require(\"@aws-crypto/supports-web-crypto\");\n\nvar ie11_detection_1 = require(\"@aws-crypto/ie11-detection\");\n\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\n\nvar Sha256 =\n/** @class */\nfunction () {\n  function Sha256(secret) {\n    if ((0, supports_web_crypto_1.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {\n      this.hash = new webCryptoSha256_1.Sha256(secret);\n    } else if ((0, ie11_detection_1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {\n      this.hash = new ie11Sha256_1.Sha256(secret);\n    } else {\n      this.hash = new sha256_js_1.Sha256(secret);\n    }\n  }\n\n  Sha256.prototype.update = function (data, encoding) {\n    this.hash.update(data, encoding);\n  };\n\n  Sha256.prototype.digest = function () {\n    return this.hash.digest();\n  };\n\n  return Sha256;\n}();\n\nexports.Sha256 = Sha256;","map":{"version":3,"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIG,qBAAqB,GAAGH,OAAO,CAAC,iCAAD,CAAnC;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,4BAAD,CAA9B;;AACA,IAAIK,oBAAoB,GAAGL,OAAO,CAAC,6BAAD,CAAlC;;AACA,IAAIF,MAAM;AAAG;AAAe,YAAY;EACpC,SAASA,MAAT,CAAgBQ,MAAhB,EAAwB;IACpB,IAAI,CAAC,GAAGH,qBAAqB,CAACI,iBAA1B,EAA6C,CAAC,GAAGF,oBAAoB,CAACG,YAAzB,GAA7C,CAAJ,EAA4F;MACxF,KAAKC,IAAL,GAAY,IAAIR,iBAAiB,CAACH,MAAtB,CAA6BQ,MAA7B,CAAZ;IACH,CAFD,MAGK,IAAI,CAAC,GAAGF,gBAAgB,CAACM,UAArB,EAAiC,CAAC,GAAGL,oBAAoB,CAACG,YAAzB,GAAjC,CAAJ,EAAgF;MACjF,KAAKC,IAAL,GAAY,IAAIV,YAAY,CAACD,MAAjB,CAAwBQ,MAAxB,CAAZ;IACH,CAFI,MAGA;MACD,KAAKG,IAAL,GAAY,IAAIP,WAAW,CAACJ,MAAhB,CAAuBQ,MAAvB,CAAZ;IACH;EACJ;;EACDR,MAAM,CAACa,SAAP,CAAiBC,MAAjB,GAA0B,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;IAChD,KAAKL,IAAL,CAAUG,MAAV,CAAiBC,IAAjB,EAAuBC,QAAvB;EACH,CAFD;;EAGAhB,MAAM,CAACa,SAAP,CAAiBI,MAAjB,GAA0B,YAAY;IAClC,OAAO,KAAKN,IAAL,CAAUM,MAAV,EAAP;EACH,CAFD;;EAGA,OAAOjB,MAAP;AACH,CAnB2B,EAA5B;;AAoBAF,OAAO,CAACE,MAAR,GAAiBA,MAAjB","names":["secret","hash","webCryptoSha256_1","ie11Sha256_1","sha256_js_1","Sha256","data","encoding","update","digest","exports"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-crypto/sha256-browser/src/crossPlatformSha256.ts"],"sourcesContent":["import { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nimport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { isMsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly hash: Hash;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else if (isMsWindow(locateWindow())) {\n      this.hash = new Ie11Sha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(data, encoding);\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}