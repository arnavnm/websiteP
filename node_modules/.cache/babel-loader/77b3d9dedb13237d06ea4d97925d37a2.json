{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractPubSubProvider');\n\nvar AbstractPubSubProvider =\n/** @class */\nfunction () {\n  function AbstractPubSubProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._config = options;\n  }\n\n  AbstractPubSubProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this._config = __assign(__assign({}, config), this._config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n\n  AbstractPubSubProvider.prototype.getCategory = function () {\n    return 'PubSub';\n  };\n\n  Object.defineProperty(AbstractPubSubProvider.prototype, \"options\", {\n    get: function () {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractPubSubProvider;\n}();\n\nexport { AbstractPubSubProvider };","map":{"version":3,"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,aAAa,IAAIC,MAA1B,QAAwC,mBAAxC;AACA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW,wBAAX,CAAb;;AACA,IAAIE,sBAAsB;AAAG;AAAe,YAAY;EACpD,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;IACrC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;MAAEA,OAAO,GAAG,EAAV;IAAe;;IACzC,KAAKC,OAAL,GAAeD,OAAf;EACH;;EACDD,sBAAsB,CAACP,SAAvB,CAAiCU,SAAjC,GAA6C,UAAUC,MAAV,EAAkB;IAC3D,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;MAAEA,MAAM,GAAG,EAAT;IAAc;;IACvC,KAAKF,OAAL,GAAenB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqB,MAAL,CAAT,EAAuB,KAAKF,OAA5B,CAAvB;IACAH,MAAM,CAACM,KAAP,CAAa,eAAe,KAAKC,eAAL,EAA5B,EAAoD,KAAKJ,OAAzD;IACA,OAAO,KAAKD,OAAZ;EACH,CALD;;EAMAD,sBAAsB,CAACP,SAAvB,CAAiCc,WAAjC,GAA+C,YAAY;IACvD,OAAO,QAAP;EACH,CAFD;;EAGAvB,MAAM,CAACwB,cAAP,CAAsBR,sBAAsB,CAACP,SAA7C,EAAwD,SAAxD,EAAmE;IAC/DgB,GAAG,EAAE,YAAY;MACb,OAAO1B,QAAQ,CAAC,EAAD,EAAK,KAAKmB,OAAV,CAAf;IACH,CAH8D;IAI/DQ,UAAU,EAAE,IAJmD;IAK/DC,YAAY,EAAE;EALiD,CAAnE;EAOA,OAAOX,sBAAP;AACH,CAtB2C,EAA5C;;AAuBA,SAASA,sBAAT","names":["ConsoleLogger","Logger","logger","options","_config","AbstractPubSubProvider","config","__assign","debug","getProviderName","Object"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/pubsub/src/Providers/PubSubProvider.ts"],"sourcesContent":["/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport Observable from 'zen-observable-ts';\nimport { PubSubProvider, ProviderOptions } from '../types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AbstractPubSubProvider');\n\nexport abstract class AbstractPubSubProvider implements PubSubProvider {\n\tprivate _config: ProviderOptions;\n\n\tconstructor(options: ProviderOptions = {}) {\n\t\tthis._config = options;\n\t}\n\n\tconfigure(config: ProviderOptions = {}): ProviderOptions {\n\t\tthis._config = { ...config, ...this._config };\n\n\t\tlogger.debug(`configure ${this.getProviderName()}`, this._config);\n\n\t\treturn this.options;\n\t}\n\n\tgetCategory() {\n\t\treturn 'PubSub';\n\t}\n\n\tabstract getProviderName(): string;\n\n\tprotected get options(): ProviderOptions {\n\t\treturn { ...this._config };\n\t}\n\n\tpublic abstract newClient(clientOptions: ProviderOptions): Promise<any>;\n\n\tpublic abstract publish(\n\t\ttopics: string[] | string,\n\t\tmsg: any,\n\t\toptions?: ProviderOptions\n\t): void;\n\n\tpublic abstract subscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProviderOptions\n\t): Observable<any>;\n}\n"]},"metadata":{},"sourceType":"module"}