{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1PutEventsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/events\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.eventList !== undefined && input.eventList !== null && {\n            eventList: serializeAws_restJson1EventList(input.eventList, context)\n          }), input.sessionId !== undefined && input.sessionId !== null && {\n            sessionId: input.sessionId\n          }), input.trackingId !== undefined && input.trackingId !== null && {\n            trackingId: input.trackingId\n          }), input.userId !== undefined && input.userId !== null && {\n            userId: input.userId\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutItemsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/items\";\n          body = JSON.stringify(__assign(__assign({}, input.datasetArn !== undefined && input.datasetArn !== null && {\n            datasetArn: input.datasetArn\n          }), input.items !== undefined && input.items !== null && {\n            items: serializeAws_restJson1ItemList(input.items, context)\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutUsersCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/users\";\n          body = JSON.stringify(__assign(__assign({}, input.datasetArn !== undefined && input.datasetArn !== null && {\n            datasetArn: input.datasetArn\n          }), input.users !== undefined && input.users !== null && {\n            users: serializeAws_restJson1UserList(input.users, context)\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1PutEventsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutEventsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEventsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidInputException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.personalizeevents#InvalidInputException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InvalidInputExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutItemsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutItemsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutItemsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidInputException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.personalizeevents#InvalidInputException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.personalizeevents#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InvalidInputExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutUsersCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutUsersCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutUsersCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidInputException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.personalizeevents#InvalidInputException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.personalizeevents#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InvalidInputExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1InvalidInputExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidInputException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1Event = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.eventType !== undefined && input.eventType !== null && {\n    eventType: input.eventType\n  }), input.eventValue !== undefined && input.eventValue !== null && {\n    eventValue: input.eventValue\n  }), input.impression !== undefined && input.impression !== null && {\n    impression: serializeAws_restJson1Impression(input.impression, context)\n  }), input.itemId !== undefined && input.itemId !== null && {\n    itemId: input.itemId\n  }), input.properties !== undefined && input.properties !== null && {\n    properties: __LazyJsonString.fromObject(input.properties)\n  }), input.recommendationId !== undefined && input.recommendationId !== null && {\n    recommendationId: input.recommendationId\n  }), input.sentAt !== undefined && input.sentAt !== null && {\n    sentAt: Math.round(input.sentAt.getTime() / 1000)\n  });\n};\n\nvar serializeAws_restJson1EventList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Event(entry, context);\n  });\n};\n\nvar serializeAws_restJson1Impression = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1Item = function (input, context) {\n  return __assign(__assign({}, input.itemId !== undefined && input.itemId !== null && {\n    itemId: input.itemId\n  }), input.properties !== undefined && input.properties !== null && {\n    properties: __LazyJsonString.fromObject(input.properties)\n  });\n};\n\nvar serializeAws_restJson1ItemList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Item(entry, context);\n  });\n};\n\nvar serializeAws_restJson1User = function (input, context) {\n  return __assign(__assign({}, input.properties !== undefined && input.properties !== null && {\n    properties: __LazyJsonString.fromObject(input.properties)\n  }), input.userId !== undefined && input.userId !== null && {\n    userId: input.userId\n  });\n};\n\nvar serializeAws_restJson1UserList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1User(entry, context);\n  });\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAW,IAAIC,aAAxB,QAA6C,wBAA7C;AACA,SAASC,cAAc,IAAIC,gBAA3B,QAAmD,wBAAnD;AACA,OAAO,IAAIC,sCAAsC,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIS,OAAJ,EAAaC,YAAb,EAA2BC,IAA3B,EAAiCC,EAAjC,EAAqCC,QAArC,EAA+CC,EAA/C,EAAmDC,QAAnD,EAA6DC,IAA7D;;IACA,OAAOf,WAAW,CAAC,IAAD,EAAO,UAAUgB,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,SAAf;UACAC,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAerB,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMQ,KAAK,CAACc,SAAN,KAAoBC,SAApB,IAC3Df,KAAK,CAACc,SAAN,KAAoB,IADuC,IAC/B;YAAEA,SAAS,EAAEE,+BAA+B,CAAChB,KAAK,CAACc,SAAP,EAAkBb,OAAlB;UAA5C,CADyB,CAAT,EAC6DD,KAAK,CAACiB,SAAN,KAAoBF,SAApB,IAAiCf,KAAK,CAACiB,SAAN,KAAoB,IAArD,IAA6D;YAAEA,SAAS,EAAEjB,KAAK,CAACiB;UAAnB,CAD1H,CAAT,EACsKjB,KAAK,CAACkB,UAAN,KAAqBH,SAArB,IAAkCf,KAAK,CAACkB,UAAN,KAAqB,IAAvD,IAA+D;YAAEA,UAAU,EAAElB,KAAK,CAACkB;UAApB,CADrO,CAAT,EACmRlB,KAAK,CAACmB,MAAN,KAAiBJ,SAAjB,IAA8Bf,KAAK,CAACmB,MAAN,KAAiB,IAA/C,IAAuD;YAAEA,MAAM,EAAEnB,KAAK,CAACmB;UAAhB,CAD1U,CAAvB,CAAP;UAEA,OAAO,CAAC;UAAE;UAAH,EAAclB,OAAO,CAACmB,QAAR,EAAd,CAAP;;QACJ,KAAK,CAAL;UACIf,EAAE,GAAGK,EAAE,CAACW,IAAH,EAAL,EAAgBf,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G;UACA,OAAO,CAAC;UAAE;UAAH,EAAe,IAAIb,aAAJ,CAAkB;YAChCY,QAAQ,EAAEA,QADsB;YAEhCF,QAAQ,EAAEA,QAFsB;YAGhCG,IAAI,EAAEA,IAH0B;YAIhCa,MAAM,EAAE,MAJwB;YAKhCpB,OAAO,EAAEA,OALuB;YAMhCqB,IAAI,EAAEpB,YAN0B;YAOhCC,IAAI,EAAEA;UAP0B,CAAlB,CAAf,CAAP;MAXR;IAqBH,CAtBiB,CAAlB;EAuBH,CAzB+F,CAAhB;AAyB3E,CAzBE;AA0BP,OAAO,IAAIoB,qCAAqC,GAAG,UAAUxB,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIS,OAAJ,EAAaC,YAAb,EAA2BC,IAA3B,EAAiCC,EAAjC,EAAqCC,QAArC,EAA+CC,EAA/C,EAAmDC,QAAnD,EAA6DC,IAA7D;;IACA,OAAOf,WAAW,CAAC,IAAD,EAAO,UAAUgB,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,QAAf;UACAC,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAerB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMQ,KAAK,CAACyB,UAAN,KAAqBV,SAArB,IAAkCf,KAAK,CAACyB,UAAN,KAAqB,IAAvD,IAA+D;YAAEA,UAAU,EAAEzB,KAAK,CAACyB;UAApB,CAArE,CAAT,EAAmHzB,KAAK,CAAC0B,KAAN,KAAgBX,SAAhB,IAC7If,KAAK,CAAC0B,KAAN,KAAgB,IAD6H,IACrH;YAAEA,KAAK,EAAEC,8BAA8B,CAAC3B,KAAK,CAAC0B,KAAP,EAAczB,OAAd;UAAvC,CADE,CAAvB,CAAP;UAEA,OAAO,CAAC;UAAE;UAAH,EAAcA,OAAO,CAACmB,QAAR,EAAd,CAAP;;QACJ,KAAK,CAAL;UACIf,EAAE,GAAGK,EAAE,CAACW,IAAH,EAAL,EAAgBf,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G;UACA,OAAO,CAAC;UAAE;UAAH,EAAe,IAAIb,aAAJ,CAAkB;YAChCY,QAAQ,EAAEA,QADsB;YAEhCF,QAAQ,EAAEA,QAFsB;YAGhCG,IAAI,EAAEA,IAH0B;YAIhCa,MAAM,EAAE,MAJwB;YAKhCpB,OAAO,EAAEA,OALuB;YAMhCqB,IAAI,EAAEpB,YAN0B;YAOhCC,IAAI,EAAEA;UAP0B,CAAlB,CAAf,CAAP;MAXR;IAqBH,CAtBiB,CAAlB;EAuBH,CAzB8F,CAAhB;AAyB1E,CAzBE;AA0BP,OAAO,IAAIwB,qCAAqC,GAAG,UAAU5B,KAAV,EAAiBC,OAAjB,EAA0B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChI,IAAIS,OAAJ,EAAaC,YAAb,EAA2BC,IAA3B,EAAiCC,EAAjC,EAAqCC,QAArC,EAA+CC,EAA/C,EAAmDC,QAAnD,EAA6DC,IAA7D;;IACA,OAAOf,WAAW,CAAC,IAAD,EAAO,UAAUgB,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACC,KAAX;QACI,KAAK,CAAL;UACIT,OAAO,GAAG;YACN,gBAAgB;UADV,CAAV;UAGAC,YAAY,GAAG,QAAf;UACAC,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAerB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMQ,KAAK,CAACyB,UAAN,KAAqBV,SAArB,IAAkCf,KAAK,CAACyB,UAAN,KAAqB,IAAvD,IAA+D;YAAEA,UAAU,EAAEzB,KAAK,CAACyB;UAApB,CAArE,CAAT,EAAmHzB,KAAK,CAAC6B,KAAN,KAAgBd,SAAhB,IAC7If,KAAK,CAAC6B,KAAN,KAAgB,IAD6H,IACrH;YAAEA,KAAK,EAAEC,8BAA8B,CAAC9B,KAAK,CAAC6B,KAAP,EAAc5B,OAAd;UAAvC,CADE,CAAvB,CAAP;UAEA,OAAO,CAAC;UAAE;UAAH,EAAcA,OAAO,CAACmB,QAAR,EAAd,CAAP;;QACJ,KAAK,CAAL;UACIf,EAAE,GAAGK,EAAE,CAACW,IAAH,EAAL,EAAgBf,QAAQ,GAAGD,EAAE,CAACC,QAA9B,EAAwCC,EAAE,GAAGF,EAAE,CAACG,QAAhD,EAA0DA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA/F,EAAmGE,IAAI,GAAGJ,EAAE,CAACI,IAA7G;UACA,OAAO,CAAC;UAAE;UAAH,EAAe,IAAIb,aAAJ,CAAkB;YAChCY,QAAQ,EAAEA,QADsB;YAEhCF,QAAQ,EAAEA,QAFsB;YAGhCG,IAAI,EAAEA,IAH0B;YAIhCa,MAAM,EAAE,MAJwB;YAKhCpB,OAAO,EAAEA,OALuB;YAMhCqB,IAAI,EAAEpB,YAN0B;YAOhCC,IAAI,EAAEA;UAP0B,CAAlB,CAAf,CAAP;MAXR;IAqBH,CAtBiB,CAAlB;EAuBH,CAzB8F,CAAhB;AAyB1E,CAzBE;AA0BP,OAAO,IAAI2B,wCAAwC,GAAG,UAAUC,MAAV,EAAkB/B,OAAlB,EAA2B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpI,IAAIwC,QAAJ;IACA,OAAOvC,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACM,KAAX;QACI,KAAK,CAAL;UACI,IAAIqB,MAAM,CAACE,UAAP,KAAsB,GAAtB,IAA6BF,MAAM,CAACE,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC;YAAE;YAAH,EAAeC,6CAA6C,CAACH,MAAD,EAAS/B,OAAT,CAA5D,CAAP;UACH;;UACDgC,QAAQ,GAAG;YACPG,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC;UAAE;UAAH,EAAcM,WAAW,CAACN,MAAM,CAAC5B,IAAR,EAAcH,OAAd,CAAzB,CAAP;;QACJ,KAAK,CAAL;UACII,EAAE,CAACgB,IAAH;;UACA,OAAO,CAAC;UAAE;UAAH,EAAekB,OAAO,CAACC,OAAR,CAAgBP,QAAhB,CAAf,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBkG,CAAhB;AAiB9E,CAjBE;;AAkBP,IAAIE,6CAA6C,GAAG,UAAUH,MAAV,EAAkB/B,OAAlB,EAA2B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAClI,IAAIgD,YAAJ,EAAkBpC,EAAlB,EAAsBqC,QAAtB,EAAgCC,SAAhC,EAA2CpC,EAA3C,EAA+CG,EAA/C,EAAmDkC,UAAnD,EAA+DC,OAA/D;;IACA,IAAIC,EAAJ;;IACA,OAAOpD,WAAW,CAAC,IAAD,EAAO,UAAUqD,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACpC,KAAX;QACI,KAAK,CAAL;UACIN,EAAE,GAAG,CAACb,QAAQ,CAAC,EAAD,EAAKwC,MAAL,CAAT,CAAL;UACAc,EAAE,GAAG,EAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAcE,SAAS,CAAChB,MAAM,CAAC5B,IAAR,EAAcH,OAAd,CAAvB,CAAP;;QACJ,KAAK,CAAL;UACIwC,YAAY,GAAGjD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB5C,EAAE,CAAC6C,MAAH,CAAU,EAAEJ,EAAE,CAAC1C,IAAH,GAAU2C,EAAE,CAAC1B,IAAH,EAAV,EAAqByB,EAAvB,EAAV,CAAvB,CAAf;UACAH,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,qBAAqB,CAACnB,MAAD,EAASS,YAAY,CAACrC,IAAtB,CAAjC;UACAG,EAAE,GAAGoC,SAAL;;UACA,QAAQpC,EAAR;YACI,KAAK,uBAAL;cAA8B,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAC9B,KAAK,uDAAL;cAA8D,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;UAFlE;;UAIA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIG,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAc0C,qDAAqD,CAACX,YAAD,EAAexC,OAAf,CAAnE,CAAP;;QACJ,KAAK,CAAL;UACIyC,QAAQ,GAAGlD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuBvC,EAAE,CAACwC,MAAH,CAAU,CAAEH,EAAE,CAAC1B,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgC,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIY,UAAU,GAAGH,YAAY,CAACrC,IAA1B;UACAuC,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoD,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAxI,CAA3B,CAAnB;UACAe,EAAE,CAACpC,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACIkC,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC;UAAE;UAAH,EAAejB,OAAO,CAACmB,MAAR,CAAeC,MAAM,CAACC,MAAP,CAAc,IAAIC,KAAJ,CAAUhB,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAf,CAAP;MA9BR;IAgCH,CAjCiB,CAAlB;EAkCH,CArCgG,CAAhB;AAqC5E,CArCL;;AAsCA,OAAO,IAAIoB,uCAAuC,GAAG,UAAU9B,MAAV,EAAkB/B,OAAlB,EAA2B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwC,QAAJ;IACA,OAAOvC,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACM,KAAX;QACI,KAAK,CAAL;UACI,IAAIqB,MAAM,CAACE,UAAP,KAAsB,GAAtB,IAA6BF,MAAM,CAACE,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC;YAAE;YAAH,EAAe6B,4CAA4C,CAAC/B,MAAD,EAAS/B,OAAT,CAA3D,CAAP;UACH;;UACDgC,QAAQ,GAAG;YACPG,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC;UAAE;UAAH,EAAcM,WAAW,CAACN,MAAM,CAAC5B,IAAR,EAAcH,OAAd,CAAzB,CAAP;;QACJ,KAAK,CAAL;UACII,EAAE,CAACgB,IAAH;;UACA,OAAO,CAAC;UAAE;UAAH,EAAekB,OAAO,CAACC,OAAR,CAAgBP,QAAhB,CAAf,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBiG,CAAhB;AAiB7E,CAjBE;;AAkBP,IAAI8B,4CAA4C,GAAG,UAAU/B,MAAV,EAAkB/B,OAAlB,EAA2B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIgD,YAAJ,EAAkBpC,EAAlB,EAAsBqC,QAAtB,EAAgCC,SAAhC,EAA2CpC,EAA3C,EAA+CG,EAA/C,EAAmDoC,EAAnD,EAAuDF,UAAvD,EAAmEC,OAAnE;;IACA,IAAIE,EAAJ;;IACA,OAAOrD,WAAW,CAAC,IAAD,EAAO,UAAUsE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrD,KAAX;QACI,KAAK,CAAL;UACIN,EAAE,GAAG,CAACb,QAAQ,CAAC,EAAD,EAAKwC,MAAL,CAAT,CAAL;UACAe,EAAE,GAAG,EAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAcC,SAAS,CAAChB,MAAM,CAAC5B,IAAR,EAAcH,OAAd,CAAvB,CAAP;;QACJ,KAAK,CAAL;UACIwC,YAAY,GAAGjD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB5C,EAAE,CAAC6C,MAAH,CAAU,EAAEH,EAAE,CAAC3C,IAAH,GAAU4D,EAAE,CAAC3C,IAAH,EAAV,EAAqB0B,EAAvB,EAAV,CAAvB,CAAf;UACAJ,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,qBAAqB,CAACnB,MAAD,EAASS,YAAY,CAACrC,IAAtB,CAAjC;UACAG,EAAE,GAAGoC,SAAL;;UACA,QAAQpC,EAAR;YACI,KAAK,uBAAL;cAA8B,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAC9B,KAAK,uDAAL;cAA8D,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAC9D,KAAK,2BAAL;cAAkC,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAClC,KAAK,2DAAL;cAAkE,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;UAJtE;;UAMA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIG,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAc0C,qDAAqD,CAACX,YAAD,EAAexC,OAAf,CAAnE,CAAP;;QACJ,KAAK,CAAL;UACIyC,QAAQ,GAAGlD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuBvC,EAAE,CAACwC,MAAH,CAAU,CAAEc,EAAE,CAAC3C,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgC,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIc,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAcmB,yDAAyD,CAACxB,YAAD,EAAexC,OAAf,CAAvE,CAAP;;QACJ,KAAK,CAAL;UACIyC,QAAQ,GAAGlD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuBH,EAAE,CAACI,MAAH,CAAU,CAAEc,EAAE,CAAC3C,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgC,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIY,UAAU,GAAGH,YAAY,CAACrC,IAA1B;UACAuC,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoD,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAxI,CAA3B,CAAnB;UACAgC,EAAE,CAACrD,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACIkC,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC;UAAE;UAAH,EAAejB,OAAO,CAACmB,MAAR,CAAeC,MAAM,CAACC,MAAP,CAAc,IAAIC,KAAJ,CAAUhB,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAf,CAAP;MAtCR;IAwCH,CAzCiB,CAAlB;EA0CH,CA7C+F,CAAhB;AA6C3E,CA7CL;;AA8CA,OAAO,IAAIwB,uCAAuC,GAAG,UAAUlC,MAAV,EAAkB/B,OAAlB,EAA2B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACnI,IAAIwC,QAAJ;IACA,OAAOvC,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACM,KAAX;QACI,KAAK,CAAL;UACI,IAAIqB,MAAM,CAACE,UAAP,KAAsB,GAAtB,IAA6BF,MAAM,CAACE,UAAP,IAAqB,GAAtD,EAA2D;YACvD,OAAO,CAAC;YAAE;YAAH,EAAeiC,4CAA4C,CAACnC,MAAD,EAAS/B,OAAT,CAA3D,CAAP;UACH;;UACDgC,QAAQ,GAAG;YACPG,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UADvB,CAAX;UAGA,OAAO,CAAC;UAAE;UAAH,EAAcM,WAAW,CAACN,MAAM,CAAC5B,IAAR,EAAcH,OAAd,CAAzB,CAAP;;QACJ,KAAK,CAAL;UACII,EAAE,CAACgB,IAAH;;UACA,OAAO,CAAC;UAAE;UAAH,EAAekB,OAAO,CAACC,OAAR,CAAgBP,QAAhB,CAAf,CAAP;MAXR;IAaH,CAdiB,CAAlB;EAeH,CAjBiG,CAAhB;AAiB7E,CAjBE;;AAkBP,IAAIkC,4CAA4C,GAAG,UAAUnC,MAAV,EAAkB/B,OAAlB,EAA2B;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACjI,IAAIgD,YAAJ,EAAkBpC,EAAlB,EAAsBqC,QAAtB,EAAgCC,SAAhC,EAA2CpC,EAA3C,EAA+CG,EAA/C,EAAmDoC,EAAnD,EAAuDF,UAAvD,EAAmEC,OAAnE;;IACA,IAAIE,EAAJ;;IACA,OAAOrD,WAAW,CAAC,IAAD,EAAO,UAAUsE,EAAV,EAAc;MACnC,QAAQA,EAAE,CAACrD,KAAX;QACI,KAAK,CAAL;UACIN,EAAE,GAAG,CAACb,QAAQ,CAAC,EAAD,EAAKwC,MAAL,CAAT,CAAL;UACAe,EAAE,GAAG,EAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAcC,SAAS,CAAChB,MAAM,CAAC5B,IAAR,EAAcH,OAAd,CAAvB,CAAP;;QACJ,KAAK,CAAL;UACIwC,YAAY,GAAGjD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB5C,EAAE,CAAC6C,MAAH,CAAU,EAAEH,EAAE,CAAC3C,IAAH,GAAU4D,EAAE,CAAC3C,IAAH,EAAV,EAAqB0B,EAAvB,EAAV,CAAvB,CAAf;UACAJ,SAAS,GAAG,cAAZ;UACAA,SAAS,GAAGQ,qBAAqB,CAACnB,MAAD,EAASS,YAAY,CAACrC,IAAtB,CAAjC;UACAG,EAAE,GAAGoC,SAAL;;UACA,QAAQpC,EAAR;YACI,KAAK,uBAAL;cAA8B,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAC9B,KAAK,uDAAL;cAA8D,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAC9D,KAAK,2BAAL;cAAkC,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YAClC,KAAK,2DAAL;cAAkE,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;UAJtE;;UAMA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIG,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAc0C,qDAAqD,CAACX,YAAD,EAAexC,OAAf,CAAnE,CAAP;;QACJ,KAAK,CAAL;UACIyC,QAAQ,GAAGlD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuBvC,EAAE,CAACwC,MAAH,CAAU,CAAEc,EAAE,CAAC3C,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgC,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIc,EAAE,GAAG,CAAC,EAAD,CAAL;UACA,OAAO,CAAC;UAAE;UAAH,EAAcmB,yDAAyD,CAACxB,YAAD,EAAexC,OAAf,CAAvE,CAAP;;QACJ,KAAK,CAAL;UACIyC,QAAQ,GAAGlD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACzD,QAAQ,CAACyD,KAAT,CAAe,KAAK,CAApB,EAAuBH,EAAE,CAACI,MAAH,CAAU,CAAEc,EAAE,CAAC3C,IAAH,EAAF,CAAV,CAAvB,CAAD,EAAmD;YAAEgC,IAAI,EAAEV,SAAR;YAAmBP,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAjD,CAAnD,CAAvB,CAAX;UACA,OAAO,CAAC;UAAE;UAAH,EAAc,CAAd,CAAP;;QACJ,KAAK,CAAL;UACIY,UAAU,GAAGH,YAAY,CAACrC,IAA1B;UACAuC,SAAS,GAAGC,UAAU,CAACU,IAAX,IAAmBV,UAAU,CAACW,IAA9B,IAAsCZ,SAAlD;UACAD,QAAQ,GAAGlD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoD,UAAL,CAAT,EAA2B;YAAES,IAAI,EAAE,KAAKV,SAAb;YAAwBE,OAAO,EAAED,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACY,OAAjC,IAA4Cb,SAA7E;YAAwFc,MAAM,EAAE,QAAhG;YAA0GrB,SAAS,EAAEC,mBAAmB,CAACL,MAAD;UAAxI,CAA3B,CAAnB;UACAgC,EAAE,CAACrD,KAAH,GAAW,CAAX;;QACJ,KAAK,CAAL;UACIkC,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACc,OAA7B,IAAwCb,SAAlD;UACAD,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;UACA,OAAOH,QAAQ,CAACc,OAAhB;UACA,OAAO,CAAC;UAAE;UAAH,EAAejB,OAAO,CAACmB,MAAR,CAAeC,MAAM,CAACC,MAAP,CAAc,IAAIC,KAAJ,CAAUhB,OAAV,CAAd,EAAkCH,QAAlC,CAAf,CAAf,CAAP;MAtCR;IAwCH,CAzCiB,CAAlB;EA0CH,CA7C+F,CAAhB;AA6C3E,CA7CL;;AA8CA,IAAIU,qDAAqD,GAAG,UAAUX,YAAV,EAAwBxC,OAAxB,EAAiC;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IAChJ,IAAIwC,QAAJ,EAAcmC,IAAd;IACA,OAAO1E,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;MACnC4B,QAAQ,GAAG;QACPoB,IAAI,EAAE,uBADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CAHvB;QAIPI,OAAO,EAAE9B;MAJF,CAAX;MAMAqD,IAAI,GAAG3B,YAAY,CAACrC,IAApB;;MACA,IAAIgE,IAAI,CAACvB,OAAL,KAAiB9B,SAAjB,IAA8BqD,IAAI,CAACvB,OAAL,KAAiB,IAAnD,EAAyD;QACrDZ,QAAQ,CAACY,OAAT,GAAmBuB,IAAI,CAACvB,OAAxB;MACH;;MACD,OAAO,CAAC;MAAE;MAAH,EAAeZ,QAAf,CAAP;IACH,CAZiB,CAAlB;EAaH,CAf8G,CAAhB;AAe1F,CAfL;;AAgBA,IAAIgC,yDAAyD,GAAG,UAAUxB,YAAV,EAAwBxC,OAAxB,EAAiC;EAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;IACpJ,IAAIwC,QAAJ,EAAcmC,IAAd;IACA,OAAO1E,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;MACnC4B,QAAQ,GAAG;QACPoB,IAAI,EAAE,2BADC;QAEPI,MAAM,EAAE,QAFD;QAGPrB,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CAHvB;QAIPI,OAAO,EAAE9B;MAJF,CAAX;MAMAqD,IAAI,GAAG3B,YAAY,CAACrC,IAApB;;MACA,IAAIgE,IAAI,CAACvB,OAAL,KAAiB9B,SAAjB,IAA8BqD,IAAI,CAACvB,OAAL,KAAiB,IAAnD,EAAyD;QACrDZ,QAAQ,CAACY,OAAT,GAAmBuB,IAAI,CAACvB,OAAxB;MACH;;MACD,OAAO,CAAC;MAAE;MAAH,EAAeZ,QAAf,CAAP;IACH,CAZiB,CAAlB;EAaH,CAfkH,CAAhB;AAe9F,CAfL;;AAgBA,IAAIoC,2BAA2B,GAAG,UAAUrE,KAAV,EAAiBC,OAAjB,EAA0B;EACxD,OAAOT,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMQ,KAAK,CAACsE,OAAN,KAAkBvD,SAAlB,IAA+Bf,KAAK,CAACsE,OAAN,KAAkB,IAAjD,IAAyD;IAAEA,OAAO,EAAEtE,KAAK,CAACsE;EAAjB,CAA/D,CAAT,EAAuGtE,KAAK,CAACuE,SAAN,KAAoBxD,SAApB,IAAiCf,KAAK,CAACuE,SAAN,KAAoB,IAArD,IAA6D;IAAEA,SAAS,EAAEvE,KAAK,CAACuE;EAAnB,CAApK,CAAT,EAAgNvE,KAAK,CAACwE,UAAN,KAAqBzD,SAArB,IAAkCf,KAAK,CAACwE,UAAN,KAAqB,IAAvD,IAA+D;IAAEA,UAAU,EAAExE,KAAK,CAACwE;EAApB,CAA/Q,CAAT,EAA6TxE,KAAK,CAACyE,UAAN,KAAqB1D,SAArB,IAC5Wf,KAAK,CAACyE,UAAN,KAAqB,IADuV,IAC/U;IAAEA,UAAU,EAAEC,gCAAgC,CAAC1E,KAAK,CAACyE,UAAP,EAAmBxE,OAAnB;EAA9C,CADkB,CAAT,EACuED,KAAK,CAAC2E,MAAN,KAAiB5D,SAAjB,IAA8Bf,KAAK,CAAC2E,MAAN,KAAiB,IAA/C,IAAuD;IAAEA,MAAM,EAAE3E,KAAK,CAAC2E;EAAhB,CAD9H,CAAT,EACoK3E,KAAK,CAAC4E,UAAN,KAAqB7D,SAArB,IACjMf,KAAK,CAAC4E,UAAN,KAAqB,IAD4K,IACpK;IAAEA,UAAU,EAAE9E,gBAAgB,CAAC+E,UAAjB,CAA4B7E,KAAK,CAAC4E,UAAlC;EAAd,CAFA,CAAT,EAE2E5E,KAAK,CAAC8E,gBAAN,KAA2B/D,SAA3B,IAC/Ff,KAAK,CAAC8E,gBAAN,KAA2B,IADoE,IAC5D;IAAEA,gBAAgB,EAAE9E,KAAK,CAAC8E;EAA1B,CAHf,CAAT,EAGyE9E,KAAK,CAAC+E,MAAN,KAAiBhE,SAAjB,IAA8Bf,KAAK,CAAC+E,MAAN,KAAiB,IAA/C,IAAuD;IAAEA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWjF,KAAK,CAAC+E,MAAN,CAAaG,OAAb,KAAyB,IAApC;EAAV,CAHhI,CAAf;AAIH,CALD;;AAMA,IAAIlE,+BAA+B,GAAG,UAAUhB,KAAV,EAAiBC,OAAjB,EAA0B;EAC5D,OAAOD,KAAK,CACPmF,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFC,GAFE,CAEE,UAAUC,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOjB,2BAA2B,CAACiB,KAAD,EAAQrF,OAAR,CAAlC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIyE,gCAAgC,GAAG,UAAU1E,KAAV,EAAiBC,OAAjB,EAA0B;EAC7D,OAAOD,KAAK,CACPmF,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFC,GAFE,CAEE,UAAUC,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOA,KAAP;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIC,0BAA0B,GAAG,UAAUvF,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,OAAOT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMQ,KAAK,CAAC2E,MAAN,KAAiB5D,SAAjB,IAA8Bf,KAAK,CAAC2E,MAAN,KAAiB,IAA/C,IAAuD;IAAEA,MAAM,EAAE3E,KAAK,CAAC2E;EAAhB,CAA7D,CAAT,EAAmG3E,KAAK,CAAC4E,UAAN,KAAqB7D,SAArB,IAC9Gf,KAAK,CAAC4E,UAAN,KAAqB,IADyF,IACjF;IAAEA,UAAU,EAAE9E,gBAAgB,CAAC+E,UAAjB,CAA4B7E,KAAK,CAAC4E,UAAlC;EAAd,CADlB,CAAf;AAEH,CAHD;;AAIA,IAAIjD,8BAA8B,GAAG,UAAU3B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,OAAOD,KAAK,CACPmF,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFC,GAFE,CAEE,UAAUC,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOC,0BAA0B,CAACD,KAAD,EAAQrF,OAAR,CAAjC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIuF,0BAA0B,GAAG,UAAUxF,KAAV,EAAiBC,OAAjB,EAA0B;EACvD,OAAOT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMQ,KAAK,CAAC4E,UAAN,KAAqB7D,SAArB,IAC1Bf,KAAK,CAAC4E,UAAN,KAAqB,IADK,IACG;IAAEA,UAAU,EAAE9E,gBAAgB,CAAC+E,UAAjB,CAA4B7E,KAAK,CAAC4E,UAAlC;EAAd,CADT,CAAT,EACoF5E,KAAK,CAACmB,MAAN,KAAiBJ,SAAjB,IAA8Bf,KAAK,CAACmB,MAAN,KAAiB,IAA/C,IAAuD;IAAEA,MAAM,EAAEnB,KAAK,CAACmB;EAAhB,CAD3I,CAAf;AAEH,CAHD;;AAIA,IAAIW,8BAA8B,GAAG,UAAU9B,KAAV,EAAiBC,OAAjB,EAA0B;EAC3D,OAAOD,KAAK,CACPmF,MADE,CACK,UAAUC,CAAV,EAAa;IAAE,OAAOA,CAAC,IAAI,IAAZ;EAAmB,CADvC,EAEFC,GAFE,CAEE,UAAUC,KAAV,EAAiB;IACtB,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAOE,0BAA0B,CAACF,KAAD,EAAQrF,OAAR,CAAjC;EACH,CAPM,CAAP;AAQH,CATD;;AAUA,IAAIoC,mBAAmB,GAAG,UAAUL,MAAV,EAAkB;EACxC,IAAI3B,EAAJ;;EACA,OAAQ;IACJoF,cAAc,EAAEzD,MAAM,CAACE,UADnB;IAEJwD,SAAS,EAAE,CAACrF,EAAE,GAAG2B,MAAM,CAAC9B,OAAP,CAAe,kBAAf,CAAN,MAA8C,IAA9C,IAAsDG,EAAE,KAAK,KAAK,CAAlE,GAAsEA,EAAtE,GAA2E2B,MAAM,CAAC9B,OAAP,CAAe,mBAAf,CAFlF;IAGJyF,iBAAiB,EAAE3D,MAAM,CAAC9B,OAAP,CAAe,YAAf,CAHf;IAIJ0F,IAAI,EAAE5D,MAAM,CAAC9B,OAAP,CAAe,aAAf;EAJF,CAAR;AAMH,CARD,C,CASA;;;AACA,IAAIoC,WAAW,GAAG,UAAUuD,UAAV,EAAsB5F,OAAtB,EAA+B;EAC7C,IAAI4F,UAAU,KAAK,KAAK,CAAxB,EAA2B;IAAEA,UAAU,GAAG,IAAIC,UAAJ,EAAb;EAAgC;;EAC7D,IAAID,UAAU,YAAYC,UAA1B,EAAsC;IAClC,OAAOvD,OAAO,CAACC,OAAR,CAAgBqD,UAAhB,CAAP;EACH;;EACD,OAAO5F,OAAO,CAAC8F,eAAR,CAAwBF,UAAxB,KAAuCtD,OAAO,CAACC,OAAR,CAAgB,IAAIsD,UAAJ,EAAhB,CAA9C;AACH,CAND,C,CAOA;;;AACA,IAAIE,iBAAiB,GAAG,UAAUH,UAAV,EAAsB5F,OAAtB,EAA+B;EACnD,OAAOqC,WAAW,CAACuD,UAAD,EAAa5F,OAAb,CAAX,CAAiCgG,IAAjC,CAAsC,UAAU7F,IAAV,EAAgB;IAAE,OAAOH,OAAO,CAACiG,WAAR,CAAoB9F,IAApB,CAAP;EAAmC,CAA3F,CAAP;AACH,CAFD;;AAGA,IAAI+F,yBAAyB,GAAG,UAAUC,KAAV,EAAiB;EAC7C,OAAOA,KAAK,KAAKrF,SAAV,IACHqF,KAAK,KAAK,IADP,IAEHA,KAAK,KAAK,EAFP,KAGF,CAACzC,MAAM,CAAC0C,mBAAP,CAA2BD,KAA3B,EAAkCE,QAAlC,CAA2C,QAA3C,CAAD,IAAyDF,KAAK,CAACG,MAAN,IAAgB,CAHvE,MAIF,CAAC5C,MAAM,CAAC0C,mBAAP,CAA2BD,KAA3B,EAAkCE,QAAlC,CAA2C,MAA3C,CAAD,IAAuDF,KAAK,CAACI,IAAN,IAAc,CAJnE,CAAP;AAKH,CAND;;AAOA,IAAIxD,SAAS,GAAG,UAAU6C,UAAV,EAAsB5F,OAAtB,EAA+B;EAC3C,OAAO+F,iBAAiB,CAACH,UAAD,EAAa5F,OAAb,CAAjB,CAAuCgG,IAAvC,CAA4C,UAAUQ,OAAV,EAAmB;IAClE,IAAIA,OAAO,CAACF,MAAZ,EAAoB;MAChB,OAAO3F,IAAI,CAAC8F,KAAL,CAAWD,OAAX,CAAP;IACH;;IACD,OAAO,EAAP;EACH,CALM,CAAP;AAMH,CAPD;AAQA;AACA;AACA;;;AACA,IAAItD,qBAAqB,GAAG,UAAUnB,MAAV,EAAkBoC,IAAlB,EAAwB;EAChD,IAAIuC,OAAO,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;IAAE,OAAOlD,MAAM,CAACmD,IAAP,CAAYF,MAAZ,EAAoBG,IAApB,CAAyB,UAAUC,CAAV,EAAa;MAAE,OAAOA,CAAC,CAACC,WAAF,OAAoBJ,GAAG,CAACI,WAAJ,EAA3B;IAA+C,CAAvF,CAAP;EAAkG,CAAzI;;EACA,IAAIC,iBAAiB,GAAG,UAAUC,QAAV,EAAoB;IACxC,IAAIC,UAAU,GAAGD,QAAjB;;IACA,IAAIC,UAAU,CAACC,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;MAC9BD,UAAU,GAAGA,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;IACH;;IACD,IAAIF,UAAU,CAACC,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;MAC9BD,UAAU,GAAGA,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;IACH;;IACD,OAAOF,UAAP;EACH,CATD;;EAUA,IAAIG,SAAS,GAAGZ,OAAO,CAAC3E,MAAM,CAAC9B,OAAR,EAAiB,kBAAjB,CAAvB;;EACA,IAAIqH,SAAS,KAAKxG,SAAlB,EAA6B;IACzB,OAAOmG,iBAAiB,CAAClF,MAAM,CAAC9B,OAAP,CAAeqH,SAAf,CAAD,CAAxB;EACH;;EACD,IAAInD,IAAI,CAACd,IAAL,KAAcvC,SAAlB,EAA6B;IACzB,OAAOmG,iBAAiB,CAAC9C,IAAI,CAACd,IAAN,CAAxB;EACH;;EACD,IAAIc,IAAI,CAAC,QAAD,CAAJ,KAAmBrD,SAAvB,EAAkC;IAC9B,OAAOmG,iBAAiB,CAAC9C,IAAI,CAAC,QAAD,CAAL,CAAxB;EACH;;EACD,OAAO,EAAP;AACH,CAvBD","names":["HttpRequest","__HttpRequest","LazyJsonString","__LazyJsonString","serializeAws_restJson1PutEventsCommand","input","context","headers","resolvedPath","body","JSON","stringify","__assign","eventList","undefined","serializeAws_restJson1EventList","sessionId","trackingId","userId","endpoint","_a","_c","hostname","_b","protocol","port","method","path","serializeAws_restJson1PutItemsCommand","datasetArn","items","serializeAws_restJson1ItemList","serializeAws_restJson1PutUsersCommand","users","serializeAws_restJson1UserList","deserializeAws_restJson1PutEventsCommand","output","statusCode","deserializeAws_restJson1PutEventsCommandError","contents","$metadata","deserializeMetadata","collectBody","Promise","resolve","parseBody","parsedOutput","_d","_e","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1InvalidInputExceptionResponse","response","name","parsedBody","code","Code","message","Message","$fault","reject","Object","assign","Error","deserializeAws_restJson1PutItemsCommand","deserializeAws_restJson1PutItemsCommandError","_f","deserializeAws_restJson1ResourceNotFoundExceptionResponse","deserializeAws_restJson1PutUsersCommand","deserializeAws_restJson1PutUsersCommandError","data","serializeAws_restJson1Event","eventId","eventType","eventValue","impression","serializeAws_restJson1Impression","itemId","properties","fromObject","recommendationId","sentAt","Math","round","getTime","filter","e","map","entry","serializeAws_restJson1Item","serializeAws_restJson1User","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","isSerializableHeaderValue","value","getOwnPropertyNames","includes","length","size","encoded","parse","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/client-personalize-events/protocols/Aws_restJson1.ts"],"sourcesContent":["import { PutEventsCommandInput, PutEventsCommandOutput } from \"../commands/PutEventsCommand\";\nimport { PutItemsCommandInput, PutItemsCommandOutput } from \"../commands/PutItemsCommand\";\nimport { PutUsersCommandInput, PutUsersCommandOutput } from \"../commands/PutUsersCommand\";\nimport { Event, InvalidInputException, Item, ResourceNotFoundException, User } from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString, SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_restJson1PutEventsCommand = async (\n  input: PutEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/events\";\n  let body: any;\n  body = JSON.stringify({\n    ...(input.eventList !== undefined &&\n      input.eventList !== null && { eventList: serializeAws_restJson1EventList(input.eventList, context) }),\n    ...(input.sessionId !== undefined && input.sessionId !== null && { sessionId: input.sessionId }),\n    ...(input.trackingId !== undefined && input.trackingId !== null && { trackingId: input.trackingId }),\n    ...(input.userId !== undefined && input.userId !== null && { userId: input.userId }),\n  });\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutItemsCommand = async (\n  input: PutItemsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/items\";\n  let body: any;\n  body = JSON.stringify({\n    ...(input.datasetArn !== undefined && input.datasetArn !== null && { datasetArn: input.datasetArn }),\n    ...(input.items !== undefined &&\n      input.items !== null && { items: serializeAws_restJson1ItemList(input.items, context) }),\n  });\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutUsersCommand = async (\n  input: PutUsersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/users\";\n  let body: any;\n  body = JSON.stringify({\n    ...(input.datasetArn !== undefined && input.datasetArn !== null && { datasetArn: input.datasetArn }),\n    ...(input.users !== undefined &&\n      input.users !== null && { users: serializeAws_restJson1UserList(input.users, context) }),\n  });\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const deserializeAws_restJson1PutEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventsCommandError(output, context);\n  }\n  const contents: PutEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidInputException\":\n    case \"com.amazonaws.personalizeevents#InvalidInputException\":\n      response = {\n        ...(await deserializeAws_restJson1InvalidInputExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutItemsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutItemsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutItemsCommandError(output, context);\n  }\n  const contents: PutItemsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutItemsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutItemsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidInputException\":\n    case \"com.amazonaws.personalizeevents#InvalidInputException\":\n      response = {\n        ...(await deserializeAws_restJson1InvalidInputExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.personalizeevents#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutUsersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutUsersCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutUsersCommandError(output, context);\n  }\n  const contents: PutUsersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutUsersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutUsersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidInputException\":\n    case \"com.amazonaws.personalizeevents#InvalidInputException\":\n      response = {\n        ...(await deserializeAws_restJson1InvalidInputExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.personalizeevents#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_restJson1InvalidInputExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidInputException> => {\n  const contents: InvalidInputException = {\n    name: \"InvalidInputException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    message: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.message !== undefined && data.message !== null) {\n    contents.message = data.message;\n  }\n  return contents;\n};\n\nconst serializeAws_restJson1Event = (input: Event, context: __SerdeContext): any => {\n  return {\n    ...(input.eventId !== undefined && input.eventId !== null && { eventId: input.eventId }),\n    ...(input.eventType !== undefined && input.eventType !== null && { eventType: input.eventType }),\n    ...(input.eventValue !== undefined && input.eventValue !== null && { eventValue: input.eventValue }),\n    ...(input.impression !== undefined &&\n      input.impression !== null && { impression: serializeAws_restJson1Impression(input.impression, context) }),\n    ...(input.itemId !== undefined && input.itemId !== null && { itemId: input.itemId }),\n    ...(input.properties !== undefined &&\n      input.properties !== null && { properties: __LazyJsonString.fromObject(input.properties) }),\n    ...(input.recommendationId !== undefined &&\n      input.recommendationId !== null && { recommendationId: input.recommendationId }),\n    ...(input.sentAt !== undefined && input.sentAt !== null && { sentAt: Math.round(input.sentAt.getTime() / 1000) }),\n  };\n};\n\nconst serializeAws_restJson1EventList = (input: Event[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1Event(entry, context);\n    });\n};\n\nconst serializeAws_restJson1Impression = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1Item = (input: Item, context: __SerdeContext): any => {\n  return {\n    ...(input.itemId !== undefined && input.itemId !== null && { itemId: input.itemId }),\n    ...(input.properties !== undefined &&\n      input.properties !== null && { properties: __LazyJsonString.fromObject(input.properties) }),\n  };\n};\n\nconst serializeAws_restJson1ItemList = (input: Item[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1Item(entry, context);\n    });\n};\n\nconst serializeAws_restJson1User = (input: User, context: __SerdeContext): any => {\n  return {\n    ...(input.properties !== undefined &&\n      input.properties !== null && { properties: __LazyJsonString.fromObject(input.properties) }),\n    ...(input.userId !== undefined && input.userId !== null && { userId: input.userId }),\n  };\n};\n\nconst serializeAws_restJson1UserList = (input: User[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1User(entry, context);\n    });\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}