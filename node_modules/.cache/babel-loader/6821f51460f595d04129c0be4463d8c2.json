{"ast":null,"code":"import * as e from \"react\";\nexport function useDirection(t, n) {\n  const [r, o] = e.useState(\"ltr\"),\n        [i, u] = e.useState(),\n        c = e.useRef(0);\n  return e.useEffect(() => {\n    if (void 0 === n && null != t && t.parentElement) {\n      const e = getComputedStyle(t.parentElement);\n      u(e);\n    }\n  }, [t, n]), e.useEffect(() => (void 0 === n && function e() {\n    c.current = requestAnimationFrame(() => {\n      const t = null == i ? void 0 : i.direction;\n      t && o(t), e();\n    });\n  }(), () => cancelAnimationFrame(c.current)), [i, n, o]), n || r;\n}","map":{"version":3,"mappings":"AAAA,OAAM,KAAIA,CAAV,MAAgB,OAAhB;AAAwB,OAAO,SAASC,YAAT,CAAsBC,CAAtB,EAAwBC,CAAxB,EAA0B;EAAC,MAAK,CAACC,CAAD,EAAGC,CAAH,IAAML,CAAC,CAACM,QAAF,CAAW,KAAX,CAAX;EAAA,MAA6B,CAACC,CAAD,EAAGC,CAAH,IAAMR,CAAC,CAACM,QAAF,EAAnC;EAAA,MAAgDG,CAAC,GAACT,CAAC,CAACU,MAAF,CAAS,CAAT,CAAlD;EAA8D,OAAOV,CAAC,CAACW,SAAF,CAAa,MAAI;IAAC,IAAG,KAAK,CAAL,KAASR,CAAT,IAAY,QAAMD,CAAlB,IAAqBA,CAAC,CAACU,aAA1B,EAAwC;MAAC,MAAMZ,CAAC,GAACa,gBAAgB,CAACX,CAAC,CAACU,aAAH,CAAxB;MAA0CJ,CAAC,CAACR,CAAD,CAAD;IAAK;EAAC,CAA3G,EAA6G,CAACE,CAAD,EAAGC,CAAH,CAA7G,GAAoHH,CAAC,CAACW,SAAF,CAAa,OAAK,KAAK,CAAL,KAASR,CAAT,IAAY,SAASH,CAAT,GAAY;IAACS,CAAC,CAACK,OAAF,GAAUC,qBAAqB,CAAE,MAAI;MAAC,MAAMb,CAAC,GAAC,QAAMK,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACS,SAAzB;MAAmCd,CAAC,IAAEG,CAAC,CAACH,CAAD,CAAJ,EAAQF,CAAC,EAAT;IAAY,CAAtD,CAA/B;EAAwF,CAArG,EAAZ,EAAoH,MAAIiB,oBAAoB,CAACR,CAAC,CAACK,OAAH,CAAjJ,CAAb,EAA4K,CAACP,CAAD,EAAGJ,CAAH,EAAKE,CAAL,CAA5K,CAApH,EAAySF,CAAC,IAAEC,CAAnT;AAAqT","names":["useDirection","element","directionProp","direction","setDirection","React","useState","computedStyle","setComputedStyle","rAFRef","useRef","useEffect","undefined","parentElement","getComputedStyle","getDirection","current","requestAnimationFrame","dir","cancelAnimationFrame"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@radix-ui/react-use-direction/dist/packages/react/use-direction/src/useDirection.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\n\nexport function useDirection(element: HTMLElement | null, directionProp?: Direction) {\n  const [direction, setDirection] = React.useState<Direction>('ltr');\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const rAFRef = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    // We check inherited direction of the parent instead of the `element` itself.\n    // This is because we internally set the computed `dir` on the element so wouldn't be\n    // able to react to changes to the inherited direction. The `dir` attribute we set should\n    // always sync with the direction prop OR its inherited direction.\n    if (directionProp === undefined && element?.parentElement) {\n      const computedStyle = getComputedStyle(element.parentElement);\n      setComputedStyle(computedStyle);\n    }\n  }, [element, directionProp]);\n\n  React.useEffect(() => {\n    function getDirection() {\n      rAFRef.current = requestAnimationFrame(() => {\n        const dir = computedStyle?.direction as Direction | '' | undefined;\n        if (dir) setDirection(dir);\n        getDirection();\n      });\n    }\n\n    if (directionProp === undefined) getDirection();\n    return () => cancelAnimationFrame(rAFRef.current);\n  }, [computedStyle, directionProp, setDirection]);\n\n  return directionProp || direction;\n}\n"]},"metadata":{},"sourceType":"module"}