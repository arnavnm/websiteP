{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketAccelerateConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketAccelerateConfigurationCommand, serializeAws_restXmlPutBucketAccelerateConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer Acceleration is a\n *          bucket-level feature that enables you to perform faster data transfers to Amazon S3.</p>\n *\n *          <p> To use this operation, you must have permission to perform the\n *          s3:PutAccelerateConfiguration action. The bucket owner has this permission by default. The\n *          bucket owner can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p> The Transfer Acceleration state of a bucket can be set to one of the following two\n *          values:</p>\n *          <ul>\n *             <li>\n *                <p> Enabled – Enables accelerated data transfers to the bucket.</p>\n *             </li>\n *             <li>\n *                <p> Suspended – Disables accelerated data transfers to the bucket.</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a> operation returns the transfer acceleration\n *          state of a bucket.</p>\n *\n *          <p>After setting the Transfer Acceleration state of a bucket to Enabled, it might take up\n *          to thirty minutes before the data transfer rates to the bucket increase.</p>\n *\n *          <p> The name of the bucket used for Transfer Acceleration must be DNS-compliant and must\n *          not contain periods (\".\").</p>\n *\n *          <p> For more information about transfer acceleration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Transfer Acceleration</a>.</p>\n *\n *          <p>The following operations are related to\n *          <code>PutBucketAccelerateConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketAccelerateConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketAccelerateConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketAccelerateConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketAccelerateConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketAccelerateConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketAccelerateConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function outputFilterSensitiveLog(output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketAccelerateConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context);\n  };\n\n  PutBucketAccelerateConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context);\n  };\n\n  return PutBucketAccelerateConfigurationCommand;\n}($Command);\n\nexport { PutBucketAccelerateConfigurationCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uCAAT,QAAwD,oBAAxD;AACA,SAASC,6DAAT,EAAwEC,2DAAxE,QAA4I,0BAA5I;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uCAAuC;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC3ET,SAAS,CAACQ,uCAAD,EAA0CC,MAA1C,CAAT,CAD2E,CAE3E;EACA;;;EACA,SAASD,uCAAT,CAAiDE,KAAjD,EAAwD;IACpD,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALoD,CAMpD;EACH;EACD;AACJ;AACA;;;EACIH,uCAAuC,CAACK,SAAxC,CAAkDC,iBAAlD,GAAsE,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IACjH,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBf,uBAAuB,CAACY,aAAD,CAAhD;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,UAAjB;IACA,IAAIC,WAAW,GAAG,yCAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,uCAAuC,CAAC4B,kBAJvC;MAK1BC,wBAAwB,EAAE,kCAAUC,MAAV,EAAkB;QAAE,OAAOA,MAAP;MAAgB;IALpC,CAA9B;IAOA,IAAIC,cAAc,GAAGhB,aAAa,CAACgB,cAAnC;IACA,OAAOV,KAAK,CAACW,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCjB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAlBD;;EAmBAnB,uCAAuC,CAACK,SAAxC,CAAkDO,SAAlD,GAA8D,UAAUV,KAAV,EAAiB0B,OAAjB,EAA0B;IACpF,OAAOjC,2DAA2D,CAACO,KAAD,EAAQ0B,OAAR,CAAlE;EACH,CAFD;;EAGA5B,uCAAuC,CAACK,SAAxC,CAAkDQ,WAAlD,GAAgE,UAAUU,MAAV,EAAkBK,OAAlB,EAA2B;IACvF,OAAOlC,6DAA6D,CAAC6B,MAAD,EAASK,OAAT,CAApE;EACH,CAFD;;EAGA,OAAO5B,uCAAP;AACH,CAzC4D,CAyC3DD,QAzC2D,CAA7D;;AA0CA,SAASC,uCAAT","names":["PutBucketAccelerateConfigurationRequest","deserializeAws_restXmlPutBucketAccelerateConfigurationCommand","serializeAws_restXmlPutBucketAccelerateConfigurationCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketAccelerateConfigurationCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/client-s3/commands/PutBucketAccelerateConfigurationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketAccelerateConfigurationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketAccelerateConfigurationCommand,\n  serializeAws_restXmlPutBucketAccelerateConfigurationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketAccelerateConfigurationCommandInput = PutBucketAccelerateConfigurationRequest;\nexport type PutBucketAccelerateConfigurationCommandOutput = __MetadataBearer;\n\n/**\n * <p>Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer Acceleration is a\n *          bucket-level feature that enables you to perform faster data transfers to Amazon S3.</p>\n *\n *          <p> To use this operation, you must have permission to perform the\n *          s3:PutAccelerateConfiguration action. The bucket owner has this permission by default. The\n *          bucket owner can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p> The Transfer Acceleration state of a bucket can be set to one of the following two\n *          values:</p>\n *          <ul>\n *             <li>\n *                <p> Enabled – Enables accelerated data transfers to the bucket.</p>\n *             </li>\n *             <li>\n *                <p> Suspended – Disables accelerated data transfers to the bucket.</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a> operation returns the transfer acceleration\n *          state of a bucket.</p>\n *\n *          <p>After setting the Transfer Acceleration state of a bucket to Enabled, it might take up\n *          to thirty minutes before the data transfer rates to the bucket increase.</p>\n *\n *          <p> The name of the bucket used for Transfer Acceleration must be DNS-compliant and must\n *          not contain periods (\".\").</p>\n *\n *          <p> For more information about transfer acceleration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Transfer Acceleration</a>.</p>\n *\n *          <p>The following operations are related to\n *          <code>PutBucketAccelerateConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketAccelerateConfigurationCommand extends $Command<\n  PutBucketAccelerateConfigurationCommandInput,\n  PutBucketAccelerateConfigurationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketAccelerateConfigurationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketAccelerateConfigurationCommandInput, PutBucketAccelerateConfigurationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketAccelerateConfigurationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketAccelerateConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: PutBucketAccelerateConfigurationCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<PutBucketAccelerateConfigurationCommandOutput> {\n    return deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}