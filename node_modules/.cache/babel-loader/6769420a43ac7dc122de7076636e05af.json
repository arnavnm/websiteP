{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport { browserOrNode, isWebWorker } from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\n\nvar ReachabilityNavigator =\n/** @class */\nfunction () {\n  function ReachabilityNavigator() {}\n\n  ReachabilityNavigator.prototype.networkMonitor = function (netInfo) {\n    if (browserOrNode().isNode) {\n      return Observable.from([{\n        online: true\n      }]);\n    }\n\n    var globalObj = isWebWorker() ? self : window;\n    return new Observable(function (observer) {\n      observer.next({\n        online: globalObj.navigator.onLine\n      });\n\n      var notifyOnline = function () {\n        return observer.next({\n          online: true\n        });\n      };\n\n      var notifyOffline = function () {\n        return observer.next({\n          online: false\n        });\n      };\n\n      globalObj.addEventListener('online', notifyOnline);\n      globalObj.addEventListener('offline', notifyOffline);\n\n      ReachabilityNavigator._observers.push(observer);\n\n      return function () {\n        globalObj.removeEventListener('online', notifyOnline);\n        globalObj.removeEventListener('offline', notifyOffline);\n        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {\n          return _observer !== observer;\n        });\n      };\n    });\n  }; // expose observers to simulate offline mode for integration testing\n\n\n  ReachabilityNavigator._observerOverride = function (status) {\n    var e_1, _a;\n\n    var _loop_1 = function (observer) {\n      if (observer.closed) {\n        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {\n          return _observer !== observer;\n        });\n        return \"continue\";\n      }\n\n      observer.next(status);\n    };\n\n    try {\n      for (var _b = __values(ReachabilityNavigator._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var observer = _c.value;\n\n        _loop_1(observer);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  ReachabilityNavigator._observers = [];\n  return ReachabilityNavigator;\n}();\n\nexport default ReachabilityNavigator;","map":{"version":3,"mappings":"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","names":["browserOrNode","isWebWorker","Observable","ReachabilityNavigator","netInfo","isNode","from","online","globalObj","self","window","observer","next","navigator","onLine","notifyOnline","notifyOffline","addEventListener","_observers","push","removeEventListener","filter","status","closed","_c"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/core/src/Util/Reachability.ts"],"sourcesContent":["import { browserOrNode, isWebWorker } from '@aws-amplify/core';\nimport Observable, { ZenObservable } from 'zen-observable-ts';\n\ntype NetworkStatus = {\n\tonline: boolean;\n};\n\nexport default class ReachabilityNavigator implements Reachability {\n\tprivate static _observers: Array<\n\t\tZenObservable.SubscriptionObserver<NetworkStatus>\n\t> = [];\n\n\tnetworkMonitor(netInfo?: any): Observable<NetworkStatus> {\n\t\tif (browserOrNode().isNode) {\n\t\t\treturn Observable.from([{ online: true }]);\n\t\t}\n\n\t\tconst globalObj = isWebWorker() ? self : window;\n\n\t\treturn new Observable(observer => {\n\t\t\tobserver.next({ online: globalObj.navigator.onLine });\n\n\t\t\tconst notifyOnline = () => observer.next({ online: true });\n\t\t\tconst notifyOffline = () => observer.next({ online: false });\n\n\t\t\tglobalObj.addEventListener('online', notifyOnline);\n\t\t\tglobalObj.addEventListener('offline', notifyOffline);\n\n\t\t\tReachabilityNavigator._observers.push(observer);\n\n\t\t\treturn () => {\n\t\t\t\tglobalObj.removeEventListener('online', notifyOnline);\n\t\t\t\tglobalObj.removeEventListener('offline', notifyOffline);\n\n\t\t\t\tReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(\n\t\t\t\t\t_observer => _observer !== observer\n\t\t\t\t);\n\t\t\t};\n\t\t});\n\t}\n\n\t// expose observers to simulate offline mode for integration testing\n\tprivate static _observerOverride(status: NetworkStatus): void {\n\t\tfor (const observer of ReachabilityNavigator._observers) {\n\t\t\tif (observer.closed) {\n\t\t\t\tReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(\n\t\t\t\t\t_observer => _observer !== observer\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tobserver.next(status);\n\t\t}\n\t}\n}\n\ninterface Reachability {\n\tnetworkMonitor(netInfo?: any): Observable<NetworkStatus>;\n}\n"]},"metadata":{},"sourceType":"module"}