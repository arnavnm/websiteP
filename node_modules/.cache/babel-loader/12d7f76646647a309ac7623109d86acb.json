{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CreateIdentityPoolInput, IdentityPool } from \"../models/models_0\";\nimport { deserializeAws_json1_1CreateIdentityPoolCommand, serializeAws_json1_1CreateIdentityPoolCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new identity pool. The identity pool is a store of user identity\n *          information that is specific to your AWS account. The keys for <code>SupportedLoginProviders</code> are as follows:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Facebook: <code>graph.facebook.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Google: <code>accounts.google.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Amazon: <code>www.amazon.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Twitter: <code>api.twitter.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Digits: <code>www.digits.com</code>\n *                </p>\n *             </li>\n *          </ul>\n *\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\n\nvar CreateIdentityPoolCommand =\n/** @class */\nfunction (_super) {\n  __extends(CreateIdentityPoolCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function CreateIdentityPoolCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  CreateIdentityPoolCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"CognitoIdentityClient\";\n    var commandName = \"CreateIdentityPoolCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: CreateIdentityPoolInput.filterSensitiveLog,\n      outputFilterSensitiveLog: IdentityPool.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  CreateIdentityPoolCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1CreateIdentityPoolCommand(input, context);\n  };\n\n  CreateIdentityPoolCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1CreateIdentityPoolCommand(output, context);\n  };\n\n  return CreateIdentityPoolCommand;\n}($Command);\n\nexport { CreateIdentityPoolCommand };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uBAAT,EAAkCC,YAAlC,QAAsD,oBAAtD;AACA,SAASC,+CAAT,EAA0DC,6CAA1D,QAAgH,0BAAhH;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC7DV,SAAS,CAACS,yBAAD,EAA4BC,MAA5B,CAAT,CAD6D,CAE7D;EACA;;;EACA,SAASD,yBAAT,CAAmCE,KAAnC,EAA0C;IACtC,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALsC,CAMtC;EACH;EACD;AACJ;AACA;;;EACIH,yBAAyB,CAACK,SAA1B,CAAoCC,iBAApC,GAAwD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IACnG,KAAKC,eAAL,CAAqBC,GAArB,CAAyBf,cAAc,CAACY,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBd,gBAAgB,CAACW,aAAD,CAAzC;IACA,IAAIM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,uBAAjB;IACA,IAAIC,WAAW,GAAG,2BAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE5B,uBAAuB,CAAC6B,kBAJvB;MAK1BC,wBAAwB,EAAE7B,YAAY,CAAC4B;IALb,CAA9B;IAOA,IAAIE,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAlBD;;EAmBAnB,yBAAyB,CAACK,SAA1B,CAAoCO,SAApC,GAAgD,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IACtE,OAAOhC,6CAA6C,CAACO,KAAD,EAAQyB,OAAR,CAApD;EACH,CAFD;;EAGA3B,yBAAyB,CAACK,SAA1B,CAAoCQ,WAApC,GAAkD,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IACzE,OAAOjC,+CAA+C,CAACkC,MAAD,EAASD,OAAT,CAAtD;EACH,CAFD;;EAGA,OAAO3B,yBAAP;AACH,CAzC8C,CAyC7CD,QAzC6C,CAA/C;;AA0CA,SAASC,yBAAT","names":["CreateIdentityPoolInput","IdentityPool","deserializeAws_json1_1CreateIdentityPoolCommand","serializeAws_json1_1CreateIdentityPoolCommand","getSerdePlugin","getAwsAuthPlugin","Command","$Command","__extends","input","_super","_this","CreateIdentityPoolCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/client-cognito-identity/commands/CreateIdentityPoolCommand.ts"],"sourcesContent":["import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { CreateIdentityPoolInput, IdentityPool } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1CreateIdentityPoolCommand,\n  serializeAws_json1_1CreateIdentityPoolCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CreateIdentityPoolCommandInput = CreateIdentityPoolInput;\nexport type CreateIdentityPoolCommandOutput = IdentityPool & __MetadataBearer;\n\n/**\n * <p>Creates a new identity pool. The identity pool is a store of user identity\n *          information that is specific to your AWS account. The keys for <code>SupportedLoginProviders</code> are as follows:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Facebook: <code>graph.facebook.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Google: <code>accounts.google.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Amazon: <code>www.amazon.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Twitter: <code>api.twitter.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Digits: <code>www.digits.com</code>\n *                </p>\n *             </li>\n *          </ul>\n *\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class CreateIdentityPoolCommand extends $Command<\n  CreateIdentityPoolCommandInput,\n  CreateIdentityPoolCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CreateIdentityPoolCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CreateIdentityPoolCommandInput, CreateIdentityPoolCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"CreateIdentityPoolCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CreateIdentityPoolInput.filterSensitiveLog,\n      outputFilterSensitiveLog: IdentityPool.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CreateIdentityPoolCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1CreateIdentityPoolCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CreateIdentityPoolCommandOutput> {\n    return deserializeAws_json1_1CreateIdentityPoolCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}