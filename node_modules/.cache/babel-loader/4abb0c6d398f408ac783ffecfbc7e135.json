{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { ModelPredicateCreator, ModelSortPredicateCreator } from '../../predicates';\nimport { isPredicateObj, OpType, QueryOne } from '../../types';\nimport { exhaustiveCheck, getIndex, getIndexFromAssociation, isModelConstructor, isPrivateMode, traverseModel, validatePredicate, sortCompareFunction } from '../../util';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\n\nvar IndexedDBAdapter =\n/** @class */\nfunction () {\n  function IndexedDBAdapter() {\n    this.dbName = DB_NAME;\n  }\n\n  IndexedDBAdapter.prototype.checkPrivate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPrivate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , isPrivateMode().then(function (isPrivate) {\n              return isPrivate;\n            })];\n\n          case 1:\n            isPrivate = _a.sent();\n\n            if (isPrivate) {\n              logger.error(\"IndexedDB not supported in this browser's private mode\");\n              return [2\n              /*return*/\n              , Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n            } else {\n              return [2\n              /*return*/\n              , Promise.resolve()];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getStorenameForModel = function (modelConstructor) {\n    var namespace = this.namespaceResolver(modelConstructor);\n    var modelName = modelConstructor.name;\n    return this.getStorename(namespace, modelName);\n  };\n\n  IndexedDBAdapter.prototype.getStorename = function (namespace, modelName) {\n    var storeName = namespace + \"_\" + modelName;\n    return storeName;\n  };\n\n  IndexedDBAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var VERSION, _a, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            if (!!this.initPromise) return [3\n            /*break*/\n            , 2];\n            this.initPromise = new Promise(function (res, rej) {\n              _this.resolve = res;\n              _this.reject = rej;\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.initPromise];\n\n          case 3:\n            _b.sent();\n\n            _b.label = 4;\n\n          case 4:\n            if (sessionId) {\n              this.dbName = DB_NAME + \"-\" + sessionId;\n            }\n\n            this.schema = theSchema;\n            this.namespaceResolver = namespaceResolver;\n            this.modelInstanceCreator = modelInstanceCreator;\n            this.getModelConstructorByModelName = getModelConstructorByModelName;\n            _b.label = 5;\n\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n\n            if (!!this.db) return [3\n            /*break*/\n            , 7];\n            VERSION = 2;\n            _a = this;\n            return [4\n            /*yield*/\n            , idb.openDB(this.dbName, VERSION, {\n              upgrade: function (db, oldVersion, newVersion, txn) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, _b, storeName, origStore, tmpName, newStore, cursor, count, e_1_1, error_2;\n\n                  var e_1, _c;\n\n                  var _this = this;\n\n                  return __generator(this, function (_d) {\n                    switch (_d.label) {\n                      case 0:\n                        if (oldVersion === 0) {\n                          Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                            var namespace = theSchema.namespaces[namespaceName];\n                            Object.keys(namespace.models).forEach(function (modelName) {\n                              var storeName = _this.getStorename(namespaceName, modelName);\n\n                              _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                            });\n                          });\n                          return [2\n                          /*return*/\n                          ];\n                        }\n\n                        if (!(oldVersion === 1 && newVersion === 2)) return [3\n                        /*break*/\n                        , 16];\n                        _d.label = 1;\n\n                      case 1:\n                        _d.trys.push([1, 14,, 15]);\n\n                        _d.label = 2;\n\n                      case 2:\n                        _d.trys.push([2, 11, 12, 13]);\n\n                        _a = __values(txn.objectStoreNames), _b = _a.next();\n                        _d.label = 3;\n\n                      case 3:\n                        if (!!_b.done) return [3\n                        /*break*/\n                        , 10];\n                        storeName = _b.value;\n                        origStore = txn.objectStore(storeName);\n                        tmpName = \"tmp_\" + storeName;\n                        origStore.name = tmpName;\n                        newStore = db.createObjectStore(storeName, {\n                          keyPath: undefined,\n                          autoIncrement: true\n                        });\n                        newStore.createIndex('byId', 'id', {\n                          unique: true\n                        });\n                        return [4\n                        /*yield*/\n                        , origStore.openCursor()];\n\n                      case 4:\n                        cursor = _d.sent();\n                        count = 0;\n                        _d.label = 5;\n\n                      case 5:\n                        if (!(cursor && cursor.value)) return [3\n                        /*break*/\n                        , 8]; // we don't pass key, since they are all new entries in the new store\n\n                        return [4\n                        /*yield*/\n                        , newStore.put(cursor.value)];\n\n                      case 6:\n                        // we don't pass key, since they are all new entries in the new store\n                        _d.sent();\n\n                        return [4\n                        /*yield*/\n                        , cursor.continue()];\n\n                      case 7:\n                        cursor = _d.sent();\n                        count++;\n                        return [3\n                        /*break*/\n                        , 5];\n\n                      case 8:\n                        // delete original\n                        db.deleteObjectStore(tmpName);\n                        logger.debug(count + \" \" + storeName + \" records migrated\");\n                        _d.label = 9;\n\n                      case 9:\n                        _b = _a.next();\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 10:\n                        return [3\n                        /*break*/\n                        , 13];\n\n                      case 11:\n                        e_1_1 = _d.sent();\n                        e_1 = {\n                          error: e_1_1\n                        };\n                        return [3\n                        /*break*/\n                        , 13];\n\n                      case 12:\n                        try {\n                          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        } finally {\n                          if (e_1) throw e_1.error;\n                        }\n\n                        return [7\n                        /*endfinally*/\n                        ];\n\n                      case 13:\n                        // add new models created after IndexedDB, but before migration\n                        // this case may happen when a user has not opened an app for\n                        // some time and a new model is added during that time\n                        Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                          var namespace = theSchema.namespaces[namespaceName];\n                          var objectStoreNames = new Set(txn.objectStoreNames);\n                          Object.keys(namespace.models).map(function (modelName) {\n                            return [modelName, _this.getStorename(namespaceName, modelName)];\n                          }).filter(function (_a) {\n                            var _b = __read(_a, 2),\n                                storeName = _b[1];\n\n                            return !objectStoreNames.has(storeName);\n                          }).forEach(function (_a) {\n                            var _b = __read(_a, 2),\n                                modelName = _b[0],\n                                storeName = _b[1];\n\n                            _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                          });\n                        });\n                        return [3\n                        /*break*/\n                        , 15];\n\n                      case 14:\n                        error_2 = _d.sent();\n                        logger.error('Error migrating IndexedDB data', error_2);\n                        txn.abort();\n                        throw error_2;\n\n                      case 15:\n                        return [2\n                        /*return*/\n                        ];\n\n                      case 16:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              }\n            })];\n\n          case 6:\n            _a.db = _b.sent();\n            this.resolve();\n            _b.label = 7;\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            error_1 = _b.sent();\n            this.reject(error_1);\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype._get = function (storeOrStoreName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, storeName, store, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof storeOrStoreName === 'string') {\n              storeName = storeOrStoreName;\n              index = this.db.transaction(storeName, 'readonly').store.index('byId');\n            } else {\n              store = storeOrStoreName;\n              index = store.index('byId');\n            }\n\n            return [4\n            /*yield*/\n            , index.get(id)];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.save = function (model, condition) {\n    var e_2, _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var modelConstructor, storeName, connectedModels, namespaceName, set, connectionStoreNames, tx, store, fromDB, predicates, predicateObjs, type, isValid, msg, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, store_1, id, fromDB_1, opType, key, e_2_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            storeName = this.getStorenameForModel(modelConstructor);\n            connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[this.namespaceResolver(modelConstructor)], this.modelInstanceCreator, this.getModelConstructorByModelName);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            set = new Set();\n            connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n              var modelName = _a.modelName,\n                  item = _a.item,\n                  instance = _a.instance;\n\n              var storeName = _this.getStorename(namespaceName, modelName);\n\n              set.add(storeName);\n              return {\n                storeName: storeName,\n                item: item,\n                instance: instance\n              };\n            });\n            tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4\n            /*yield*/\n            , this._get(store, model.id)];\n\n          case 2:\n            fromDB = _b.sent();\n\n            if (condition && fromDB) {\n              predicates = ModelPredicateCreator.getPredicates(condition);\n              predicateObjs = predicates.predicates, type = predicates.type;\n              isValid = validatePredicate(fromDB, type, predicateObjs);\n\n              if (!isValid) {\n                msg = 'Conditional update failed';\n                logger.error(msg, {\n                  model: fromDB,\n                  condition: predicateObjs\n                });\n                throw new Error(msg);\n              }\n            }\n\n            result = [];\n            _b.label = 3;\n\n          case 3:\n            _b.trys.push([3, 11, 12, 17]);\n\n            connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n            _b.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , connectionStoreNames_1.next()];\n\n          case 5:\n            if (!(connectionStoreNames_1_1 = _b.sent(), !connectionStoreNames_1_1.done)) return [3\n            /*break*/\n            , 10];\n            resItem = connectionStoreNames_1_1.value;\n            storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance;\n            store_1 = tx.objectStore(storeName_1);\n            id = item.id;\n            return [4\n            /*yield*/\n            , this._get(store_1, id)];\n\n          case 6:\n            fromDB_1 = _b.sent();\n            opType = fromDB_1 === undefined ? OpType.INSERT : OpType.UPDATE;\n            if (!(id === model.id || opType === OpType.INSERT)) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , store_1.index('byId').getKey(item.id)];\n\n          case 7:\n            key = _b.sent();\n            return [4\n            /*yield*/\n            , store_1.put(item, key)];\n\n          case 8:\n            _b.sent();\n\n            result.push([instance, opType]);\n            _b.label = 9;\n\n          case 9:\n            return [3\n            /*break*/\n            , 4];\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            e_2_1 = _b.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 12:\n            _b.trys.push([12,, 15, 16]);\n\n            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , _a.call(connectionStoreNames_1)];\n\n          case 13:\n            _b.sent();\n\n            _b.label = 14;\n\n          case 14:\n            return [3\n            /*break*/\n            , 16];\n\n          case 15:\n            if (e_2) throw e_2.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 17:\n            return [4\n            /*yield*/\n            , tx.done];\n\n          case 18:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.load = function (namespaceName, srcModelName, records) {\n    var records_1, records_1_1, records_2, records_2_1;\n\n    var e_3, _a, e_4, _b, e_5, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, relations, connectionStoreNames, modelConstructor, tx, relations_1, relations_1_1, relation, fieldName, modelName, targetName, storeName, store, modelConstructor_1, _d, recordItem, getByfield, connectionRecord, e_4_1, recordItem, connectionRecord, e_5_1, e_3_1;\n\n      var _this = this;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            namespace = this.schema.namespaces[namespaceName];\n            relations = namespace.relationships[srcModelName].relationTypes;\n            connectionStoreNames = relations.map(function (_a) {\n              var modelName = _a.modelName;\n              return _this.getStorename(namespaceName, modelName);\n            });\n            modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n\n            if (connectionStoreNames.length === 0) {\n              return [2\n              /*return*/\n              , records.map(function (record) {\n                return _this.modelInstanceCreator(modelConstructor, record);\n              })];\n            }\n\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readonly');\n            _e.label = 1;\n\n          case 1:\n            _e.trys.push([1, 34, 35, 40]);\n\n            relations_1 = __asyncValues(relations);\n            _e.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , relations_1.next()];\n\n          case 3:\n            if (!(relations_1_1 = _e.sent(), !relations_1_1.done)) return [3\n            /*break*/\n            , 33];\n            relation = relations_1_1.value;\n            fieldName = relation.fieldName, modelName = relation.modelName, targetName = relation.targetName;\n            storeName = this.getStorename(namespaceName, modelName);\n            store = tx.objectStore(storeName);\n            modelConstructor_1 = this.getModelConstructorByModelName(namespaceName, modelName);\n            _d = relation.relationType;\n\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'BELONGS_TO':\n                return [3\n                /*break*/\n                , 17];\n\n              case 'HAS_MANY':\n                return [3\n                /*break*/\n                , 30];\n            }\n\n            return [3\n            /*break*/\n            , 31];\n\n          case 4:\n            _e.trys.push([4, 10, 11, 16]);\n\n            records_1 = __asyncValues(records);\n            _e.label = 5;\n\n          case 5:\n            return [4\n            /*yield*/\n            , records_1.next()];\n\n          case 6:\n            if (!(records_1_1 = _e.sent(), !records_1_1.done)) return [3\n            /*break*/\n            , 9];\n            recordItem = records_1_1.value;\n            getByfield = recordItem[targetName] ? targetName : fieldName;\n            if (!recordItem[getByfield]) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this._get(store, recordItem[getByfield])];\n\n          case 7:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            _e.label = 8;\n\n          case 8:\n            return [3\n            /*break*/\n            , 5];\n\n          case 9:\n            return [3\n            /*break*/\n            , 16];\n\n          case 10:\n            e_4_1 = _e.sent();\n            e_4 = {\n              error: e_4_1\n            };\n            return [3\n            /*break*/\n            , 16];\n\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n\n            if (!(records_1_1 && !records_1_1.done && (_b = records_1.return))) return [3\n            /*break*/\n            , 13];\n            return [4\n            /*yield*/\n            , _b.call(records_1)];\n\n          case 12:\n            _e.sent();\n\n            _e.label = 13;\n\n          case 13:\n            return [3\n            /*break*/\n            , 15];\n\n          case 14:\n            if (e_4) throw e_4.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 15:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [3\n            /*break*/\n            , 32];\n\n          case 17:\n            _e.trys.push([17, 23, 24, 29]);\n\n            records_2 = __asyncValues(records);\n            _e.label = 18;\n\n          case 18:\n            return [4\n            /*yield*/\n            , records_2.next()];\n\n          case 19:\n            if (!(records_2_1 = _e.sent(), !records_2_1.done)) return [3\n            /*break*/\n            , 22];\n            recordItem = records_2_1.value;\n            if (!recordItem[targetName]) return [3\n            /*break*/\n            , 21];\n            return [4\n            /*yield*/\n            , this._get(store, recordItem[targetName])];\n\n          case 20:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            delete recordItem[targetName];\n            _e.label = 21;\n\n          case 21:\n            return [3\n            /*break*/\n            , 18];\n\n          case 22:\n            return [3\n            /*break*/\n            , 29];\n\n          case 23:\n            e_5_1 = _e.sent();\n            e_5 = {\n              error: e_5_1\n            };\n            return [3\n            /*break*/\n            , 29];\n\n          case 24:\n            _e.trys.push([24,, 27, 28]);\n\n            if (!(records_2_1 && !records_2_1.done && (_c = records_2.return))) return [3\n            /*break*/\n            , 26];\n            return [4\n            /*yield*/\n            , _c.call(records_2)];\n\n          case 25:\n            _e.sent();\n\n            _e.label = 26;\n\n          case 26:\n            return [3\n            /*break*/\n            , 28];\n\n          case 27:\n            if (e_5) throw e_5.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 28:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 29:\n            return [3\n            /*break*/\n            , 32];\n\n          case 30:\n            // TODO: Lazy loading\n            return [3\n            /*break*/\n            , 32];\n\n          case 31:\n            exhaustiveCheck(relation.relationType);\n            return [3\n            /*break*/\n            , 32];\n\n          case 32:\n            return [3\n            /*break*/\n            , 2];\n\n          case 33:\n            return [3\n            /*break*/\n            , 40];\n\n          case 34:\n            e_3_1 = _e.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3\n            /*break*/\n            , 40];\n\n          case 35:\n            _e.trys.push([35,, 38, 39]);\n\n            if (!(relations_1_1 && !relations_1_1.done && (_a = relations_1.return))) return [3\n            /*break*/\n            , 37];\n            return [4\n            /*yield*/\n            , _a.call(relations_1)];\n\n          case 36:\n            _e.sent();\n\n            _e.label = 37;\n\n          case 37:\n            return [3\n            /*break*/\n            , 39];\n\n          case 38:\n            if (e_3) throw e_3.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 39:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 40:\n            return [2\n            /*return*/\n            , records.map(function (record) {\n              return _this.modelInstanceCreator(modelConstructor, record);\n            })];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, namespaceName, predicates, queryById, hasSort, hasPagination, records;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            storeName = this.getStorenameForModel(modelConstructor);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n            queryById = predicates && this.idFromPredicate(predicates);\n            hasSort = pagination && pagination.sort;\n            hasPagination = pagination && pagination.limit;\n            return [4\n            /*yield*/\n            , function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var record, filtered, all;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!queryById) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , this.getById(storeName, queryById)];\n\n                    case 1:\n                      record = _a.sent();\n                      return [2\n                      /*return*/\n                      , record ? [record] : []];\n\n                    case 2:\n                      if (!predicates) return [3\n                      /*break*/\n                      , 4];\n                      return [4\n                      /*yield*/\n                      , this.filterOnPredicate(storeName, predicates)];\n\n                    case 3:\n                      filtered = _a.sent();\n                      return [2\n                      /*return*/\n                      , this.inMemoryPagination(filtered, pagination)];\n\n                    case 4:\n                      if (!hasSort) return [3\n                      /*break*/\n                      , 6];\n                      return [4\n                      /*yield*/\n                      , this.getAll(storeName)];\n\n                    case 5:\n                      all = _a.sent();\n                      return [2\n                      /*return*/\n                      , this.inMemoryPagination(all, pagination)];\n\n                    case 6:\n                      if (hasPagination) {\n                        return [2\n                        /*return*/\n                        , this.enginePagination(storeName, pagination)];\n                      }\n\n                      return [2\n                      /*return*/\n                      , this.getAll(storeName)];\n                  }\n                });\n              });\n            }()];\n\n          case 2:\n            records = _a.sent();\n            return [4\n            /*yield*/\n            , this.load(namespaceName, modelConstructor.name, records)];\n\n          case 3:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getById = function (storeName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._get(storeName, id)];\n\n          case 1:\n            record = _a.sent();\n            return [2\n            /*return*/\n            , record];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getAll = function (storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.db.getAll(storeName)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.idFromPredicate = function (predicates) {\n    var predicateObjs = predicates.predicates;\n    var idPredicate = predicateObjs.length === 1 && predicateObjs.find(function (p) {\n      return isPredicateObj(p) && p.field === 'id' && p.operator === 'eq';\n    });\n    return idPredicate && idPredicate.operand;\n  };\n\n  IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, all, filtered;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type;\n            return [4\n            /*yield*/\n            , this.getAll(storeName)];\n\n          case 1:\n            all = _a.sent();\n            filtered = predicateObjs ? all.filter(function (m) {\n              return validatePredicate(m, type, predicateObjs);\n            }) : all;\n            return [2\n            /*return*/\n            , filtered];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n    if (pagination && records.length > 1) {\n      if (pagination.sort) {\n        var sortPredicates = ModelSortPredicateCreator.getPredicates(pagination.sort);\n\n        if (sortPredicates.length) {\n          var compareFn = sortCompareFunction(sortPredicates);\n          records.sort(compareFn);\n        }\n      }\n\n      var _a = pagination.page,\n          page = _a === void 0 ? 0 : _a,\n          _b = pagination.limit,\n          limit = _b === void 0 ? 0 : _b;\n      var start = Math.max(0, page * limit) || 0;\n      var end = limit > 0 ? start + limit : records.length;\n      return records.slice(start, end);\n    }\n\n    return records;\n  };\n\n  IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!pagination) return [3\n            /*break*/\n            , 7];\n            _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n            initialRecord = Math.max(0, page * limit) || 0;\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName).objectStore(storeName).openCursor()];\n\n          case 1:\n            cursor = _c.sent();\n            if (!(cursor && initialRecord > 0)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , cursor.advance(initialRecord)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            pageResults = [];\n            hasLimit = typeof limit === 'number' && limit > 0;\n            _c.label = 4;\n\n          case 4:\n            if (!(cursor && cursor.value)) return [3\n            /*break*/\n            , 6];\n            pageResults.push(cursor.value);\n\n            if (hasLimit && pageResults.length === limit) {\n              return [3\n              /*break*/\n              , 6];\n            }\n\n            return [4\n            /*yield*/\n            , cursor.continue()];\n\n          case 5:\n            cursor = _c.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 6:\n            result = pageResults;\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            return [4\n            /*yield*/\n            , this.db.getAll(storeName)];\n\n          case 8:\n            result = _c.sent();\n            _c.label = 9;\n\n          case 9:\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, cursor, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4\n            /*yield*/\n            , this.db.transaction([storeName], 'readonly').objectStore(storeName).openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n\n          case 2:\n            cursor = _a.sent();\n            result = cursor ? cursor.value : undefined;\n            return [2\n            /*return*/\n            , result && this.modelInstanceCreator(modelConstructor, result)];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.delete = function (modelOrModelConstructor, condition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteQueue, modelConstructor, nameSpace, storeName, models, relations, deletedModels, deletedModels, model, modelConstructor, nameSpace, storeName, tx, store, fromDB, msg, predicates, predicateObjs, type, isValid, msg, relations, relations, deletedModels;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            deleteQueue = [];\n            if (!isModelConstructor(modelOrModelConstructor)) return [3\n            /*break*/\n            , 9];\n            modelConstructor = modelOrModelConstructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4\n            /*yield*/\n            , this.query(modelConstructor, condition)];\n\n          case 2:\n            models = _a.sent();\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            if (!(condition !== undefined)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 3:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 4:\n            _a.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [models, deletedModels]];\n\n          case 5:\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 6:\n            _a.sent(); // Delete all\n\n\n            return [4\n            /*yield*/\n            , this.db.transaction([storeName], 'readwrite').objectStore(storeName).clear()];\n\n          case 7:\n            // Delete all\n            _a.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [models, deletedModels]];\n\n          case 8:\n            return [3\n            /*break*/\n            , 17];\n\n          case 9:\n            model = modelOrModelConstructor;\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            if (!condition) return [3\n            /*break*/\n            , 13];\n            tx = this.db.transaction([storeName], 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4\n            /*yield*/\n            , this._get(store, model.id)];\n\n          case 10:\n            fromDB = _a.sent();\n\n            if (fromDB === undefined) {\n              msg = 'Model instance not found in storage';\n              logger.warn(msg, {\n                model: model\n              });\n              return [2\n              /*return*/\n              , [[model], []]];\n            }\n\n            predicates = ModelPredicateCreator.getPredicates(condition);\n            predicateObjs = predicates.predicates, type = predicates.type;\n            isValid = validatePredicate(fromDB, type, predicateObjs);\n\n            if (!isValid) {\n              msg = 'Conditional update failed';\n              logger.error(msg, {\n                model: fromDB,\n                condition: predicateObjs\n              });\n              throw new Error(msg);\n            }\n\n            return [4\n            /*yield*/\n            , tx.done];\n\n          case 11:\n            _a.sent();\n\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 12:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 15];\n\n          case 13:\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n\n          case 14:\n            _a.sent();\n\n            _a.label = 15;\n\n          case 15:\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 16:\n            _a.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [[model], deletedModels]];\n\n          case 17:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n    var deleteQueue_1, deleteQueue_1_1;\n\n    var e_6, _a, e_7, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var connectionStoreNames, tx, deleteItem, storeName, items, store, items_1, items_1_1, item, key, e_7_1, e_6_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            connectionStoreNames = deleteQueue.map(function (_a) {\n              var storeName = _a.storeName;\n              return storeName;\n            });\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 22, 23, 28]);\n\n            deleteQueue_1 = __asyncValues(deleteQueue);\n            _c.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , deleteQueue_1.next()];\n\n          case 3:\n            if (!(deleteQueue_1_1 = _c.sent(), !deleteQueue_1_1.done)) return [3\n            /*break*/\n            , 21];\n            deleteItem = deleteQueue_1_1.value;\n            storeName = deleteItem.storeName, items = deleteItem.items;\n            store = tx.objectStore(storeName);\n            _c.label = 4;\n\n          case 4:\n            _c.trys.push([4, 14, 15, 20]);\n\n            items_1 = __asyncValues(items);\n            _c.label = 5;\n\n          case 5:\n            return [4\n            /*yield*/\n            , items_1.next()];\n\n          case 6:\n            if (!(items_1_1 = _c.sent(), !items_1_1.done)) return [3\n            /*break*/\n            , 13];\n            item = items_1_1.value;\n            if (!item) return [3\n            /*break*/\n            , 12];\n            key = void 0;\n            if (!(typeof item === 'object')) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , store.index('byId').getKey(item['id'])];\n\n          case 7:\n            key = _c.sent();\n            return [3\n            /*break*/\n            , 10];\n\n          case 8:\n            return [4\n            /*yield*/\n            , store.index('byId').getKey(item.toString())];\n\n          case 9:\n            key = _c.sent();\n            _c.label = 10;\n\n          case 10:\n            if (!(key !== undefined)) return [3\n            /*break*/\n            , 12];\n            return [4\n            /*yield*/\n            , store.delete(key)];\n\n          case 11:\n            _c.sent();\n\n            _c.label = 12;\n\n          case 12:\n            return [3\n            /*break*/\n            , 5];\n\n          case 13:\n            return [3\n            /*break*/\n            , 20];\n\n          case 14:\n            e_7_1 = _c.sent();\n            e_7 = {\n              error: e_7_1\n            };\n            return [3\n            /*break*/\n            , 20];\n\n          case 15:\n            _c.trys.push([15,, 18, 19]);\n\n            if (!(items_1_1 && !items_1_1.done && (_b = items_1.return))) return [3\n            /*break*/\n            , 17];\n            return [4\n            /*yield*/\n            , _b.call(items_1)];\n\n          case 16:\n            _c.sent();\n\n            _c.label = 17;\n\n          case 17:\n            return [3\n            /*break*/\n            , 19];\n\n          case 18:\n            if (e_7) throw e_7.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 19:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 20:\n            return [3\n            /*break*/\n            , 2];\n\n          case 21:\n            return [3\n            /*break*/\n            , 28];\n\n          case 22:\n            e_6_1 = _c.sent();\n            e_6 = {\n              error: e_6_1\n            };\n            return [3\n            /*break*/\n            , 28];\n\n          case 23:\n            _c.trys.push([23,, 26, 27]);\n\n            if (!(deleteQueue_1_1 && !deleteQueue_1_1.done && (_a = deleteQueue_1.return))) return [3\n            /*break*/\n            , 25];\n            return [4\n            /*yield*/\n            , _a.call(deleteQueue_1)];\n\n          case 24:\n            _c.sent();\n\n            _c.label = 25;\n\n          case 25:\n            return [3\n            /*break*/\n            , 27];\n\n          case 26:\n            if (e_6) throw e_6.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 27:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 28:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteTraverse = function (relations, models, srcModel, nameSpace, deleteQueue) {\n    var relations_2, relations_2_1, models_1, models_1_1, models_2, models_2_1;\n\n    var e_8, _a, e_9, _b, e_10, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var rel, relationType, fieldName, modelName, targetName, storeName, index, _d, model, hasOneIndex, hasOneCustomField, value, recordToDelete, e_9_1, model, childrenArray, e_10_1, e_8_1;\n\n      var _this = this;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 35, 36, 41]);\n\n            relations_2 = __asyncValues(relations);\n            _e.label = 1;\n\n          case 1:\n            return [4\n            /*yield*/\n            , relations_2.next()];\n\n          case 2:\n            if (!(relations_2_1 = _e.sent(), !relations_2_1.done)) return [3\n            /*break*/\n            , 34];\n            rel = relations_2_1.value;\n            relationType = rel.relationType, fieldName = rel.fieldName, modelName = rel.modelName, targetName = rel.targetName;\n            storeName = this.getStorename(nameSpace, modelName);\n            index = getIndex(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, srcModel) || // if we were unable to find an index via relationTypes\n            // i.e. for keyName connections, attempt to find one by the\n            // associatedWith property\n            getIndexFromAssociation(this.schema.namespaces[nameSpace].relationships[modelName].indexes, rel.associatedWith);\n            _d = relationType;\n\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'HAS_MANY':\n                return [3\n                /*break*/\n                , 17];\n\n              case 'BELONGS_TO':\n                return [3\n                /*break*/\n                , 31];\n            }\n\n            return [3\n            /*break*/\n            , 32];\n\n          case 3:\n            _e.trys.push([3, 10, 11, 16]);\n\n            models_1 = __asyncValues(models);\n            _e.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , models_1.next()];\n\n          case 5:\n            if (!(models_1_1 = _e.sent(), !models_1_1.done)) return [3\n            /*break*/\n            , 9];\n            model = models_1_1.value;\n            hasOneIndex = index || 'byId';\n            hasOneCustomField = targetName in model;\n            value = hasOneCustomField ? model[targetName] : model.id;\n            if (!value) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(hasOneIndex).get(value)];\n\n          case 6:\n            recordToDelete = _e.sent();\n            return [4\n            /*yield*/\n            , this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, recordToDelete ? [recordToDelete] : [], modelName, nameSpace, deleteQueue)];\n\n          case 7:\n            _e.sent();\n\n            _e.label = 8;\n\n          case 8:\n            return [3\n            /*break*/\n            , 4];\n\n          case 9:\n            return [3\n            /*break*/\n            , 16];\n\n          case 10:\n            e_9_1 = _e.sent();\n            e_9 = {\n              error: e_9_1\n            };\n            return [3\n            /*break*/\n            , 16];\n\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n\n            if (!(models_1_1 && !models_1_1.done && (_b = models_1.return))) return [3\n            /*break*/\n            , 13];\n            return [4\n            /*yield*/\n            , _b.call(models_1)];\n\n          case 12:\n            _e.sent();\n\n            _e.label = 13;\n\n          case 13:\n            return [3\n            /*break*/\n            , 15];\n\n          case 14:\n            if (e_9) throw e_9.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 15:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [3\n            /*break*/\n            , 33];\n\n          case 17:\n            _e.trys.push([17, 24, 25, 30]);\n\n            models_2 = __asyncValues(models);\n            _e.label = 18;\n\n          case 18:\n            return [4\n            /*yield*/\n            , models_2.next()];\n\n          case 19:\n            if (!(models_2_1 = _e.sent(), !models_2_1.done)) return [3\n            /*break*/\n            , 23];\n            model = models_2_1.value;\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(index).getAll(model['id'])];\n\n          case 20:\n            childrenArray = _e.sent();\n            return [4\n            /*yield*/\n            , this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, childrenArray, modelName, nameSpace, deleteQueue)];\n\n          case 21:\n            _e.sent();\n\n            _e.label = 22;\n\n          case 22:\n            return [3\n            /*break*/\n            , 18];\n\n          case 23:\n            return [3\n            /*break*/\n            , 30];\n\n          case 24:\n            e_10_1 = _e.sent();\n            e_10 = {\n              error: e_10_1\n            };\n            return [3\n            /*break*/\n            , 30];\n\n          case 25:\n            _e.trys.push([25,, 28, 29]);\n\n            if (!(models_2_1 && !models_2_1.done && (_c = models_2.return))) return [3\n            /*break*/\n            , 27];\n            return [4\n            /*yield*/\n            , _c.call(models_2)];\n\n          case 26:\n            _e.sent();\n\n            _e.label = 27;\n\n          case 27:\n            return [3\n            /*break*/\n            , 29];\n\n          case 28:\n            if (e_10) throw e_10.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 29:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 30:\n            return [3\n            /*break*/\n            , 33];\n\n          case 31:\n            // Intentionally blank\n            return [3\n            /*break*/\n            , 33];\n\n          case 32:\n            exhaustiveCheck(relationType);\n            return [3\n            /*break*/\n            , 33];\n\n          case 33:\n            return [3\n            /*break*/\n            , 1];\n\n          case 34:\n            return [3\n            /*break*/\n            , 41];\n\n          case 35:\n            e_8_1 = _e.sent();\n            e_8 = {\n              error: e_8_1\n            };\n            return [3\n            /*break*/\n            , 41];\n\n          case 36:\n            _e.trys.push([36,, 39, 40]);\n\n            if (!(relations_2_1 && !relations_2_1.done && (_a = relations_2.return))) return [3\n            /*break*/\n            , 38];\n            return [4\n            /*yield*/\n            , _a.call(relations_2)];\n\n          case 37:\n            _e.sent();\n\n            _e.label = 38;\n\n          case 38:\n            return [3\n            /*break*/\n            , 40];\n\n          case 39:\n            if (e_8) throw e_8.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 40:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 41:\n            deleteQueue.push({\n              storeName: this.getStorename(nameSpace, srcModel),\n              items: models.map(function (record) {\n                return _this.modelInstanceCreator(_this.getModelConstructorByModelName(nameSpace, srcModel), record);\n              })\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            this.db.close();\n            return [4\n            /*yield*/\n            , idb.deleteDB(this.dbName)];\n\n          case 2:\n            _a.sent();\n\n            this.db = undefined;\n            this.initPromise = undefined;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, storeName, txn, store, _loop_1, this_1, items_2, items_2_1, item, e_11_1;\n\n      var e_11, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            result = [];\n            storeName = this.getStorenameForModel(modelConstructor);\n            txn = this.db.transaction(storeName, 'readwrite');\n            store = txn.store;\n\n            _loop_1 = function (item) {\n              var connectedModels, id, _deleted, index, key, instance;\n\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    connectedModels = traverseModel(modelConstructor.name, this_1.modelInstanceCreator(modelConstructor, item), this_1.schema.namespaces[this_1.namespaceResolver(modelConstructor)], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                    id = item.id, _deleted = item._deleted;\n                    index = store.index('byId');\n                    return [4\n                    /*yield*/\n                    , index.getKey(id)];\n\n                  case 1:\n                    key = _a.sent();\n                    if (!!_deleted) return [3\n                    /*break*/\n                    , 3];\n                    instance = connectedModels.find(function (_a) {\n                      var instance = _a.instance;\n                      return instance.id === id;\n                    }).instance;\n                    result.push([instance, key ? OpType.UPDATE : OpType.INSERT]);\n                    return [4\n                    /*yield*/\n                    , store.put(instance, key)];\n\n                  case 2:\n                    _a.sent();\n\n                    return [3\n                    /*break*/\n                    , 5];\n\n                  case 3:\n                    result.push([item, OpType.DELETE]);\n                    if (!key) return [3\n                    /*break*/\n                    , 5];\n                    return [4\n                    /*yield*/\n                    , store.delete(key)];\n\n                  case 4:\n                    _a.sent();\n\n                    _a.label = 5;\n\n                  case 5:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 7, 8, 9]);\n\n            items_2 = __values(items), items_2_1 = items_2.next();\n            _b.label = 3;\n\n          case 3:\n            if (!!items_2_1.done) return [3\n            /*break*/\n            , 6];\n            item = items_2_1.value;\n            return [5\n            /*yield**/\n            , _loop_1(item)];\n\n          case 4:\n            _b.sent();\n\n            _b.label = 5;\n\n          case 5:\n            items_2_1 = items_2.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 6:\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            e_11_1 = _b.sent();\n            e_11 = {\n              error: e_11_1\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            try {\n              if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n            } finally {\n              if (e_11) throw e_11.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [4\n            /*yield*/\n            , txn.done];\n\n          case 10:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.createObjectStoreForModel = function (db, namespaceName, storeName, modelName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var store, indexes;\n      return __generator(this, function (_a) {\n        store = db.createObjectStore(storeName, {\n          autoIncrement: true\n        });\n        indexes = this.schema.namespaces[namespaceName].relationships[modelName].indexes;\n        indexes.forEach(function (index) {\n          return store.createIndex(index, index);\n        });\n        store.createIndex('byId', 'id', {\n          unique: true\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return IndexedDBAdapter;\n}();\n\nexport default new IndexedDBAdapter();","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","idb","ModelPredicateCreator","ModelSortPredicateCreator","isPredicateObj","OpType","QueryOne","exhaustiveCheck","getIndex","getIndexFromAssociation","isModelConstructor","isPrivateMode","traverseModel","validatePredicate","sortCompareFunction","logger","DB_NAME","IndexedDBAdapter","then","isPrivate","_a","error","Promise","reject","resolve","modelConstructor","namespace","namespaceResolver","getStorename","modelName","storeName","theSchema","modelInstanceCreator","getModelConstructorByModelName","sessionId","checkPrivate","_b","initPromise","res","rej","_this","dbName","schema","db","VERSION","openDB","upgrade","oldVersion","newVersion","txn","Object","keys","namespaces","forEach","namespaceName","models","createObjectStoreForModel","objectStoreNames","origStore","objectStore","tmpName","name","newStore","createObjectStore","keyPath","undefined","autoIncrement","createIndex","unique","openCursor","cursor","_d","count","value","put","continue","deleteObjectStore","debug","Set","map","filter","has","error_2","abort","error_1","storeOrStoreName","id","index","transaction","store","get","result","model","condition","getPrototypeOf","constructor","getStorenameForModel","connectedModels","set","connectionStoreNames","values","item","instance","add","tx","__spread","Array","from","_get","fromDB","predicates","getPredicates","predicateObjs","type","isValid","msg","Error","connectionStoreNames_1","resItem","storeName_1","store_1","fromDB_1","opType","INSERT","UPDATE","getKey","key","push","done","srcModelName","records","relations","relationships","relationTypes","length","record","relations_1","relation","fieldName","targetName","modelConstructor_1","relationType","records_1","recordItem","getByfield","connectionRecord","_e","records_2","predicate","pagination","queryById","idFromPredicate","hasSort","sort","hasPagination","limit","getById","filterOnPredicate","filtered","inMemoryPagination","getAll","all","enginePagination","load","idPredicate","find","p","field","operator","operand","m","sortPredicates","compareFn","start","Math","max","page","end","slice","initialRecord","_c","advance","pageResults","hasLimit","firstOrLast","FIRST","modelOrModelConstructor","deleteQueue","nameSpace","query","deleteTraverse","deleteItem","deletedModels","reduce","acc","items","concat","clear","warn","deleteQueue_1","items_1","toString","delete","srcModel","relations_2","rel","indexes","associatedWith","models_1","hasOneIndex","hasOneCustomField","recordToDelete","models_2","childrenArray","close","deleteDB","this_1","_deleted","DELETE","items_2","items_2_1"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-amplify/datastore/src/storage/adapter/IndexedDBAdapter.ts"],"sourcesContent":["import { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { ModelInstanceCreator } from '../../datastore/datastore';\nimport {\n\tModelPredicateCreator,\n\tModelSortPredicateCreator,\n} from '../../predicates';\nimport {\n\tInternalSchema,\n\tisPredicateObj,\n\tModelInstanceMetadata,\n\tModelPredicate,\n\tNamespaceResolver,\n\tOpType,\n\tPaginationInput,\n\tPersistentModel,\n\tPersistentModelConstructor,\n\tPredicateObject,\n\tPredicatesGroup,\n\tQueryOne,\n\tRelationType,\n} from '../../types';\nimport {\n\texhaustiveCheck,\n\tgetIndex,\n\tgetIndexFromAssociation,\n\tisModelConstructor,\n\tisPrivateMode,\n\ttraverseModel,\n\tvalidatePredicate,\n\tsortCompareFunction,\n} from '../../util';\nimport { Adapter } from './index';\n\nconst logger = new Logger('DataStore');\n\nconst DB_NAME = 'amplify-datastore';\n\nclass IndexedDBAdapter implements Adapter {\n\tprivate schema: InternalSchema;\n\tprivate namespaceResolver: NamespaceResolver;\n\tprivate modelInstanceCreator: ModelInstanceCreator;\n\tprivate getModelConstructorByModelName: (\n\t\tnamsespaceName: string,\n\t\tmodelName: string\n\t) => PersistentModelConstructor<any>;\n\tprivate db: idb.IDBPDatabase;\n\tprivate initPromise: Promise<void>;\n\tprivate resolve: (value?: any) => void;\n\tprivate reject: (value?: any) => void;\n\tprivate dbName: string = DB_NAME;\n\n\tprivate async checkPrivate() {\n\t\tconst isPrivate = await isPrivateMode().then(isPrivate => {\n\t\t\treturn isPrivate;\n\t\t});\n\t\tif (isPrivate) {\n\t\t\tlogger.error(\"IndexedDB not supported in this browser's private mode\");\n\t\t\treturn Promise.reject(\n\t\t\t\t\"IndexedDB not supported in this browser's private mode\"\n\t\t\t);\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tprivate getStorenameForModel(\n\t\tmodelConstructor: PersistentModelConstructor<any>\n\t) {\n\t\tconst namespace = this.namespaceResolver(modelConstructor);\n\t\tconst { name: modelName } = modelConstructor;\n\n\t\treturn this.getStorename(namespace, modelName);\n\t}\n\n\tprivate getStorename(namespace: string, modelName: string) {\n\t\tconst storeName = `${namespace}_${modelName}`;\n\n\t\treturn storeName;\n\t}\n\n\tasync setUp(\n\t\ttheSchema: InternalSchema,\n\t\tnamespaceResolver: NamespaceResolver,\n\t\tmodelInstanceCreator: ModelInstanceCreator,\n\t\tgetModelConstructorByModelName: (\n\t\t\tnamsespaceName: string,\n\t\t\tmodelName: string\n\t\t) => PersistentModelConstructor<any>,\n\t\tsessionId?: string\n\t) {\n\t\tawait this.checkPrivate();\n\t\tif (!this.initPromise) {\n\t\t\tthis.initPromise = new Promise((res, rej) => {\n\t\t\t\tthis.resolve = res;\n\t\t\t\tthis.reject = rej;\n\t\t\t});\n\t\t} else {\n\t\t\tawait this.initPromise;\n\t\t}\n\t\tif (sessionId) {\n\t\t\tthis.dbName = `${DB_NAME}-${sessionId}`;\n\t\t}\n\t\tthis.schema = theSchema;\n\t\tthis.namespaceResolver = namespaceResolver;\n\t\tthis.modelInstanceCreator = modelInstanceCreator;\n\t\tthis.getModelConstructorByModelName = getModelConstructorByModelName;\n\n\t\ttry {\n\t\t\tif (!this.db) {\n\t\t\t\tconst VERSION = 2;\n\t\t\t\tthis.db = await idb.openDB(this.dbName, VERSION, {\n\t\t\t\t\tupgrade: async (db, oldVersion, newVersion, txn) => {\n\t\t\t\t\t\tif (oldVersion === 0) {\n\t\t\t\t\t\t\tObject.keys(theSchema.namespaces).forEach(namespaceName => {\n\t\t\t\t\t\t\t\tconst namespace = theSchema.namespaces[namespaceName];\n\n\t\t\t\t\t\t\t\tObject.keys(namespace.models).forEach(modelName => {\n\t\t\t\t\t\t\t\t\tconst storeName = this.getStorename(namespaceName, modelName);\n\t\t\t\t\t\t\t\t\tthis.createObjectStoreForModel(\n\t\t\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\t\t\tnamespaceName,\n\t\t\t\t\t\t\t\t\t\tstoreName,\n\t\t\t\t\t\t\t\t\t\tmodelName\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (oldVersion === 1 && newVersion === 2) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (const storeName of txn.objectStoreNames) {\n\t\t\t\t\t\t\t\t\tconst origStore = txn.objectStore(storeName);\n\n\t\t\t\t\t\t\t\t\t// rename original store\n\t\t\t\t\t\t\t\t\tconst tmpName = `tmp_${storeName}`;\n\t\t\t\t\t\t\t\t\torigStore.name = tmpName;\n\n\t\t\t\t\t\t\t\t\t// create new store with original name\n\t\t\t\t\t\t\t\t\tconst newStore = db.createObjectStore(storeName, {\n\t\t\t\t\t\t\t\t\t\tkeyPath: undefined,\n\t\t\t\t\t\t\t\t\t\tautoIncrement: true,\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tnewStore.createIndex('byId', 'id', { unique: true });\n\n\t\t\t\t\t\t\t\t\tlet cursor = await origStore.openCursor();\n\t\t\t\t\t\t\t\t\tlet count = 0;\n\n\t\t\t\t\t\t\t\t\t// Copy data from original to new\n\t\t\t\t\t\t\t\t\twhile (cursor && cursor.value) {\n\t\t\t\t\t\t\t\t\t\t// we don't pass key, since they are all new entries in the new store\n\t\t\t\t\t\t\t\t\t\tawait newStore.put(cursor.value);\n\n\t\t\t\t\t\t\t\t\t\tcursor = await cursor.continue();\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// delete original\n\t\t\t\t\t\t\t\t\tdb.deleteObjectStore(tmpName);\n\n\t\t\t\t\t\t\t\t\tlogger.debug(`${count} ${storeName} records migrated`);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// add new models created after IndexedDB, but before migration\n\t\t\t\t\t\t\t\t// this case may happen when a user has not opened an app for\n\t\t\t\t\t\t\t\t// some time and a new model is added during that time\n\t\t\t\t\t\t\t\tObject.keys(theSchema.namespaces).forEach(namespaceName => {\n\t\t\t\t\t\t\t\t\tconst namespace = theSchema.namespaces[namespaceName];\n\t\t\t\t\t\t\t\t\tconst objectStoreNames = new Set(txn.objectStoreNames);\n\n\t\t\t\t\t\t\t\t\tObject.keys(namespace.models)\n\t\t\t\t\t\t\t\t\t\t.map(modelName => {\n\t\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\t\tmodelName,\n\t\t\t\t\t\t\t\t\t\t\t\tthis.getStorename(namespaceName, modelName),\n\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.filter(([, storeName]) => !objectStoreNames.has(storeName))\n\t\t\t\t\t\t\t\t\t\t.forEach(([modelName, storeName]) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.createObjectStoreForModel(\n\t\t\t\t\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\t\t\t\t\tnamespaceName,\n\t\t\t\t\t\t\t\t\t\t\t\tstoreName,\n\t\t\t\t\t\t\t\t\t\t\t\tmodelName\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tlogger.error('Error migrating IndexedDB data', error);\n\t\t\t\t\t\t\t\ttxn.abort();\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tthis.resolve();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.reject(error);\n\t\t}\n\t}\n\n\tprivate async _get<T>(\n\t\tstoreOrStoreName: idb.IDBPObjectStore | string,\n\t\tid: string\n\t): Promise<T> {\n\t\tlet index: idb.IDBPIndex;\n\n\t\tif (typeof storeOrStoreName === 'string') {\n\t\t\tconst storeName = storeOrStoreName;\n\t\t\tindex = this.db.transaction(storeName, 'readonly').store.index('byId');\n\t\t} else {\n\t\t\tconst store = storeOrStoreName;\n\t\t\tindex = store.index('byId');\n\t\t}\n\n\t\tconst result = await index.get(id);\n\n\t\treturn result;\n\t}\n\n\tasync save<T extends PersistentModel>(\n\t\tmodel: T,\n\t\tcondition?: ModelPredicate<T>\n\t): Promise<[T, OpType.INSERT | OpType.UPDATE][]> {\n\t\tawait this.checkPrivate();\n\t\tconst modelConstructor = Object.getPrototypeOf(model)\n\t\t\t.constructor as PersistentModelConstructor<T>;\n\t\tconst storeName = this.getStorenameForModel(modelConstructor);\n\t\tconst connectedModels = traverseModel(\n\t\t\tmodelConstructor.name,\n\t\t\tmodel,\n\t\t\tthis.schema.namespaces[this.namespaceResolver(modelConstructor)],\n\t\t\tthis.modelInstanceCreator,\n\t\t\tthis.getModelConstructorByModelName\n\t\t);\n\t\tconst namespaceName = this.namespaceResolver(modelConstructor);\n\n\t\tconst set = new Set<string>();\n\t\tconst connectionStoreNames = Object.values(connectedModels).map(\n\t\t\t({ modelName, item, instance }) => {\n\t\t\t\tconst storeName = this.getStorename(namespaceName, modelName);\n\t\t\t\tset.add(storeName);\n\t\t\t\treturn { storeName, item, instance };\n\t\t\t}\n\t\t);\n\n\t\tconst tx = this.db.transaction(\n\t\t\t[storeName, ...Array.from(set.values())],\n\t\t\t'readwrite'\n\t\t);\n\t\tconst store = tx.objectStore(storeName);\n\n\t\tconst fromDB = await this._get(store, model.id);\n\n\t\tif (condition && fromDB) {\n\t\t\tconst predicates = ModelPredicateCreator.getPredicates(condition);\n\t\t\tconst { predicates: predicateObjs, type } = predicates;\n\n\t\t\tconst isValid = validatePredicate(fromDB, type, predicateObjs);\n\n\t\t\tif (!isValid) {\n\t\t\t\tconst msg = 'Conditional update failed';\n\t\t\t\tlogger.error(msg, { model: fromDB, condition: predicateObjs });\n\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\tconst result: [T, OpType.INSERT | OpType.UPDATE][] = [];\n\n\t\tfor await (const resItem of connectionStoreNames) {\n\t\t\tconst { storeName, item, instance } = resItem;\n\t\t\tconst store = tx.objectStore(storeName);\n\t\t\tconst { id } = item;\n\n\t\t\tconst fromDB = <T>await this._get(store, id);\n\t\t\tconst opType: OpType =\n\t\t\t\tfromDB === undefined ? OpType.INSERT : OpType.UPDATE;\n\n\t\t\t// Even if the parent is an INSERT, the child might not be, so we need to get its key\n\t\t\tif (id === model.id || opType === OpType.INSERT) {\n\t\t\t\tconst key = await store.index('byId').getKey(item.id);\n\t\t\t\tawait store.put(item, key);\n\n\t\t\t\tresult.push([instance, opType]);\n\t\t\t}\n\t\t}\n\n\t\tawait tx.done;\n\n\t\treturn result;\n\t}\n\n\tprivate async load<T>(\n\t\tnamespaceName: string,\n\t\tsrcModelName: string,\n\t\trecords: T[]\n\t): Promise<T[]> {\n\t\tconst namespace = this.schema.namespaces[namespaceName];\n\t\tconst relations = namespace.relationships[srcModelName].relationTypes;\n\t\tconst connectionStoreNames = relations.map(({ modelName }) => {\n\t\t\treturn this.getStorename(namespaceName, modelName);\n\t\t});\n\t\tconst modelConstructor = this.getModelConstructorByModelName(\n\t\t\tnamespaceName,\n\t\t\tsrcModelName\n\t\t);\n\n\t\tif (connectionStoreNames.length === 0) {\n\t\t\treturn records.map(record =>\n\t\t\t\tthis.modelInstanceCreator(modelConstructor, record)\n\t\t\t);\n\t\t}\n\n\t\tconst tx = this.db.transaction([...connectionStoreNames], 'readonly');\n\n\t\tfor await (const relation of relations) {\n\t\t\tconst { fieldName, modelName, targetName } = relation;\n\t\t\tconst storeName = this.getStorename(namespaceName, modelName);\n\t\t\tconst store = tx.objectStore(storeName);\n\t\t\tconst modelConstructor = this.getModelConstructorByModelName(\n\t\t\t\tnamespaceName,\n\t\t\t\tmodelName\n\t\t\t);\n\n\t\t\tswitch (relation.relationType) {\n\t\t\t\tcase 'HAS_ONE':\n\t\t\t\t\tfor await (const recordItem of records) {\n\t\t\t\t\t\tconst getByfield = recordItem[targetName] ? targetName : fieldName;\n\t\t\t\t\t\tif (!recordItem[getByfield]) break;\n\n\t\t\t\t\t\tconst connectionRecord = await this._get(\n\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\trecordItem[getByfield]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\trecordItem[fieldName] =\n\t\t\t\t\t\t\tconnectionRecord &&\n\t\t\t\t\t\t\tthis.modelInstanceCreator(modelConstructor, connectionRecord);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BELONGS_TO':\n\t\t\t\t\tfor await (const recordItem of records) {\n\t\t\t\t\t\tif (recordItem[targetName]) {\n\t\t\t\t\t\t\tconst connectionRecord = await this._get(\n\t\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\t\trecordItem[targetName]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\trecordItem[fieldName] =\n\t\t\t\t\t\t\t\tconnectionRecord &&\n\t\t\t\t\t\t\t\tthis.modelInstanceCreator(modelConstructor, connectionRecord);\n\t\t\t\t\t\t\tdelete recordItem[targetName];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'HAS_MANY':\n\t\t\t\t\t// TODO: Lazy loading\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\texhaustiveCheck(relation.relationType);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn records.map(record =>\n\t\t\tthis.modelInstanceCreator(modelConstructor, record)\n\t\t);\n\t}\n\n\tasync query<T extends PersistentModel>(\n\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\tpredicate?: ModelPredicate<T>,\n\t\tpagination?: PaginationInput<T>\n\t): Promise<T[]> {\n\t\tawait this.checkPrivate();\n\t\tconst storeName = this.getStorenameForModel(modelConstructor);\n\t\tconst namespaceName = this.namespaceResolver(modelConstructor);\n\n\t\tconst predicates =\n\t\t\tpredicate && ModelPredicateCreator.getPredicates(predicate);\n\t\tconst queryById = predicates && this.idFromPredicate(predicates);\n\t\tconst hasSort = pagination && pagination.sort;\n\t\tconst hasPagination = pagination && pagination.limit;\n\n\t\tconst records: T[] = await (async () => {\n\t\t\tif (queryById) {\n\t\t\t\tconst record = await this.getById(storeName, queryById);\n\t\t\t\treturn record ? [record] : [];\n\t\t\t}\n\n\t\t\tif (predicates) {\n\t\t\t\tconst filtered = await this.filterOnPredicate(storeName, predicates);\n\t\t\t\treturn this.inMemoryPagination(filtered, pagination);\n\t\t\t}\n\n\t\t\tif (hasSort) {\n\t\t\t\tconst all = await this.getAll(storeName);\n\t\t\t\treturn this.inMemoryPagination(all, pagination);\n\t\t\t}\n\n\t\t\tif (hasPagination) {\n\t\t\t\treturn this.enginePagination(storeName, pagination);\n\t\t\t}\n\n\t\t\treturn this.getAll(storeName);\n\t\t})();\n\n\t\treturn await this.load(namespaceName, modelConstructor.name, records);\n\t}\n\n\tprivate async getById<T extends PersistentModel>(\n\t\tstoreName: string,\n\t\tid: string\n\t): Promise<T> {\n\t\tconst record = <T>await this._get(storeName, id);\n\t\treturn record;\n\t}\n\n\tprivate async getAll<T extends PersistentModel>(\n\t\tstoreName: string\n\t): Promise<T[]> {\n\t\treturn await this.db.getAll(storeName);\n\t}\n\n\tprivate idFromPredicate<T extends PersistentModel>(\n\t\tpredicates: PredicatesGroup<T>\n\t) {\n\t\tconst { predicates: predicateObjs } = predicates;\n\t\tconst idPredicate =\n\t\t\tpredicateObjs.length === 1 &&\n\t\t\t(predicateObjs.find(\n\t\t\t\tp => isPredicateObj(p) && p.field === 'id' && p.operator === 'eq'\n\t\t\t) as PredicateObject<T>);\n\n\t\treturn idPredicate && idPredicate.operand;\n\t}\n\n\tprivate async filterOnPredicate<T extends PersistentModel>(\n\t\tstoreName: string,\n\t\tpredicates: PredicatesGroup<T>\n\t) {\n\t\tconst { predicates: predicateObjs, type } = predicates;\n\n\t\tconst all = <T[]>await this.getAll(storeName);\n\n\t\tconst filtered = predicateObjs\n\t\t\t? all.filter(m => validatePredicate(m, type, predicateObjs))\n\t\t\t: all;\n\n\t\treturn filtered;\n\t}\n\n\tprivate inMemoryPagination<T extends PersistentModel>(\n\t\trecords: T[],\n\t\tpagination?: PaginationInput<T>\n\t): T[] {\n\t\tif (pagination && records.length > 1) {\n\t\t\tif (pagination.sort) {\n\t\t\t\tconst sortPredicates = ModelSortPredicateCreator.getPredicates(\n\t\t\t\t\tpagination.sort\n\t\t\t\t);\n\n\t\t\t\tif (sortPredicates.length) {\n\t\t\t\t\tconst compareFn = sortCompareFunction(sortPredicates);\n\t\t\t\t\trecords.sort(compareFn);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { page = 0, limit = 0 } = pagination;\n\t\t\tconst start = Math.max(0, page * limit) || 0;\n\n\t\t\tconst end = limit > 0 ? start + limit : records.length;\n\n\t\t\treturn records.slice(start, end);\n\t\t}\n\t\treturn records;\n\t}\n\n\tprivate async enginePagination<T extends PersistentModel>(\n\t\tstoreName: string,\n\t\tpagination?: PaginationInput<T>\n\t): Promise<T[]> {\n\t\tlet result: T[];\n\n\t\tif (pagination) {\n\t\t\tconst { page = 0, limit = 0 } = pagination;\n\t\t\tconst initialRecord = Math.max(0, page * limit) || 0;\n\n\t\t\tlet cursor = await this.db\n\t\t\t\t.transaction(storeName)\n\t\t\t\t.objectStore(storeName)\n\t\t\t\t.openCursor();\n\n\t\t\tif (cursor && initialRecord > 0) {\n\t\t\t\tawait cursor.advance(initialRecord);\n\t\t\t}\n\n\t\t\tconst pageResults: T[] = [];\n\t\t\tconst hasLimit = typeof limit === 'number' && limit > 0;\n\n\t\t\twhile (cursor && cursor.value) {\n\t\t\t\tpageResults.push(cursor.value);\n\n\t\t\t\tif (hasLimit && pageResults.length === limit) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcursor = await cursor.continue();\n\t\t\t}\n\n\t\t\tresult = pageResults;\n\t\t} else {\n\t\t\tresult = <T[]>await this.db.getAll(storeName);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync queryOne<T extends PersistentModel>(\n\t\tmodelConstructor: PersistentModelConstructor<T>,\n\t\tfirstOrLast: QueryOne = QueryOne.FIRST\n\t): Promise<T | undefined> {\n\t\tawait this.checkPrivate();\n\t\tconst storeName = this.getStorenameForModel(modelConstructor);\n\n\t\tconst cursor = await this.db\n\t\t\t.transaction([storeName], 'readonly')\n\t\t\t.objectStore(storeName)\n\t\t\t.openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev');\n\n\t\tconst result = cursor ? <T>cursor.value : undefined;\n\n\t\treturn result && this.modelInstanceCreator(modelConstructor, result);\n\t}\n\n\tasync delete<T extends PersistentModel>(\n\t\tmodelOrModelConstructor: T | PersistentModelConstructor<T>,\n\t\tcondition?: ModelPredicate<T>\n\t): Promise<[T[], T[]]> {\n\t\tawait this.checkPrivate();\n\t\tconst deleteQueue: { storeName: string; items: T[] }[] = [];\n\n\t\tif (isModelConstructor(modelOrModelConstructor)) {\n\t\t\tconst modelConstructor = modelOrModelConstructor;\n\t\t\tconst nameSpace = this.namespaceResolver(modelConstructor);\n\n\t\t\tconst storeName = this.getStorenameForModel(modelConstructor);\n\n\t\t\tconst models = await this.query(modelConstructor, condition);\n\t\t\tconst relations =\n\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelConstructor.name]\n\t\t\t\t\t.relationTypes;\n\n\t\t\tif (condition !== undefined) {\n\t\t\t\tawait this.deleteTraverse(\n\t\t\t\t\trelations,\n\t\t\t\t\tmodels,\n\t\t\t\t\tmodelConstructor.name,\n\t\t\t\t\tnameSpace,\n\t\t\t\t\tdeleteQueue\n\t\t\t\t);\n\n\t\t\t\tawait this.deleteItem(deleteQueue);\n\n\t\t\t\tconst deletedModels = deleteQueue.reduce(\n\t\t\t\t\t(acc, { items }) => acc.concat(items),\n\t\t\t\t\t<T[]>[]\n\t\t\t\t);\n\n\t\t\t\treturn [models, deletedModels];\n\t\t\t} else {\n\t\t\t\tawait this.deleteTraverse(\n\t\t\t\t\trelations,\n\t\t\t\t\tmodels,\n\t\t\t\t\tmodelConstructor.name,\n\t\t\t\t\tnameSpace,\n\t\t\t\t\tdeleteQueue\n\t\t\t\t);\n\n\t\t\t\t// Delete all\n\t\t\t\tawait this.db\n\t\t\t\t\t.transaction([storeName], 'readwrite')\n\t\t\t\t\t.objectStore(storeName)\n\t\t\t\t\t.clear();\n\n\t\t\t\tconst deletedModels = deleteQueue.reduce(\n\t\t\t\t\t(acc, { items }) => acc.concat(items),\n\t\t\t\t\t<T[]>[]\n\t\t\t\t);\n\n\t\t\t\treturn [models, deletedModels];\n\t\t\t}\n\t\t} else {\n\t\t\tconst model = modelOrModelConstructor;\n\n\t\t\tconst modelConstructor = Object.getPrototypeOf(model)\n\t\t\t\t.constructor as PersistentModelConstructor<T>;\n\t\t\tconst nameSpace = this.namespaceResolver(modelConstructor);\n\n\t\t\tconst storeName = this.getStorenameForModel(modelConstructor);\n\n\t\t\tif (condition) {\n\t\t\t\tconst tx = this.db.transaction([storeName], 'readwrite');\n\t\t\t\tconst store = tx.objectStore(storeName);\n\n\t\t\t\tconst fromDB = await this._get(store, model.id);\n\n\t\t\t\tif (fromDB === undefined) {\n\t\t\t\t\tconst msg = 'Model instance not found in storage';\n\t\t\t\t\tlogger.warn(msg, { model });\n\n\t\t\t\t\treturn [[model], []];\n\t\t\t\t}\n\n\t\t\t\tconst predicates = ModelPredicateCreator.getPredicates(condition);\n\t\t\t\tconst { predicates: predicateObjs, type } = predicates;\n\n\t\t\t\tconst isValid = validatePredicate(fromDB, type, predicateObjs);\n\n\t\t\t\tif (!isValid) {\n\t\t\t\t\tconst msg = 'Conditional update failed';\n\t\t\t\t\tlogger.error(msg, { model: fromDB, condition: predicateObjs });\n\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t\tawait tx.done;\n\n\t\t\t\tconst relations =\n\t\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelConstructor.name]\n\t\t\t\t\t\t.relationTypes;\n\n\t\t\t\tawait this.deleteTraverse(\n\t\t\t\t\trelations,\n\t\t\t\t\t[model],\n\t\t\t\t\tmodelConstructor.name,\n\t\t\t\t\tnameSpace,\n\t\t\t\t\tdeleteQueue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst relations =\n\t\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelConstructor.name]\n\t\t\t\t\t\t.relationTypes;\n\n\t\t\t\tawait this.deleteTraverse(\n\t\t\t\t\trelations,\n\t\t\t\t\t[model],\n\t\t\t\t\tmodelConstructor.name,\n\t\t\t\t\tnameSpace,\n\t\t\t\t\tdeleteQueue\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tawait this.deleteItem(deleteQueue);\n\n\t\t\tconst deletedModels = deleteQueue.reduce(\n\t\t\t\t(acc, { items }) => acc.concat(items),\n\t\t\t\t<T[]>[]\n\t\t\t);\n\n\t\t\treturn [[model], deletedModels];\n\t\t}\n\t}\n\n\tprivate async deleteItem<T extends PersistentModel>(\n\t\tdeleteQueue?: { storeName: string; items: T[] | IDBValidKey[] }[]\n\t) {\n\t\tconst connectionStoreNames = deleteQueue.map(({ storeName }) => {\n\t\t\treturn storeName;\n\t\t});\n\n\t\tconst tx = this.db.transaction([...connectionStoreNames], 'readwrite');\n\t\tfor await (const deleteItem of deleteQueue) {\n\t\t\tconst { storeName, items } = deleteItem;\n\t\t\tconst store = tx.objectStore(storeName);\n\n\t\t\tfor await (const item of items) {\n\t\t\t\tif (item) {\n\t\t\t\t\tlet key: IDBValidKey;\n\n\t\t\t\t\tif (typeof item === 'object') {\n\t\t\t\t\t\tkey = await store.index('byId').getKey(item['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkey = await store.index('byId').getKey(item.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key !== undefined) {\n\t\t\t\t\t\tawait store.delete(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async deleteTraverse<T extends PersistentModel>(\n\t\trelations: RelationType[],\n\t\tmodels: T[],\n\t\tsrcModel: string,\n\t\tnameSpace: string,\n\t\tdeleteQueue: { storeName: string; items: T[] }[]\n\t): Promise<void> {\n\t\tfor await (const rel of relations) {\n\t\t\tconst { relationType, fieldName, modelName, targetName } = rel;\n\t\t\tconst storeName = this.getStorename(nameSpace, modelName);\n\n\t\t\tconst index: string =\n\t\t\t\tgetIndex(\n\t\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelName]\n\t\t\t\t\t\t.relationTypes,\n\t\t\t\t\tsrcModel\n\t\t\t\t) ||\n\t\t\t\t// if we were unable to find an index via relationTypes\n\t\t\t\t// i.e. for keyName connections, attempt to find one by the\n\t\t\t\t// associatedWith property\n\t\t\t\tgetIndexFromAssociation(\n\t\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelName].indexes,\n\t\t\t\t\trel.associatedWith\n\t\t\t\t);\n\n\t\t\tswitch (relationType) {\n\t\t\t\tcase 'HAS_ONE':\n\t\t\t\t\tfor await (const model of models) {\n\t\t\t\t\t\tconst hasOneIndex = index || 'byId';\n\n\t\t\t\t\t\tconst hasOneCustomField = targetName in model;\n\t\t\t\t\t\tconst value = hasOneCustomField ? model[targetName] : model.id;\n\t\t\t\t\t\tif (!value) break;\n\n\t\t\t\t\t\tconst recordToDelete = <T>(\n\t\t\t\t\t\t\tawait this.db\n\t\t\t\t\t\t\t\t.transaction(storeName, 'readwrite')\n\t\t\t\t\t\t\t\t.objectStore(storeName)\n\t\t\t\t\t\t\t\t.index(hasOneIndex)\n\t\t\t\t\t\t\t\t.get(value)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tawait this.deleteTraverse(\n\t\t\t\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelName]\n\t\t\t\t\t\t\t\t.relationTypes,\n\t\t\t\t\t\t\trecordToDelete ? [recordToDelete] : [],\n\t\t\t\t\t\t\tmodelName,\n\t\t\t\t\t\t\tnameSpace,\n\t\t\t\t\t\t\tdeleteQueue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'HAS_MANY':\n\t\t\t\t\tfor await (const model of models) {\n\t\t\t\t\t\tconst childrenArray = await this.db\n\t\t\t\t\t\t\t.transaction(storeName, 'readwrite')\n\t\t\t\t\t\t\t.objectStore(storeName)\n\t\t\t\t\t\t\t.index(index)\n\t\t\t\t\t\t\t.getAll(model['id']);\n\n\t\t\t\t\t\tawait this.deleteTraverse(\n\t\t\t\t\t\t\tthis.schema.namespaces[nameSpace].relationships[modelName]\n\t\t\t\t\t\t\t\t.relationTypes,\n\t\t\t\t\t\t\tchildrenArray,\n\t\t\t\t\t\t\tmodelName,\n\t\t\t\t\t\t\tnameSpace,\n\t\t\t\t\t\t\tdeleteQueue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BELONGS_TO':\n\t\t\t\t\t// Intentionally blank\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\texhaustiveCheck(relationType);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdeleteQueue.push({\n\t\t\tstoreName: this.getStorename(nameSpace, srcModel),\n\t\t\titems: models.map(record =>\n\t\t\t\tthis.modelInstanceCreator(\n\t\t\t\t\tthis.getModelConstructorByModelName(nameSpace, srcModel),\n\t\t\t\t\trecord\n\t\t\t\t)\n\t\t\t),\n\t\t});\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tawait this.checkPrivate();\n\n\t\tthis.db.close();\n\n\t\tawait idb.deleteDB(this.dbName);\n\n\t\tthis.db = undefined;\n\t\tthis.initPromise = undefined;\n\t}\n\n\tasync batchSave<T extends PersistentModel>(\n\t\tmodelConstructor: PersistentModelConstructor<any>,\n\t\titems: ModelInstanceMetadata[]\n\t): Promise<[T, OpType][]> {\n\t\tif (items.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tawait this.checkPrivate();\n\n\t\tconst result: [T, OpType][] = [];\n\n\t\tconst storeName = this.getStorenameForModel(modelConstructor);\n\n\t\tconst txn = this.db.transaction(storeName, 'readwrite');\n\t\tconst store = txn.store;\n\n\t\tfor (const item of items) {\n\t\t\tconst connectedModels = traverseModel(\n\t\t\t\tmodelConstructor.name,\n\t\t\t\tthis.modelInstanceCreator(modelConstructor, item),\n\t\t\t\tthis.schema.namespaces[this.namespaceResolver(modelConstructor)],\n\t\t\t\tthis.modelInstanceCreator,\n\t\t\t\tthis.getModelConstructorByModelName\n\t\t\t);\n\n\t\t\tconst { id, _deleted } = item;\n\t\t\tconst index = store.index('byId');\n\t\t\tconst key = await index.getKey(id);\n\n\t\t\tif (!_deleted) {\n\t\t\t\tconst { instance } = connectedModels.find(\n\t\t\t\t\t({ instance }) => instance.id === id\n\t\t\t\t);\n\n\t\t\t\tresult.push([\n\t\t\t\t\t<T>(<unknown>instance),\n\t\t\t\t\tkey ? OpType.UPDATE : OpType.INSERT,\n\t\t\t\t]);\n\t\t\t\tawait store.put(instance, key);\n\t\t\t} else {\n\t\t\t\tresult.push([<T>(<unknown>item), OpType.DELETE]);\n\n\t\t\t\tif (key) {\n\t\t\t\t\tawait store.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait txn.done;\n\n\t\treturn result;\n\t}\n\n\tprivate async createObjectStoreForModel(\n\t\tdb: idb.IDBPDatabase,\n\t\tnamespaceName: string,\n\t\tstoreName: string,\n\t\tmodelName: string\n\t) {\n\t\tconst store = db.createObjectStore(storeName, {\n\t\t\tautoIncrement: true,\n\t\t});\n\n\t\tconst indexes =\n\t\t\tthis.schema.namespaces[namespaceName].relationships[modelName].indexes;\n\t\tindexes.forEach(index => store.createIndex(index, index));\n\n\t\tstore.createIndex('byId', 'id', { unique: true });\n\t}\n}\n\nexport default new IndexedDBAdapter();\n"]},"metadata":{},"sourceType":"module"}