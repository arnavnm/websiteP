{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nexport var retryMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          if ((_a = options === null || options === void 0 ? void 0 : options.retryStrategy) === null || _a === void 0 ? void 0 : _a.mode) context.userAgent = __spread(context.userAgent || [], [[\"cfg/retry-mode\", options.retryStrategy.mode]]);\n          return [2\n          /*return*/\n          , options.retryStrategy.retry(next, args)];\n        });\n      });\n    };\n  };\n};\nexport var retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true\n};\nexport var getRetryPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,OAAO,IAAIC,eAAe,GAAG,UAAUC,OAAV,EAAmB;EAAE,OAAO,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;IAAE,OAAO,UAAUC,IAAV,EAAgB;MAAE,OAAOR,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;QAC9J,IAAIS,EAAJ;;QACA,OAAOR,WAAW,CAAC,IAAD,EAAO,UAAUS,EAAV,EAAc;UACnC,IAAI,CAACD,EAAE,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACM,aAAhE,MAAmF,IAAnF,IAA2FF,EAAE,KAAK,KAAK,CAAvG,GAA2G,KAAK,CAAhH,GAAoHA,EAAE,CAACG,IAA3H,EACIL,OAAO,CAACM,SAAR,GAAoBV,QAAQ,CAAEI,OAAO,CAACM,SAAR,IAAqB,EAAvB,EAA4B,CAAC,CAAC,gBAAD,EAAmBR,OAAO,CAACM,aAAR,CAAsBC,IAAzC,CAAD,CAA5B,CAA5B;UACJ,OAAO,CAAC;UAAE;UAAH,EAAeP,OAAO,CAACM,aAAR,CAAsBG,KAAtB,CAA4BR,IAA5B,EAAkCE,IAAlC,CAAf,CAAP;QACH,CAJiB,CAAlB;MAKH,CAP4H,CAAhB;IAOxG,CAP+E;EAO5E,CAP0C;AAOvC,CAPJ;AAQP,OAAO,IAAIO,sBAAsB,GAAG;EAChCC,IAAI,EAAE,iBAD0B;EAEhCC,IAAI,EAAE,CAAC,OAAD,CAF0B;EAGhCC,IAAI,EAAE,iBAH0B;EAIhCC,QAAQ,EAAE,MAJsB;EAKhCC,QAAQ,EAAE;AALsB,CAA7B;AAOP,OAAO,IAAIC,cAAc,GAAG,UAAUhB,OAAV,EAAmB;EAAE,OAAQ;IACrDiB,YAAY,EAAE,UAAUC,WAAV,EAAuB;MACjCA,WAAW,CAACC,GAAZ,CAAgBpB,eAAe,CAACC,OAAD,CAA/B,EAA0CU,sBAA1C;IACH;EAHoD,CAAR;AAI5C,CAJE","names":["retryMiddleware","options","next","context","args","retryStrategy","_a","mode","userAgent","__spread","retry","retryMiddlewareOptions","name","tags","step","priority","override","getRetryPlugin","applyToStack","clientStack","add"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/node_modules/@aws-sdk/middleware-retry/src/retryMiddleware.ts"],"sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>,\n  context: HandlerExecutionContext\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  if (options?.retryStrategy?.mode)\n    context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", options.retryStrategy.mode]];\n  return options.retryStrategy.retry(next, args);\n};\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}