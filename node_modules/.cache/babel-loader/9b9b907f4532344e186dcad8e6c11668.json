{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\n/**\n * @internal\n */\n\nexport function validateBucketNameMiddleware() {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var Bucket, err;\n        return __generator(this, function (_a) {\n          Bucket = args.input.Bucket;\n\n          if (typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            err = new Error(\"Bucket name shouldn't contain '/', received '\" + Bucket + \"'\");\n            err.name = \"InvalidBucketName\";\n            throw err;\n          }\n\n          return [2\n          /*return*/\n          , next(__assign({}, args))];\n        });\n      });\n    };\n  };\n}\n/**\n * @internal\n */\n\nexport var validateBucketNameMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BUCKET_NAME\"],\n  name: \"validateBucketNameMiddleware\",\n  override: true\n};\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport var getValidateBucketNamePlugin = function (unused) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,QAAQ,IAAIC,WAArB,QAAwC,0BAAxC;AACA;AACA;AACA;;AACA,OAAO,SAASC,4BAAT,GAAwC;EAC3C,IAAIC,KAAK,GAAG,IAAZ;;EACA,OAAO,UAAUC,IAAV,EAAgB;IAAE,OAAO,UAAUC,IAAV,EAAgB;MAAE,OAAOP,SAAS,CAACK,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QAClG,IAAIG,MAAJ,EAAYC,GAAZ;QACA,OAAOR,WAAW,CAAC,IAAD,EAAO,UAAUS,EAAV,EAAc;UACnCF,MAAM,GAAGD,IAAI,CAACI,KAAL,CAAWH,MAApB;;UACA,IAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACL,WAAW,CAACK,MAAD,CAA1C,IAAsDA,MAAM,CAACI,OAAP,CAAe,GAAf,KAAuB,CAAjF,EAAoF;YAChFH,GAAG,GAAG,IAAII,KAAJ,CAAU,kDAAkDL,MAAlD,GAA2D,GAArE,CAAN;YACAC,GAAG,CAACK,IAAJ,GAAW,mBAAX;YACA,MAAML,GAAN;UACH;;UACD,OAAO,CAAC;UAAE;UAAH,EAAeH,IAAI,CAACP,QAAQ,CAAC,EAAD,EAAKQ,IAAL,CAAT,CAAnB,CAAP;QACH,CARiB,CAAlB;MASH,CAXiE,CAAhB;IAW7C,CAXoB;EAWjB,CAXR;AAYH;AACD;AACA;AACA;;AACA,OAAO,IAAIQ,mCAAmC,GAAG;EAC7CC,IAAI,EAAE,YADuC;EAE7CC,IAAI,EAAE,CAAC,sBAAD,CAFuC;EAG7CH,IAAI,EAAE,8BAHuC;EAI7CI,QAAQ,EAAE;AAJmC,CAA1C;AAMP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,2BAA2B,GAAG,UAAUC,MAAV,EAAkB;EAAE,OAAQ;IACjEC,YAAY,EAAE,UAAUC,WAAV,EAAuB;MACjCA,WAAW,CAACC,GAAZ,CAAgBnB,4BAA4B,EAA5C,EAAgDW,mCAAhD;IACH;EAHgE,CAAR;AAIxD,CAJE","names":["validate","validateArn","validateBucketNameMiddleware","next","args","Bucket","indexOf","err","Error","name","validateBucketNameMiddlewareOptions","step","tags","override","getValidateBucketNamePlugin","unused","applyToStack","clientStack","add"],"sources":["/Users/arnavmisra/Desktop/Portfolio-main/Portfolio/node_modules/@aws-sdk/middleware-sdk-s3/src/validate-bucket-name.ts"],"sourcesContent":["import {\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  InitializeMiddleware,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\nimport { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\n\n/**\n * @internal\n */\nexport function validateBucketNameMiddleware(): InitializeMiddleware<any, any> {\n  return <Output extends MetadataBearer>(\n    next: InitializeHandler<any, Output>\n  ): InitializeHandler<any, Output> => async (\n    args: InitializeHandlerArguments<any>\n  ): Promise<InitializeHandlerOutput<Output>> => {\n    const {\n      input: { Bucket },\n    } = args;\n    if (typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n      const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n      err.name = \"InvalidBucketName\";\n      throw err;\n    }\n    return next({ ...args });\n  };\n}\n\n/**\n * @internal\n */\nexport const validateBucketNameMiddlewareOptions: InitializeHandlerOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BUCKET_NAME\"],\n  name: \"validateBucketNameMiddleware\",\n  override: true,\n};\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getValidateBucketNamePlugin = (unused: any): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}